{
  "version": 3,
  "sources": ["../node_modules/.pnpm/js-base64@3.7.8/node_modules/js-base64/base64.mjs", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/index.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/identity.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/visit.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/directives.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/anchors.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/applyReviver.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/toJS.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Node.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Alias.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Scalar.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/createNode.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Collection.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyComment.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/foldFlowLines.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyString.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringify.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyPair.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/log.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/merge.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/addPairToJSMap.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/Pair.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyCollection.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/YAMLMap.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/map.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/nodes/YAMLSeq.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/seq.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/string.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/common/null.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/bool.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyNumber.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/float.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/int.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/core/schema.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/json/schema.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/binary.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/pairs.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/omap.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/bool.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/float.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/int.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/set.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/timestamp.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/yaml-1.1/schema.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/tags.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/schema/Schema.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/stringify/stringifyDocument.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/doc/Document.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/errors.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-props.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-contains-newline.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-flow-indent-check.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-map-includes.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-map.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-seq.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-end.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-flow-collection.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-collection.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-block-scalar.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/resolve-flow-scalar.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-scalar.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/util-empty-scalar-position.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-node.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/compose-doc.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/compose/composer.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst-scalar.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst-stringify.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/cst-visit.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/lexer.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/line-counter.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/parse/parser.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/dist/public-api.js", "../node_modules/.pnpm/yaml@2.8.1/node_modules/yaml/browser/index.js", "../_worker.js"],
  "sourcesContent": ["/**\n *  base64.ts\n *\n *  Licensed under the BSD 3-Clause License.\n *    http://opensource.org/licenses/BSD-3-Clause\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n *\n * @author Dan Kogai (https://github.com/dankogai)\n */\nconst version = '3.7.8';\n/**\n * @deprecated use lowercase `version`.\n */\nconst VERSION = version;\nconst _hasBuffer = typeof Buffer === 'function';\nconst _TD = typeof TextDecoder === 'function' ? new TextDecoder() : undefined;\nconst _TE = typeof TextEncoder === 'function' ? new TextEncoder() : undefined;\nconst b64ch = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nconst b64chs = Array.prototype.slice.call(b64ch);\nconst b64tab = ((a) => {\n    let tab = {};\n    a.forEach((c, i) => tab[c] = i);\n    return tab;\n})(b64chs);\nconst b64re = /^(?:[A-Za-z\\d+\\/]{4})*?(?:[A-Za-z\\d+\\/]{2}(?:==)?|[A-Za-z\\d+\\/]{3}=?)?$/;\nconst _fromCC = String.fromCharCode.bind(String);\nconst _U8Afrom = typeof Uint8Array.from === 'function'\n    ? Uint8Array.from.bind(Uint8Array)\n    : (it) => new Uint8Array(Array.prototype.slice.call(it, 0));\nconst _mkUriSafe = (src) => src\n    .replace(/=/g, '').replace(/[+\\/]/g, (m0) => m0 == '+' ? '-' : '_');\nconst _tidyB64 = (s) => s.replace(/[^A-Za-z0-9\\+\\/]/g, '');\n/**\n * polyfill version of `btoa`\n */\nconst btoaPolyfill = (bin) => {\n    // console.log('polyfilled');\n    let u32, c0, c1, c2, asc = '';\n    const pad = bin.length % 3;\n    for (let i = 0; i < bin.length;) {\n        if ((c0 = bin.charCodeAt(i++)) > 255 ||\n            (c1 = bin.charCodeAt(i++)) > 255 ||\n            (c2 = bin.charCodeAt(i++)) > 255)\n            throw new TypeError('invalid character found');\n        u32 = (c0 << 16) | (c1 << 8) | c2;\n        asc += b64chs[u32 >> 18 & 63]\n            + b64chs[u32 >> 12 & 63]\n            + b64chs[u32 >> 6 & 63]\n            + b64chs[u32 & 63];\n    }\n    return pad ? asc.slice(0, pad - 3) + \"===\".substring(pad) : asc;\n};\n/**\n * does what `window.btoa` of web browsers do.\n * @param {String} bin binary string\n * @returns {string} Base64-encoded string\n */\nconst _btoa = typeof btoa === 'function' ? (bin) => btoa(bin)\n    : _hasBuffer ? (bin) => Buffer.from(bin, 'binary').toString('base64')\n        : btoaPolyfill;\nconst _fromUint8Array = _hasBuffer\n    ? (u8a) => Buffer.from(u8a).toString('base64')\n    : (u8a) => {\n        // cf. https://stackoverflow.com/questions/12710001/how-to-convert-uint8-array-to-base64-encoded-string/12713326#12713326\n        const maxargs = 0x1000;\n        let strs = [];\n        for (let i = 0, l = u8a.length; i < l; i += maxargs) {\n            strs.push(_fromCC.apply(null, u8a.subarray(i, i + maxargs)));\n        }\n        return _btoa(strs.join(''));\n    };\n/**\n * converts a Uint8Array to a Base64 string.\n * @param {boolean} [urlsafe] URL-and-filename-safe a la RFC4648 \u00A75\n * @returns {string} Base64 string\n */\nconst fromUint8Array = (u8a, urlsafe = false) => urlsafe ? _mkUriSafe(_fromUint8Array(u8a)) : _fromUint8Array(u8a);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const utob = (src: string) => unescape(encodeURIComponent(src));\n// reverting good old fationed regexp\nconst cb_utob = (c) => {\n    if (c.length < 2) {\n        var cc = c.charCodeAt(0);\n        return cc < 0x80 ? c\n            : cc < 0x800 ? (_fromCC(0xc0 | (cc >>> 6))\n                + _fromCC(0x80 | (cc & 0x3f)))\n                : (_fromCC(0xe0 | ((cc >>> 12) & 0x0f))\n                    + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n                    + _fromCC(0x80 | (cc & 0x3f)));\n    }\n    else {\n        var cc = 0x10000\n            + (c.charCodeAt(0) - 0xD800) * 0x400\n            + (c.charCodeAt(1) - 0xDC00);\n        return (_fromCC(0xf0 | ((cc >>> 18) & 0x07))\n            + _fromCC(0x80 | ((cc >>> 12) & 0x3f))\n            + _fromCC(0x80 | ((cc >>> 6) & 0x3f))\n            + _fromCC(0x80 | (cc & 0x3f)));\n    }\n};\nconst re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-8 string\n * @returns {string} UTF-16 string\n */\nconst utob = (u) => u.replace(re_utob, cb_utob);\n//\nconst _encode = _hasBuffer\n    ? (s) => Buffer.from(s, 'utf8').toString('base64')\n    : _TE\n        ? (s) => _fromUint8Array(_TE.encode(s))\n        : (s) => _btoa(utob(s));\n/**\n * converts a UTF-8-encoded string to a Base64 string.\n * @param {boolean} [urlsafe] if `true` make the result URL-safe\n * @returns {string} Base64 string\n */\nconst encode = (src, urlsafe = false) => urlsafe\n    ? _mkUriSafe(_encode(src))\n    : _encode(src);\n/**\n * converts a UTF-8-encoded string to URL-safe Base64 RFC4648 \u00A75.\n * @returns {string} Base64 string\n */\nconst encodeURI = (src) => encode(src, true);\n// This trick is found broken https://github.com/dankogai/js-base64/issues/130\n// const btou = (src: string) => decodeURIComponent(escape(src));\n// reverting good old fationed regexp\nconst re_btou = /[\\xC0-\\xDF][\\x80-\\xBF]|[\\xE0-\\xEF][\\x80-\\xBF]{2}|[\\xF0-\\xF7][\\x80-\\xBF]{3}/g;\nconst cb_btou = (cccc) => {\n    switch (cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                | ((0x3f & cccc.charCodeAt(1)) << 12)\n                | ((0x3f & cccc.charCodeAt(2)) << 6)\n                | (0x3f & cccc.charCodeAt(3)), offset = cp - 0x10000;\n            return (_fromCC((offset >>> 10) + 0xD800)\n                + _fromCC((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return _fromCC(((0x0f & cccc.charCodeAt(0)) << 12)\n                | ((0x3f & cccc.charCodeAt(1)) << 6)\n                | (0x3f & cccc.charCodeAt(2)));\n        default:\n            return _fromCC(((0x1f & cccc.charCodeAt(0)) << 6)\n                | (0x3f & cccc.charCodeAt(1)));\n    }\n};\n/**\n * @deprecated should have been internal use only.\n * @param {string} src UTF-16 string\n * @returns {string} UTF-8 string\n */\nconst btou = (b) => b.replace(re_btou, cb_btou);\n/**\n * polyfill version of `atob`\n */\nconst atobPolyfill = (asc) => {\n    // console.log('polyfilled');\n    asc = asc.replace(/\\s+/g, '');\n    if (!b64re.test(asc))\n        throw new TypeError('malformed base64.');\n    asc += '=='.slice(2 - (asc.length & 3));\n    let u24, r1, r2;\n    let binArray = []; // use array to avoid minor gc in loop\n    for (let i = 0; i < asc.length;) {\n        u24 = b64tab[asc.charAt(i++)] << 18\n            | b64tab[asc.charAt(i++)] << 12\n            | (r1 = b64tab[asc.charAt(i++)]) << 6\n            | (r2 = b64tab[asc.charAt(i++)]);\n        if (r1 === 64) {\n            binArray.push(_fromCC(u24 >> 16 & 255));\n        }\n        else if (r2 === 64) {\n            binArray.push(_fromCC(u24 >> 16 & 255, u24 >> 8 & 255));\n        }\n        else {\n            binArray.push(_fromCC(u24 >> 16 & 255, u24 >> 8 & 255, u24 & 255));\n        }\n    }\n    return binArray.join('');\n};\n/**\n * does what `window.atob` of web browsers do.\n * @param {String} asc Base64-encoded string\n * @returns {string} binary string\n */\nconst _atob = typeof atob === 'function' ? (asc) => atob(_tidyB64(asc))\n    : _hasBuffer ? (asc) => Buffer.from(asc, 'base64').toString('binary')\n        : atobPolyfill;\n//\nconst _toUint8Array = _hasBuffer\n    ? (a) => _U8Afrom(Buffer.from(a, 'base64'))\n    : (a) => _U8Afrom(_atob(a).split('').map(c => c.charCodeAt(0)));\n/**\n * converts a Base64 string to a Uint8Array.\n */\nconst toUint8Array = (a) => _toUint8Array(_unURI(a));\n//\nconst _decode = _hasBuffer\n    ? (a) => Buffer.from(a, 'base64').toString('utf8')\n    : _TD\n        ? (a) => _TD.decode(_toUint8Array(a))\n        : (a) => btou(_atob(a));\nconst _unURI = (a) => _tidyB64(a.replace(/[-_]/g, (m0) => m0 == '-' ? '+' : '/'));\n/**\n * converts a Base64 string to a UTF-8 string.\n * @param {String} src Base64 string.  Both normal and URL-safe are supported\n * @returns {string} UTF-8 string\n */\nconst decode = (src) => _decode(_unURI(src));\n/**\n * check if a value is a valid Base64 string\n * @param {String} src a value to check\n  */\nconst isValid = (src) => {\n    if (typeof src !== 'string')\n        return false;\n    const s = src.replace(/\\s+/g, '').replace(/={0,2}$/, '');\n    return !/[^\\s0-9a-zA-Z\\+/]/.test(s) || !/[^\\s0-9a-zA-Z\\-_]/.test(s);\n};\n//\nconst _noEnum = (v) => {\n    return {\n        value: v, enumerable: false, writable: true, configurable: true\n    };\n};\n/**\n * extend String.prototype with relevant methods\n */\nconst extendString = function () {\n    const _add = (name, body) => Object.defineProperty(String.prototype, name, _noEnum(body));\n    _add('fromBase64', function () { return decode(this); });\n    _add('toBase64', function (urlsafe) { return encode(this, urlsafe); });\n    _add('toBase64URI', function () { return encode(this, true); });\n    _add('toBase64URL', function () { return encode(this, true); });\n    _add('toUint8Array', function () { return toUint8Array(this); });\n};\n/**\n * extend Uint8Array.prototype with relevant methods\n */\nconst extendUint8Array = function () {\n    const _add = (name, body) => Object.defineProperty(Uint8Array.prototype, name, _noEnum(body));\n    _add('toBase64', function (urlsafe) { return fromUint8Array(this, urlsafe); });\n    _add('toBase64URI', function () { return fromUint8Array(this, true); });\n    _add('toBase64URL', function () { return fromUint8Array(this, true); });\n};\n/**\n * extend Builtin prototypes with relevant methods\n */\nconst extendBuiltins = () => {\n    extendString();\n    extendUint8Array();\n};\nconst gBase64 = {\n    version: version,\n    VERSION: VERSION,\n    atob: _atob,\n    atobPolyfill: atobPolyfill,\n    btoa: _btoa,\n    btoaPolyfill: btoaPolyfill,\n    fromBase64: decode,\n    toBase64: encode,\n    encode: encode,\n    encodeURI: encodeURI,\n    encodeURL: encodeURI,\n    utob: utob,\n    btou: btou,\n    decode: decode,\n    isValid: isValid,\n    fromUint8Array: fromUint8Array,\n    toUint8Array: toUint8Array,\n    extendString: extendString,\n    extendUint8Array: extendUint8Array,\n    extendBuiltins: extendBuiltins\n};\n// makecjs:CUT //\nexport { version };\nexport { VERSION };\nexport { _atob as atob };\nexport { atobPolyfill };\nexport { _btoa as btoa };\nexport { btoaPolyfill };\nexport { decode as fromBase64 };\nexport { encode as toBase64 };\nexport { utob };\nexport { encode };\nexport { encodeURI };\nexport { encodeURI as encodeURL };\nexport { btou };\nexport { decode };\nexport { isValid };\nexport { fromUint8Array };\nexport { toUint8Array };\nexport { extendString };\nexport { extendUint8Array };\nexport { extendBuiltins };\n// and finally,\nexport { gBase64 as Base64 };\n", "export { Composer } from './compose/composer.js';\nexport { Document } from './doc/Document.js';\nexport { Schema } from './schema/Schema.js';\nexport { YAMLError, YAMLParseError, YAMLWarning } from './errors.js';\nexport { Alias } from './nodes/Alias.js';\nexport { isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq } from './nodes/identity.js';\nexport { Pair } from './nodes/Pair.js';\nexport { Scalar } from './nodes/Scalar.js';\nexport { YAMLMap } from './nodes/YAMLMap.js';\nexport { YAMLSeq } from './nodes/YAMLSeq.js';\nimport * as cst from './parse/cst.js';\nexport { cst as CST };\nexport { Lexer } from './parse/lexer.js';\nexport { LineCounter } from './parse/line-counter.js';\nexport { Parser } from './parse/parser.js';\nexport { parse, parseAllDocuments, parseDocument, stringify } from './public-api.js';\nexport { visit, visitAsync } from './visit.js';\n", "const ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar(node) || isCollection(node)) && !!node.anchor;\n\nexport { ALIAS, DOC, MAP, NODE_TYPE, PAIR, SCALAR, SEQ, hasAnchor, isAlias, isCollection, isDocument, isMap, isNode, isPair, isScalar, isSeq };\n", "import { isDocument, isNode, isPair, isCollection, isMap, isSeq, isScalar, isAlias } from './nodes/identity.js';\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisit.SKIP = SKIP;\n/** Remove the current node */\nvisit.REMOVE = REMOVE;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK)\n                return BREAK;\n            else if (ck === REMOVE)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK)\n                return BREAK;\n            else if (cv === REMOVE)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nexport { visit, visitAsync };\n", "import { isNode } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/s);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix) {\n            try {\n                return prefix + decodeURIComponent(suffix);\n            }\n            catch (error) {\n                onError(String(error));\n                return null;\n            }\n        }\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\nexport { Directives };\n", "import { isScalar, isCollection } from '../nodes/identity.js';\nimport { visit } from '../visit.js';\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            prevAnchors ?? (prevAnchors = anchorNames(doc));\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar(ref.node) || isCollection(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nexport { anchorIsValid, anchorNames, createNodeAnchors, findNewAnchor };\n", "/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                // eslint-disable-next-line @typescript-eslint/no-array-delete\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nexport { applyReviver };\n", "import { hasAnchor } from './identity.js';\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nexport { toJS };\n", "import { applyReviver } from '../doc/applyReviver.js';\nimport { NODE_TYPE, isDocument } from './identity.js';\nimport { toJS } from './toJS.js';\n\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** A plain JavaScript representation of this node. */\n    toJS(doc, { mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        if (!isDocument(doc))\n            throw new TypeError('A document argument is required');\n        const ctx = {\n            anchors: new Map(),\n            doc,\n            keep: true,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this, '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n}\n\nexport { NodeBase };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { visit } from '../visit.js';\nimport { ALIAS, isAlias, isCollection, isPair, hasAnchor } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc, ctx) {\n        let nodes;\n        if (ctx?.aliasResolveCache) {\n            nodes = ctx.aliasResolveCache;\n        }\n        else {\n            nodes = [];\n            visit(doc, {\n                Node: (_key, node) => {\n                    if (isAlias(node) || hasAnchor(node))\n                        nodes.push(node);\n                }\n            });\n            if (ctx)\n                ctx.aliasResolveCache = nodes;\n        }\n        let found = undefined;\n        for (const node of nodes) {\n            if (node === this)\n                break;\n            if (node.anchor === this.source)\n                found = node;\n        }\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc, ctx);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        let data = anchors.get(source);\n        if (!data) {\n            // Resolve anchors for Node.prototype.toJS()\n            toJS(source, null, ctx);\n            data = anchors.get(source);\n        }\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\nexport { Alias };\n", "import { SCALAR } from './identity.js';\nimport { NodeBase } from './Node.js';\nimport { toJS } from './toJS.js';\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nexport { Scalar, isScalarValue };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isNode, isPair, MAP, SEQ, isDocument } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt !== 'undefined' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            ref.anchor ?? (ref.anchor = onAnchor(value));\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : typeof tagObj?.nodeClass?.from === 'function'\n            ? tagObj.nodeClass.from(ctx.schema, value, ctx)\n            : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    else if (!tagObj.default)\n        node.tag = tagObj.tag;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nexport { createNode };\n", "import { createNode } from '../doc/createNode.js';\nimport { isNode, isPair, isCollection, isScalar } from './identity.js';\nimport { NodeBase } from './Node.js';\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar(node) ? node.value : node;\n        else\n            return isCollection(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\n\nexport { Collection, collectionFromPath, isEmptyPath };\n", "/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nexport { indentComment, lineComment, stringifyComment };\n", "const FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    if (lineWidth < minContentWidth)\n        minContentWidth = 0;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i, indent.length);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i, indent.length);\n            end = i + indent.length + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i, indent) {\n    let end = i;\n    let start = i + 1;\n    let ch = text[start];\n    while (ch === ' ' || ch === '\\t') {\n        if (i < start + indent) {\n            ch = text[++i];\n        }\n        else {\n            do {\n                ch = text[++i];\n            } while (ch && ch !== '\\n');\n            end = i;\n            start = i + 1;\n            ch = text[start];\n        }\n    }\n    return end;\n}\n\nexport { FOLD_BLOCK, FOLD_FLOW, FOLD_QUOTED, foldFlowLines };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { foldFlowLines, FOLD_FLOW, FOLD_QUOTED, FOLD_BLOCK } from './foldFlowLines.js';\n\nconst getFoldOptions = (ctx, isBlock) => ({\n    indentAtStart: isBlock ? ctx.indent.length : ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx, false));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\n// The negative lookbehind avoids a polynomial search,\n// but isn't supported yet on Safari: https://caniuse.com/js-regexp-lookbehind\nlet blockEndNewlines;\ntry {\n    blockEndNewlines = new RegExp('(^|(?<!\\n))\\n+(?!\\n|$)', 'g');\n}\ncatch {\n    blockEndNewlines = /\\n+(?!\\n|$)/g;\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(blockEndNewlines, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    // Leading | or > is added later\n    let header = (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (!literal) {\n        const foldedValue = value\n            .replace(/\\n+/g, '\\n$&')\n            .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n            //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n            .replace(/\\n+/g, `$&${indent}`);\n        let literalFallback = false;\n        const foldOptions = getFoldOptions(ctx, true);\n        if (blockQuote !== 'folded' && type !== Scalar.BLOCK_FOLDED) {\n            foldOptions.onOverflow = () => {\n                literalFallback = true;\n            };\n        }\n        const body = foldFlowLines(`${start}${foldedValue}${end}`, indent, FOLD_BLOCK, foldOptions);\n        if (!literalFallback)\n            return `>${header}\\n${indent}${body}`;\n    }\n    value = value.replace(/\\n+/g, `$&${indent}`);\n    return `|${header}\\n${indent}${start}${value}${end}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, indentStep, inFlow } = ctx;\n    if ((implicitKey && value.includes('\\n')) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (/^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (containsDocumentMarker(value)) {\n        if (indent === '') {\n            ctx.forceBlockIndent = true;\n            return blockString(item, ctx, onComment, onChompKeep);\n        }\n        else if (implicitKey && indent === indentStep) {\n            return quotedString(value, ctx);\n        }\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx, false));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nexport { stringifyString };\n", "import { anchorIsValid } from '../doc/anchors.js';\nimport { isPair, isAlias, isNode, isScalar, isCollection } from '../nodes/identity.js';\nimport { stringifyComment } from './stringifyComment.js';\nimport { stringifyString } from './stringifyString.js';\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        flowCollectionPadding: true,\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        flowCollectionPadding: opt.flowCollectionPadding ? ' ' : '',\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar(item)) {\n        obj = item.value;\n        let match = tags.filter(t => t.identify?.(obj));\n        if (match.length > 1) {\n            const testMatch = match.filter(t => t.test);\n            if (testMatch.length > 0)\n                match = testMatch;\n        }\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? (obj === null ? 'null' : typeof obj);\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar(node) || isCollection(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ?? (tagObj.default ? null : tagObj.tag);\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    tagObj ?? (tagObj = getTagObject(ctx.doc.schema.tags, node));\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nexport { createStringifyContext, stringify };\n", "import { isCollection, isNode, isScalar, isSeq } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection(key) || (!isNode(key) && typeof key === 'object')) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection(key) ||\n            (isScalar(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vsb, vcb, valueComment;\n    if (isNode(value)) {\n        vsb = !!value.spaceBefore;\n        vcb = value.commentBefore;\n        valueComment = value.comment;\n    }\n    else {\n        vsb = false;\n        vcb = null;\n        valueComment = null;\n        if (value && typeof value === 'object')\n            value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substring(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (keyComment || vsb || vcb) {\n        ws = vsb ? '\\n' : '';\n        if (vcb) {\n            const cs = commentString(vcb);\n            ws += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        if (valueStr === '' && !ctx.inFlow) {\n            if (ws === '\\n')\n                ws = '\\n\\n';\n        }\n        else {\n            ws += `\\n${ctx.indent}`;\n        }\n    }\n    else if (!explicitKey && isCollection(value)) {\n        const vs0 = valueStr[0];\n        const nl0 = valueStr.indexOf('\\n');\n        const hasNewline = nl0 !== -1;\n        const flow = ctx.inFlow ?? value.flow ?? value.items.length === 0;\n        if (hasNewline || !flow) {\n            let hasPropsLine = false;\n            if (hasNewline && (vs0 === '&' || vs0 === '!')) {\n                let sp0 = valueStr.indexOf(' ');\n                if (vs0 === '&' &&\n                    sp0 !== -1 &&\n                    sp0 < nl0 &&\n                    valueStr[sp0 + 1] === '!') {\n                    sp0 = valueStr.indexOf(' ', sp0 + 1);\n                }\n                if (sp0 === -1 || nl0 < sp0)\n                    hasPropsLine = true;\n            }\n            if (!hasPropsLine)\n                ws = `\\n${ctx.indent}`;\n        }\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n') {\n        ws = '';\n    }\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nexport { stringifyPair };\n", "function debug(logLevel, ...messages) {\n    if (logLevel === 'debug')\n        console.log(...messages);\n}\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        console.warn(warning);\n    }\n}\n\nexport { debug, warn };\n", "import { isScalar, isAlias, isSeq, isMap } from '../../nodes/identity.js';\nimport { Scalar } from '../../nodes/Scalar.js';\n\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nconst MERGE_KEY = '<<';\nconst merge = {\n    identify: value => value === MERGE_KEY ||\n        (typeof value === 'symbol' && value.description === MERGE_KEY),\n    default: 'key',\n    tag: 'tag:yaml.org,2002:merge',\n    test: /^<<$/,\n    resolve: () => Object.assign(new Scalar(Symbol(MERGE_KEY)), {\n        addToJSMap: addMergeToJSMap\n    }),\n    stringify: () => MERGE_KEY\n};\nconst isMergeKey = (ctx, key) => (merge.identify(key) ||\n    (isScalar(key) &&\n        (!key.type || key.type === Scalar.PLAIN) &&\n        merge.identify(key.value))) &&\n    ctx?.doc.schema.tags.some(tag => tag.tag === merge.tag && tag.default);\nfunction addMergeToJSMap(ctx, map, value) {\n    value = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (isSeq(value))\n        for (const it of value.items)\n            mergeValue(ctx, map, it);\n    else if (Array.isArray(value))\n        for (const it of value)\n            mergeValue(ctx, map, it);\n    else\n        mergeValue(ctx, map, value);\n}\nfunction mergeValue(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\n\nexport { addMergeToJSMap, isMergeKey, merge };\n", "import { warn } from '../log.js';\nimport { isMergeKey, addMergeToJSMap } from '../schema/yaml-1.1/merge.js';\nimport { createStringifyContext } from '../stringify/stringify.js';\nimport { isNode } from './identity.js';\nimport { toJS } from './toJS.js';\n\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (isNode(key) && key.addToJSMap)\n        key.addToJSMap(ctx, map, value);\n    // TODO: Should drop this special case for bare << handling\n    else if (isMergeKey(ctx, key))\n        addMergeToJSMap(ctx, map, value);\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx?.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nexport { addPairToJSMap };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyPair } from '../stringify/stringifyPair.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { NODE_TYPE, PAIR, isNode } from './identity.js';\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nexport { Pair, createPair };\n", "import { isNode, isPair } from '../nodes/identity.js';\nimport { stringify } from './stringify.js';\nimport { lineComment, indentComment } from './stringifyComment.js';\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ items }, ctx, { flowChars, itemIndent }) {\n    const { indent, indentStep, flowCollectionPadding: fcPadding, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik?.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        return start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = ctx.options.lineWidth > 0 && len > ctx.options.lineWidth;\n        }\n        if (reqNewline) {\n            let str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            return `${str}\\n${indent}${end}`;\n        }\n        else {\n            return `${start}${fcPadding}${lines.join(' ')}${fcPadding}${end}`;\n        }\n    }\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nexport { stringifyCollection };\n", "import { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { addPairToJSMap } from './addPairToJSMap.js';\nimport { Collection } from './Collection.js';\nimport { MAP, isPair, isScalar } from './identity.js';\nimport { Pair, createPair } from './Pair.js';\nimport { isScalarValue } from './Scalar.js';\n\nfunction findPair(items, key) {\n    const k = isScalar(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    /**\n     * A generic collection parsing method that can be extended\n     * to other node classes that inherit from YAMLMap\n     */\n    static from(schema, obj, ctx) {\n        const { keepUndefined, replacer } = ctx;\n        const map = new this(schema);\n        const add = (key, value) => {\n            if (typeof replacer === 'function')\n                value = replacer.call(obj, key, value);\n            else if (Array.isArray(replacer) && !replacer.includes(key))\n                return;\n            if (value !== undefined || keepUndefined)\n                map.items.push(createPair(key, value, ctx));\n        };\n        if (obj instanceof Map) {\n            for (const [key, value] of obj)\n                add(key, value);\n        }\n        else if (obj && typeof obj === 'object') {\n            for (const key of Object.keys(obj))\n                add(key, obj[key]);\n        }\n        if (typeof schema.sortMapEntries === 'function') {\n            map.items.sort(schema.sortMapEntries);\n        }\n        return map;\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nexport { YAMLMap, findPair };\n", "import { isMap } from '../../nodes/identity.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\n\nconst map = {\n    collection: 'map',\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode: (schema, obj, ctx) => YAMLMap.from(schema, obj, ctx)\n};\n\nexport { map };\n", "import { createNode } from '../doc/createNode.js';\nimport { stringifyCollection } from '../stringify/stringifyCollection.js';\nimport { Collection } from './Collection.js';\nimport { SEQ, isScalar } from './identity.js';\nimport { isScalarValue } from './Scalar.js';\nimport { toJS } from './toJS.js';\n\nclass YAMLSeq extends Collection {\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n    static from(schema, obj, ctx) {\n        const { replacer } = ctx;\n        const seq = new this(schema);\n        if (obj && Symbol.iterator in Object(obj)) {\n            let i = 0;\n            for (let it of obj) {\n                if (typeof replacer === 'function') {\n                    const key = obj instanceof Set ? it : String(i++);\n                    it = replacer.call(obj, key, it);\n                }\n                seq.items.push(createNode(it, undefined, ctx));\n            }\n        }\n        return seq;\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nexport { YAMLSeq };\n", "import { isSeq } from '../../nodes/identity.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nconst seq = {\n    collection: 'seq',\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    },\n    createNode: (schema, obj, ctx) => YAMLSeq.from(schema, obj, ctx)\n};\n\nexport { seq };\n", "import { stringifyString } from '../../stringify/stringifyString.js';\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { string };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nexport { nullTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nexport { boolTag };\n", "function stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nexport { stringifyNumber };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 8, opt),\n    stringify: node => intStringify(node, 8, '0o')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: value => intIdentify(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intHex, intOct };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { boolTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intOct, int, intHex } from './int.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float\n];\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { map } from '../common/map.js';\nimport { seq } from '../common/seq.js';\n\nfunction intIdentify(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true$|^false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema = [map, seq].concat(jsonScalars, jsonError);\n\nexport { schema };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyString } from '../../stringify/stringifyString.js';\n\nconst binary = {\n    identify: value => value instanceof Uint8Array, // Buffer inherits from Uint8Array\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        if (!value)\n            return '';\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        type ?? (type = Scalar.BLOCK_LITERAL);\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nexport { binary };\n", "import { isSeq, isPair, isMap } from '../../nodes/identity.js';\nimport { createPair, Pair } from '../../nodes/Pair.js';\nimport { Scalar } from '../../nodes/Scalar.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else {\n                    throw new TypeError(`Expected tuple with one key, not ${keys.length} keys`);\n                }\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nexport { createPairs, pairs, resolvePairs };\n", "import { isScalar, isPair } from '../../nodes/identity.js';\nimport { toJS } from '../../nodes/toJS.js';\nimport { YAMLMap } from '../../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../../nodes/YAMLSeq.js';\nimport { resolvePairs, createPairs } from './pairs.js';\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n    static from(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new this();\n        omap.items = pairs.items;\n        return omap;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode: (schema, iterable, ctx) => YAMLOMap.from(schema, iterable, ctx)\n};\n\nexport { YAMLOMap, omap };\n", "import { Scalar } from '../../nodes/Scalar.js';\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nexport { falseTag, trueTag };\n", "import { Scalar } from '../../nodes/Scalar.js';\nimport { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF)|\\.nan|\\.NaN|\\.NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nexport { float, floatExp, floatNaN };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nexport { int, intBin, intHex, intOct };\n", "import { isMap, isPair, isScalar } from '../../nodes/identity.js';\nimport { Pair, createPair } from '../../nodes/Pair.js';\nimport { YAMLMap, findPair } from '../../nodes/YAMLMap.js';\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (key &&\n            typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n    static from(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new this(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    createNode: (schema, iterable, ctx) => YAMLSet.from(schema, iterable, ctx),\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nexport { YAMLSet, set };\n", "import { stringifyNumber } from '../../stringify/stringifyNumber.js';\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => String(n).padStart(2, '0'))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value?.toISOString().replace(/(T00:00:00)?\\.000Z$/, '') ?? ''\n};\n\nexport { floatTime, intTime, timestamp };\n", "import { map } from '../common/map.js';\nimport { nullTag } from '../common/null.js';\nimport { seq } from '../common/seq.js';\nimport { string } from '../common/string.js';\nimport { binary } from './binary.js';\nimport { trueTag, falseTag } from './bool.js';\nimport { floatNaN, floatExp, float } from './float.js';\nimport { intBin, intOct, int, intHex } from './int.js';\nimport { merge } from './merge.js';\nimport { omap } from './omap.js';\nimport { pairs } from './pairs.js';\nimport { set } from './set.js';\nimport { intTime, floatTime, timestamp } from './timestamp.js';\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    merge,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nexport { schema };\n", "import { map } from './common/map.js';\nimport { nullTag } from './common/null.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { boolTag } from './core/bool.js';\nimport { floatNaN, floatExp, float } from './core/float.js';\nimport { intOct, intHex, int } from './core/int.js';\nimport { schema } from './core/schema.js';\nimport { schema as schema$1 } from './json/schema.js';\nimport { binary } from './yaml-1.1/binary.js';\nimport { merge } from './yaml-1.1/merge.js';\nimport { omap } from './yaml-1.1/omap.js';\nimport { pairs } from './yaml-1.1/pairs.js';\nimport { schema as schema$2 } from './yaml-1.1/schema.js';\nimport { set } from './yaml-1.1/set.js';\nimport { timestamp, intTime, floatTime } from './yaml-1.1/timestamp.js';\n\nconst schemas = new Map([\n    ['core', schema],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema$2],\n    ['yaml-1.1', schema$2]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float,\n    floatExp,\n    floatNaN,\n    floatTime,\n    int,\n    intHex,\n    intOct,\n    intTime,\n    map,\n    merge,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:merge': merge,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName, addMergeTag) {\n    const schemaTags = schemas.get(schemaName);\n    if (schemaTags && !customTags) {\n        return addMergeTag && !schemaTags.includes(merge)\n            ? schemaTags.concat(merge)\n            : schemaTags.slice();\n    }\n    let tags = schemaTags;\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    if (addMergeTag)\n        tags = tags.concat(merge);\n    return tags.reduce((tags, tag) => {\n        const tagObj = typeof tag === 'string' ? tagsByName[tag] : tag;\n        if (!tagObj) {\n            const tagName = JSON.stringify(tag);\n            const keys = Object.keys(tagsByName)\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown custom tag ${tagName}; use one of ${keys}`);\n        }\n        if (!tags.includes(tagObj))\n            tags.push(tagObj);\n        return tags;\n    }, []);\n}\n\nexport { coreKnownTags, getTags };\n", "import { MAP, SCALAR, SEQ } from '../nodes/identity.js';\nimport { map } from './common/map.js';\nimport { seq } from './common/seq.js';\nimport { string } from './common/string.js';\nimport { getTags, coreKnownTags } from './tags.js';\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name, merge);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nexport { Schema };\n", "import { isNode } from '../nodes/identity.js';\nimport { createStringifyContext, stringify } from './stringify.js';\nimport { indentComment, lineComment } from './stringifyComment.js';\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\nexport { stringifyDocument };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isEmptyPath, collectionFromPath } from '../nodes/Collection.js';\nimport { NODE_TYPE, DOC, isNode, isCollection, isScalar } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { toJS } from '../nodes/toJS.js';\nimport { Schema } from '../schema/Schema.js';\nimport { stringifyDocument } from '../stringify/stringifyDocument.js';\nimport { anchorNames, findNewAnchor, createNodeAnchors } from './anchors.js';\nimport { applyReviver } from './applyReviver.js';\nimport { createNode } from './createNode.js';\nimport { Directives } from './directives.js';\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            stringKeys: false,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        // @ts-expect-error We can't really know that this matches Contents.\n        this.contents =\n            value === undefined ? null : this.createNode(value, _replacer, options);\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        // @ts-expect-error We can't really know that this matches Contents.\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            // @ts-expect-error Presumed impossible if Strict extends false\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path)) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = value;\n        }\n        else if (this.contents == null) {\n            // @ts-expect-error We can't really know that this matches Contents.\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nexport { Document };\n", "class YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.max(1, Math.min(end.col - col, 80 - ci));\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nexport { YAMLError, YAMLParseError, YAMLWarning, prettifyError };\n", "function resolveProps(tokens, { flow, indicator, next, offset, onError, parentIndent, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let reqSpace = false;\n    let tab = null;\n    let anchor = null;\n    let tag = null;\n    let newlineAfterProp = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        if (tab) {\n            if (atNewline && token.type !== 'comment' && token.type !== 'newline') {\n                onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n            }\n            tab = null;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    (indicator !== 'doc-start' || next?.type !== 'flow-collection') &&\n                    token.source.includes('\\t')) {\n                    tab = token;\n                }\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else if (!found || indicator !== 'seq-item-ind')\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    newlineAfterProp = token;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                start ?? (start = token.offset);\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline =\n                    indicator === 'seq-item-ind' || indicator === 'explicit-key-ind';\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== '')) {\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    }\n    if (tab &&\n        ((atNewline && tab.indent <= parentIndent) ||\n            next?.type === 'block-map' ||\n            next?.type === 'block-seq'))\n        onError(tab, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        anchor,\n        tag,\n        newlineAfterProp,\n        end,\n        start: start ?? end\n    };\n}\n\nexport { resolveProps };\n", "function containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nexport { containsNewline };\n", "import { containsNewline } from './util-contains-newline.js';\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nexport { flowIndentCheck };\n", "import { isScalar } from '../nodes/identity.js';\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b || (isScalar(a) && isScalar(b) && a.value === b.value);\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nexport { mapIncludes };\n", "import { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLMap;\n    const map = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    let commentEnd = null;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                commentEnd = keyProps.end;\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.newlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        ctx.atKey = true;\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        ctx.atKey = false;\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            parentIndent: bm.indent,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    if (commentEnd && commentEnd < offset)\n        onError(commentEnd, 'IMPOSSIBLE', 'Map comment with trailing content');\n    map.range = [bm.offset, offset, commentEnd ?? offset];\n    return map;\n}\n\nexport { resolveBlockMap };\n", "import { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveProps } from './resolve-props.js';\nimport { flowIndentCheck } from './util-flow-indent-check.js';\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError, tag) {\n    const NodeClass = tag?.nodeClass ?? YAMLSeq;\n    const seq = new NodeClass(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = bs.offset;\n    let commentEnd = null;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            parentIndent: bs.indent,\n            startOnNewline: true\n        });\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(props.end, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                commentEnd = props.end;\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, props.end, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, commentEnd ?? offset];\n    return seq;\n}\n\nexport { resolveBlockSeq };\n", "function resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nexport { resolveEnd };\n", "import { isPair } from '../nodes/identity.js';\nimport { Pair } from '../nodes/Pair.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\nimport { containsNewline } from './util-contains-newline.js';\nimport { mapIncludes } from './util-map-includes.js';\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError, tag) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const NodeClass = (tag?.nodeClass ?? (isMap ? YAMLMap : YAMLSeq));\n    const coll = new NodeClass(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    if (ctx.atKey)\n        ctx.atKey = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            parentIndent: fc.indent,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            ctx.atKey = true;\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            ctx.atKey = false;\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                parentIndent: fc.indent,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                const endRange = (valueNode ?? keyNode).range;\n                map.range = [keyNode.range[0], endRange[1], endRange[2]];\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nexport { resolveFlowCollection };\n", "import { isNode } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { YAMLMap } from '../nodes/YAMLMap.js';\nimport { YAMLSeq } from '../nodes/YAMLSeq.js';\nimport { resolveBlockMap } from './resolve-block-map.js';\nimport { resolveBlockSeq } from './resolve-block-seq.js';\nimport { resolveFlowCollection } from './resolve-flow-collection.js';\n\nfunction resolveCollection(CN, ctx, token, onError, tagName, tag) {\n    const coll = token.type === 'block-map'\n        ? resolveBlockMap(CN, ctx, token, onError, tag)\n        : token.type === 'block-seq'\n            ? resolveBlockSeq(CN, ctx, token, onError, tag)\n            : resolveFlowCollection(CN, ctx, token, onError, tag);\n    const Coll = coll.constructor;\n    // If we got a tagName matching the class, or the tag name is '!',\n    // then use the tagName from the node class used to create it.\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    if (tagName)\n        coll.tag = tagName;\n    return coll;\n}\nfunction composeCollection(CN, ctx, token, props, onError) {\n    const tagToken = props.tag;\n    const tagName = !tagToken\n        ? null\n        : ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (token.type === 'block-seq') {\n        const { anchor, newlineAfterProp: nl } = props;\n        const lastProp = anchor && tagToken\n            ? anchor.offset > tagToken.offset\n                ? anchor\n                : tagToken\n            : (anchor ?? tagToken);\n        if (lastProp && (!nl || nl.offset < lastProp.offset)) {\n            const message = 'Missing newline after block sequence props';\n            onError(lastProp, 'MISSING_CHAR', message);\n        }\n    }\n    const expType = token.type === 'block-map'\n        ? 'map'\n        : token.type === 'block-seq'\n            ? 'seq'\n            : token.start.source === '{'\n                ? 'map'\n                : 'seq';\n    // shortcut: check if it's a generic YAMLMap or YAMLSeq\n    // before jumping into the custom tag logic.\n    if (!tagToken ||\n        !tagName ||\n        tagName === '!' ||\n        (tagName === YAMLMap.tagName && expType === 'map') ||\n        (tagName === YAMLSeq.tagName && expType === 'seq')) {\n        return resolveCollection(CN, ctx, token, onError, tagName);\n    }\n    let tag = ctx.schema.tags.find(t => t.tag === tagName && t.collection === expType);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            if (kt) {\n                onError(tagToken, 'BAD_COLLECTION_TYPE', `${kt.tag} used for ${expType} collection, but expects ${kt.collection ?? 'scalar'}`, true);\n            }\n            else {\n                onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            }\n            return resolveCollection(CN, ctx, token, onError, tagName);\n        }\n    }\n    const coll = resolveCollection(CN, ctx, token, onError, tagName, tag);\n    const res = tag.resolve?.(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options) ?? coll;\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nexport { composeCollection };\n", "import { Scalar } from '../nodes/Scalar.js';\n\nfunction resolveBlockScalar(ctx, scalar, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, ctx.options.strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            if (trimIndent === 0 && !ctx.atRoot) {\n                const message = 'Block scalar values in collections must be indented';\n                onError(offset, 'BAD_INDENT', message);\n            }\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nexport { resolveBlockScalar };\n", "import { Scalar } from '../nodes/Scalar.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0', // null character\n    a: '\\x07', // bell character\n    b: '\\b', // backspace\n    e: '\\x1b', // escape character\n    f: '\\f', // form feed\n    n: '\\n', // line feed\n    r: '\\r', // carriage return\n    t: '\\t', // horizontal tab\n    v: '\\v', // vertical tab\n    N: '\\u0085', // Unicode next line\n    _: '\\u00a0', // Unicode non-breaking space\n    L: '\\u2028', // Unicode line separator\n    P: '\\u2029', // Unicode paragraph separator\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nexport { resolveFlowScalar };\n", "import { isScalar, SCALAR } from '../nodes/identity.js';\nimport { Scalar } from '../nodes/Scalar.js';\nimport { resolveBlockScalar } from './resolve-block-scalar.js';\nimport { resolveFlowScalar } from './resolve-flow-scalar.js';\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(ctx, token, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    let tag;\n    if (ctx.options.stringKeys && ctx.atKey) {\n        tag = ctx.schema[SCALAR];\n    }\n    else if (tagName)\n        tag = findScalarTagByName(ctx.schema, value, tagName, tagToken, onError);\n    else if (token.type === 'scalar')\n        tag = findScalarTagByTest(ctx, value, token, onError);\n    else\n        tag = ctx.schema[SCALAR];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR];\n}\nfunction findScalarTagByTest({ atKey, directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => (tag.default === true || (atKey && tag.default === 'key')) &&\n        tag.test?.test(value)) || schema[SCALAR];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nexport { composeScalar };\n", "function emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        pos ?? (pos = before.length);\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nexport { emptyScalarPosition };\n", "import { Alias } from '../nodes/Alias.js';\nimport { isScalar } from '../nodes/identity.js';\nimport { composeCollection } from './compose-collection.js';\nimport { composeScalar } from './compose-scalar.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { emptyScalarPosition } from './util-empty-scalar-position.js';\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const atKey = ctx.atKey;\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, props, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (atKey &&\n        ctx.options.stringKeys &&\n        (!isScalar(node) ||\n            typeof node.value !== 'string' ||\n            (node.tag && node.tag !== 'tag:yaml.org,2002:str'))) {\n        const msg = 'With stringKeys, all keys must be strings';\n        onError(tag ?? token, 'NON_STRING_KEY', msg);\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag, end }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        node.comment = comment;\n        node.range[2] = end;\n    }\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nexport { composeEmptyNode, composeNode };\n", "import { Document } from '../doc/Document.js';\nimport { composeNode, composeEmptyNode } from './compose-node.js';\nimport { resolveEnd } from './resolve-end.js';\nimport { resolveProps } from './resolve-props.js';\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atKey: false,\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        parentIndent: 0,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    // @ts-expect-error If Contents is set, let's trust the user\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nexport { composeDoc };\n", "import { Directives } from '../doc/directives.js';\nimport { Document } from '../doc/Document.js';\nimport { YAMLWarning, YAMLParseError } from '../errors.js';\nimport { isCollection, isPair } from '../nodes/identity.js';\nimport { composeDoc } from './compose-doc.js';\nimport { resolveEnd } from './resolve-end.js';\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nexport { Composer };\n", "export { createScalarToken, resolveAsScalar, setScalarValue } from './cst-scalar.js';\nexport { stringify } from './cst-stringify.js';\nexport { visit } from './cst-visit.js';\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nexport { BOM, DOCUMENT, FLOW_END, SCALAR, isCollection, isScalar, prettyToken, tokenType };\n", "import { resolveBlockScalar } from '../compose/resolve-block-scalar.js';\nimport { resolveFlowScalar } from '../compose/resolve-flow-scalar.js';\nimport { YAMLParseError } from '../errors.js';\nimport { stringifyString } from '../stringify/stringifyString.js';\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar({ options: { strict } }, token, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\nexport { createScalarToken, resolveAsScalar, setScalarValue };\n", "/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nexport { stringify };\n", "const BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\nexport { visit };\n", "import { BOM, DOCUMENT, FLOW_END, SCALAR } from './cst.js';\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = new Set('0123456789ABCDEFabcdef');\nconst tagChars = new Set(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\");\nconst flowIndicatorChars = new Set(',[]{}');\nconst invalidAnchorChars = new Set(' ,[]{}\\n\\r\\t');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.has(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            if (typeof source !== 'string')\n                throw TypeError('source is not a string');\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            let cs = line.indexOf('#');\n            while (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t') {\n                    dirEnd = cs - 1;\n                    break;\n                }\n                else {\n                    cs = line.indexOf('#', cs + 1);\n                }\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if ((s === '---' || s === '...') && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return s === '---' ? 'doc' : 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else {\n                this.indentNext =\n                    this.blockScalarIndent + (this.indentNext === 0 ? 1 : this.indentNext);\n            }\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        // Trailing insufficiently indented tabs are invalid.\n        // To catch that during parsing, we include them in the block scalar value.\n        let i = nl + 1;\n        ch = this.buffer[i];\n        while (ch === ' ')\n            ch = this.buffer[++i];\n        if (ch === '\\t') {\n            while (ch === '\\t' || ch === ' ' || ch === '\\r' || ch === '\\n')\n                ch = this.buffer[++i];\n            nl = i - 1;\n        }\n        else if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && flowIndicatorChars.has(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && flowIndicatorChars.has(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && flowIndicatorChars.has(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.has(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.has(this.buffer[i + 1]) &&\n                    hexDigits.has(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\nexport { Lexer };\n", "/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nexport { LineCounter };\n", "import { tokenType } from './cst.js';\nimport { Lexer } from './lexer.js';\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !it.explicitKey;\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atMapIndent = !this.onKeyLine && this.indent === map.indent;\n            const atNextItem = atMapIndent &&\n                (it.sep || it.explicitKey) &&\n                this.type !== 'seq-item-ind';\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !it.explicitKey) {\n                        it.start.push(this.sourceToken);\n                        it.explicitKey = true;\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start, explicitKey: true });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken], explicitKey: true }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (it.explicitKey) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key;\n                            // @ts-expect-error type guard is wrong here\n                            delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (bv.type === 'block-seq') {\n                            if (!it.explicitKey &&\n                                it.sep &&\n                                !includesToken(it.sep, 'newline')) {\n                                yield* this.pop({\n                                    type: 'error',\n                                    offset: this.offset,\n                                    message: 'Unexpected block-seq-ind on same line with key',\n                                    source: this.source\n                                });\n                                return;\n                            }\n                        }\n                        else if (atMapIndent) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, explicitKey: true }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nexport { Parser };\n", "import { Composer } from './compose/composer.js';\nimport { Document } from './doc/Document.js';\nimport { prettifyError, YAMLParseError } from './errors.js';\nimport { warn } from './log.js';\nimport { isDocument } from './nodes/identity.js';\nimport { LineCounter } from './parse/line-counter.js';\nimport { Parser } from './parse/parser.js';\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    if (isDocument(value) && !_replacer)\n        return value.toString(options);\n    return new Document(value, _replacer, options).toString(options);\n}\n\nexport { parse, parseAllDocuments, parseDocument, stringify };\n", "// `export * as default from ...` fails on Webpack v4\n// https://github.com/eemeli/yaml/issues/228\nimport * as YAML from './dist/index.js'\nexport default YAML\nexport * from './dist/index.js'\n", "import { Base64 } from 'js-base64';\nimport YAML from 'yaml';\n// =======================================================================================================================\n//                                      \u4EE5\u4E0B\u662F\u517C\u5BB9SubStore API\u7684\u4E00\u4E9B\u5904\u7406\n// =======================================================================================================================\n\nconst Buffer = {\n    from(str) {\n        return {\n            toString(label) {\n                return new TextDecoder(label).decode(new TextEncoder().encode(str));\n            },\n        };\n    },\n};\n\nconst rs = {\n    generateFingerprint(caStr) {\n        // SHA-256 \u5B9E\u73B0\uFF08\u7B80\u5316\u7248\uFF0C\u6765\u6E90\u4E8E\u516C\u5171\u5B9E\u73B0\uFF09\n        function sha256Sync(ascii) {\n            const K = new Uint32Array([\n                0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be,\n                0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa,\n                0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85,\n                0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n                0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n                0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n            ]);\n\n            let h0 = 0x6a09e667,\n                h1 = 0xbb67ae85,\n                h2 = 0x3c6ef372,\n                h3 = 0xa54ff53a,\n                h4 = 0x510e527f,\n                h5 = 0x9b05688c,\n                h6 = 0x1f83d9ab,\n                h7 = 0x5be0cd19;\n\n            const msg = new TextEncoder().encode(ascii);\n            const l = msg.length * 8;\n\n            const withOne = new Uint8Array(((msg.length + 9 + 63) >> 6) << 6);\n            withOne.set(msg);\n            withOne[msg.length] = 0x80;\n\n            const view = new DataView(withOne.buffer);\n            view.setUint32(withOne.length - 4, l, false);\n\n            for (let i = 0; i < withOne.length; i += 64) {\n                const w = new Uint32Array(64);\n                for (let j = 0; j < 16; j++) {\n                    w[j] = view.getUint32(i + j * 4, false);\n                }\n                for (let j = 16; j < 64; j++) {\n                    const s0 = ((w[j - 15] >>> 7) | (w[j - 15] << 25)) ^ ((w[j - 15] >>> 18) | (w[j - 15] << 14)) ^ (w[j - 15] >>> 3);\n                    const s1 = ((w[j - 2] >>> 17) | (w[j - 2] << 15)) ^ ((w[j - 2] >>> 19) | (w[j - 2] << 13)) ^ (w[j - 2] >>> 10);\n                    w[j] = (w[j - 16] + s0 + w[j - 7] + s1) >>> 0;\n                }\n\n                let a = h0,\n                    b = h1,\n                    c = h2,\n                    d = h3,\n                    e = h4,\n                    f = h5,\n                    g = h6,\n                    h = h7;\n\n                for (let j = 0; j < 64; j++) {\n                    const S1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n                    const ch = (e & f) ^ (~e & g);\n                    const temp1 = (h + S1 + ch + K[j] + w[j]) >>> 0;\n                    const S0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n                    const maj = (a & b) ^ (a & c) ^ (b & c);\n                    const temp2 = (S0 + maj) >>> 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + temp1) >>> 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (temp1 + temp2) >>> 0;\n                }\n\n                h0 = (h0 + a) >>> 0;\n                h1 = (h1 + b) >>> 0;\n                h2 = (h2 + c) >>> 0;\n                h3 = (h3 + d) >>> 0;\n                h4 = (h4 + e) >>> 0;\n                h5 = (h5 + f) >>> 0;\n                h6 = (h6 + g) >>> 0;\n                h7 = (h7 + h) >>> 0;\n            }\n\n            return [h0, h1, h2, h3, h4, h5, h6, h7].map((x) => x.toString(16).padStart(8, '0')).join('');\n        }\n\n        // PEM -> binary string\n        function pemToBinary(pem) {\n            return atob(\n                pem\n                    .replace(/-----BEGIN CERTIFICATE-----/, '')\n                    .replace(/-----END CERTIFICATE-----/, '')\n                    .replace(/\\s+/g, '')\n            );\n        }\n\n        // binary string -> hex\n        function binaryToHex(str) {\n            return Array.from(str)\n                .map((c) => c.charCodeAt(0).toString(16).padStart(2, '0'))\n                .join('');\n        }\n\n        const binary = pemToBinary(caStr);\n        const hex = binaryToHex(binary);\n        const hashHex = sha256Sync(hex);\n        return hashHex.match(/.{2}/g).join(':').toUpperCase();\n    },\n};\n\nconst safeLoad = YAML.parse;\n\nconst URI = URI_Producer();\n\nconst PROXY_PRODUCERS = {\n    v2ray: URI_Producer(),\n    mihomo: ClashMeta_Producer(),\n    singbox: Singbox_Producer(),\n    base64: V2Ray_Producer(),\n};\n\nconst $ = {\n    info: (...msg) => {\n        console.log(`[INFO]`, ...msg);\n    },\n    error: (...msg) => {\n        console.log(`[ERROR]`, ...msg);\n    },\n    log: (...msg) => {\n        console.log(`[LOG]`, ...msg);\n    },\n};\n\nconst getTrojanURIParser = () => {\n    const parse = (line) => {\n        const [_, body] = line.split('://');\n        const url = new URL('http://' + body);\n        const query = url.searchParams;\n        const trojan = {\n            name: decodeURIComponent(url.hash.slice(1)),\n            type: 'trojan',\n            server: url.hostname,\n            port: Number(url.port),\n            password: url.username,\n            udp: true,\n            'skip-cert-verify': Boolean(query.get('allowInsecure')),\n        };\n        if (query.get('alpn')) {\n            trojan['alpn'] = query.get('alpn').split(',');\n        }\n        if (query.get('sni')) {\n            trojan.sni = query.get('sni');\n        }\n        const network = query.get('type')?.toLowerCase();\n        if (network) {\n            trojan.network = network;\n        }\n        switch (network) {\n            case 'ws': {\n                const wsOpts = {\n                    path: query.get('path'),\n                    headers: {\n                        'User-Agent': '',\n                    },\n                };\n                trojan['ws-opts'] = wsOpts;\n                break;\n            }\n            case 'grpc': {\n                trojan['grpc-opts'] = {\n                    'grpc-service-name': query.get('serviceName'),\n                };\n                break;\n            }\n        }\n        trojan['client-fingerprint'] = query.get('fp') || 'chrome';\n        return trojan;\n    };\n\n    return { parse };\n};\n\n// =======================================================================================================================\n//                                      \u4EE5\u4E0B\u662FSub-Store\u4ED3\u5E93\u4E2D\u5173\u4E8E\u89E3\u6790\u8282\u70B9uri\u7684\u76F8\u5173\u6E90\u7801\n//                                  \u6DFB\u52A0\u4E86\u4E00\u4E9B\u6CE8\u91CA\uFF0C\u8BB0\u5F55\u4ECE\u54EA\u4E2A\u6587\u4EF6\u800C\u6765\u3001\u4EE5\u53CA\u662F\u5426\u505A\u4E86\u4E00\u4E9B\u4FEE\u6539\n// =======================================================================================================================\n\n/**\n * \u8BF4\u660E\uFF1A\u5DE5\u5177\u7C7B\u65B9\u6CD5\n * \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/utils/index.js\n * \u4FEE\u6539\uFF1AisPresent\u65B9\u6CD5\n */\n\n// source: https://stackoverflow.com/a/36760050\nconst IPV4_REGEX = /^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)(\\.(?!$)|$)){4}$/;\n\n// source: https://ihateregex.io/expr/ipv6/\nconst IPV6_REGEX =\n    /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\n\nfunction isIPv4(ip) {\n    return IPV4_REGEX.test(ip);\n}\n\nfunction isIPv6(ip) {\n    return IPV6_REGEX.test(ip);\n}\n\nfunction isNotBlank(str) {\n    return typeof str === 'string' && str.trim().length > 0;\n}\n\nfunction getIfNotBlank(str, defaultValue) {\n    return isNotBlank(str) ? str : defaultValue;\n}\n\nfunction isPresent(obj) {\n    if (arguments.length === 1) {\n        return typeof obj !== 'undefined' && obj !== null;\n    } else if (arguments.length === 2) {\n        let attr = arguments[1];\n        const keys = Array.isArray(attr) ? attr : attr.split('.').filter(Boolean);\n        let result = obj;\n        for (const key of keys) {\n            if (result == null || typeof result !== 'object') {\n                return false;\n            }\n            result = result[key];\n        }\n        return result !== undefined && result !== null;\n    }\n}\n\nfunction getIfPresent(obj, defaultValue) {\n    return isPresent(obj) ? obj : defaultValue;\n}\n\nfunction isValidUUID(uuid) {\n    return typeof uuid === 'string' && /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/.test(uuid);\n}\n\nfunction isValidPortNumber(port) {\n    return /^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$/.test(port);\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction getRandomPort(portString) {\n    let portParts = portString.split(/,|\\//);\n    let randomPart = portParts[Math.floor(Math.random() * portParts.length)];\n    if (randomPart.includes('-')) {\n        let [min, max] = randomPart.split('-').map(Number);\n        return getRandomInt(min, max);\n    } else {\n        return Number(randomPart);\n    }\n}\n\nfunction numberToString(value) {\n    return Number.isSafeInteger(value) ? String(value) : BigInt(value).toString();\n}\n\n/**\n * \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/producers/clashmeta.js\n */\nfunction ClashMeta_Producer() {\n    const ipVersions = {\n        dual: 'dual',\n        'v4-only': 'ipv4',\n        'v6-only': 'ipv6',\n        'prefer-v4': 'ipv4-prefer',\n        'prefer-v6': 'ipv6-prefer',\n    };\n\n    const type = 'ALL';\n    const produce = (proxies, type, opts = {}) => {\n        const list = proxies\n            .filter((proxy) => {\n                if (opts['include-unsupported-proxy']) return true;\n                if (proxy.type === 'snell' && proxy.version >= 4) {\n                    return false;\n                } else if (['juicity'].includes(proxy.type)) {\n                    return false;\n                } else if (\n                    ['ss'].includes(proxy.type) &&\n                    ![\n                        'aes-128-ctr',\n                        'aes-192-ctr',\n                        'aes-256-ctr',\n                        'aes-128-cfb',\n                        'aes-192-cfb',\n                        'aes-256-cfb',\n                        'aes-128-gcm',\n                        'aes-192-gcm',\n                        'aes-256-gcm',\n                        'aes-128-ccm',\n                        'aes-192-ccm',\n                        'aes-256-ccm',\n                        'aes-128-gcm-siv',\n                        'aes-256-gcm-siv',\n                        'chacha20-ietf',\n                        'chacha20',\n                        'xchacha20',\n                        'chacha20-ietf-poly1305',\n                        'xchacha20-ietf-poly1305',\n                        'chacha8-ietf-poly1305',\n                        'xchacha8-ietf-poly1305',\n                        '2022-blake3-aes-128-gcm',\n                        '2022-blake3-aes-256-gcm',\n                        '2022-blake3-chacha20-poly1305',\n                        'lea-128-gcm',\n                        'lea-192-gcm',\n                        'lea-256-gcm',\n                        'rabbit128-poly1305',\n                        'aegis-128l',\n                        'aegis-256',\n                        'aez-384',\n                        'deoxys-ii-256-128',\n                        'rc4-md5',\n                        'none',\n                    ].includes(proxy.cipher)\n                ) {\n                    // https://wiki.metacubex.one/config/proxies/ss/#cipher\n                    return false;\n                }\n                return true;\n            })\n            .map((proxy) => {\n                if (proxy.type === 'vmess') {\n                    // handle vmess aead\n                    if (isPresent(proxy, 'aead')) {\n                        if (proxy.aead) {\n                            proxy.alterId = 0;\n                        }\n                        delete proxy.aead;\n                    }\n                    if (isPresent(proxy, 'sni')) {\n                        proxy.servername = proxy.sni;\n                        delete proxy.sni;\n                    }\n                    // https://github.com/MetaCubeX/Clash.Meta/blob/Alpha/docs/config.yaml#L400\n                    // https://stash.wiki/proxy-protocols/proxy-types#vmess\n                    if (isPresent(proxy, 'cipher') && !['auto', 'none', 'zero', 'aes-128-gcm', 'chacha20-poly1305'].includes(proxy.cipher)) {\n                        proxy.cipher = 'auto';\n                    }\n                } else if (proxy.type === 'tuic') {\n                    if (isPresent(proxy, 'alpn')) {\n                        proxy.alpn = Array.isArray(proxy.alpn) ? proxy.alpn : [proxy.alpn];\n                    } else {\n                        proxy.alpn = ['h3'];\n                    }\n                    if (isPresent(proxy, 'tfo') && !isPresent(proxy, 'fast-open')) {\n                        proxy['fast-open'] = proxy.tfo;\n                    }\n                    // https://github.com/MetaCubeX/Clash.Meta/blob/Alpha/adapter/outbound/tuic.go#L197\n                    if ((!proxy.token || proxy.token.length === 0) && !isPresent(proxy, 'version')) {\n                        proxy.version = 5;\n                    }\n                } else if (proxy.type === 'hysteria') {\n                    // auth_str \u5C06\u4F1A\u5728\u672A\u6765\u67D0\u4E2A\u65F6\u5019\u5220\u9664 \u4F46\u662F\u6709\u7684\u673A\u573A\u4E0D\u89C4\u8303\n                    if (isPresent(proxy, 'auth_str') && !isPresent(proxy, 'auth-str')) {\n                        proxy['auth-str'] = proxy['auth_str'];\n                    }\n                    if (isPresent(proxy, 'alpn')) {\n                        proxy.alpn = Array.isArray(proxy.alpn) ? proxy.alpn : [proxy.alpn];\n                    }\n                    if (isPresent(proxy, 'tfo') && !isPresent(proxy, 'fast-open')) {\n                        proxy['fast-open'] = proxy.tfo;\n                    }\n                } else if (proxy.type === 'wireguard') {\n                    proxy.keepalive = proxy.keepalive ?? proxy['persistent-keepalive'];\n                    proxy['persistent-keepalive'] = proxy.keepalive;\n                    proxy['preshared-key'] = proxy['preshared-key'] ?? proxy['pre-shared-key'];\n                    proxy['pre-shared-key'] = proxy['preshared-key'];\n                } else if (proxy.type === 'snell' && proxy.version < 3) {\n                    delete proxy.udp;\n                } else if (proxy.type === 'vless') {\n                    if (isPresent(proxy, 'sni')) {\n                        proxy.servername = proxy.sni;\n                        delete proxy.sni;\n                    }\n                } else if (proxy.type === 'ss') {\n                    if (isPresent(proxy, 'shadow-tls-password') && !isPresent(proxy, 'plugin')) {\n                        proxy.plugin = 'shadow-tls';\n                        proxy['plugin-opts'] = {\n                            host: proxy['shadow-tls-sni'],\n                            password: proxy['shadow-tls-password'],\n                            version: proxy['shadow-tls-version'],\n                        };\n                        delete proxy['shadow-tls-password'];\n                        delete proxy['shadow-tls-sni'];\n                        delete proxy['shadow-tls-version'];\n                    }\n                }\n\n                if (['vmess', 'vless'].includes(proxy.type) && proxy.network === 'http') {\n                    let httpPath = proxy['http-opts']?.path;\n                    if (isPresent(proxy, 'http-opts.path') && !Array.isArray(httpPath)) {\n                        proxy['http-opts'].path = [httpPath];\n                    }\n                    let httpHost = proxy['http-opts']?.headers?.Host;\n                    if (isPresent(proxy, 'http-opts.headers.Host') && !Array.isArray(httpHost)) {\n                        proxy['http-opts'].headers.Host = [httpHost];\n                    }\n                }\n                if (['vmess', 'vless'].includes(proxy.type) && proxy.network === 'h2') {\n                    let path = proxy['h2-opts']?.path;\n                    if (isPresent(proxy, 'h2-opts.path') && Array.isArray(path)) {\n                        proxy['h2-opts'].path = path[0];\n                    }\n                    let host = proxy['h2-opts']?.headers?.host;\n                    if (isPresent(proxy, 'h2-opts.headers.Host') && !Array.isArray(host)) {\n                        proxy['h2-opts'].headers.host = [host];\n                    }\n                }\n                if (['ws'].includes(proxy.network)) {\n                    const networkPath = proxy[`${proxy.network}-opts`]?.path;\n                    if (networkPath) {\n                        const reg = /^(.*?)(?:\\?ed=(\\d+))?$/;\n                        // eslint-disable-next-line no-unused-vars\n                        const [_, path = '', ed = ''] = reg.exec(networkPath);\n                        proxy[`${proxy.network}-opts`].path = path;\n                        if (ed !== '') {\n                            proxy['ws-opts']['early-data-header-name'] = 'Sec-WebSocket-Protocol';\n                            proxy['ws-opts']['max-early-data'] = parseInt(ed, 10);\n                        }\n                    } else {\n                        proxy[`${proxy.network}-opts`] = proxy[`${proxy.network}-opts`] || {};\n                        proxy[`${proxy.network}-opts`].path = '/';\n                    }\n                }\n\n                if (proxy['plugin-opts']?.tls) {\n                    if (isPresent(proxy, 'skip-cert-verify')) {\n                        proxy['plugin-opts']['skip-cert-verify'] = proxy['skip-cert-verify'];\n                    }\n                }\n                if (['trojan', 'tuic', 'hysteria', 'hysteria2', 'juicity', 'anytls'].includes(proxy.type)) {\n                    delete proxy.tls;\n                }\n\n                if (proxy['tls-fingerprint']) {\n                    proxy.fingerprint = proxy['tls-fingerprint'];\n                }\n                delete proxy['tls-fingerprint'];\n\n                if (proxy['underlying-proxy']) {\n                    proxy['dialer-proxy'] = proxy['underlying-proxy'];\n                }\n                delete proxy['underlying-proxy'];\n\n                if (isPresent(proxy, 'tls') && typeof proxy.tls !== 'boolean') {\n                    delete proxy.tls;\n                }\n                delete proxy.subName;\n                delete proxy.collectionName;\n                delete proxy.id;\n                delete proxy.resolved;\n                delete proxy['no-resolve'];\n                if (type !== 'internal' || opts['delete-underscore-fields']) {\n                    for (const key in proxy) {\n                        if (proxy[key] == null || /^_/i.test(key)) {\n                            delete proxy[key];\n                        }\n                    }\n                }\n                if (['grpc'].includes(proxy.network) && proxy[`${proxy.network}-opts`]) {\n                    delete proxy[`${proxy.network}-opts`]['_grpc-type'];\n                    delete proxy[`${proxy.network}-opts`]['_grpc-authority'];\n                }\n\n                if (proxy['ip-version']) {\n                    proxy['ip-version'] = ipVersions[proxy['ip-version']] || proxy['ip-version'];\n                }\n                return proxy;\n            });\n\n        return type === 'internal' ? list : 'proxies:\\n' + list.map((proxy) => '  - ' + JSON.stringify(proxy) + '\\n').join('');\n    };\n    return { type, produce };\n}\n\n// \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/producers/sing-box.js\nfunction Singbox_Producer() {\n    const ipVersions = {\n        ipv4: 'ipv4_only',\n        ipv6: 'ipv6_only',\n        'v4-only': 'ipv4_only',\n        'v6-only': 'ipv6_only',\n        'ipv4-prefer': 'prefer_ipv4',\n        'ipv6-prefer': 'prefer_ipv6',\n        'prefer-v4': 'prefer_ipv4',\n        'prefer-v6': 'prefer_ipv6',\n    };\n\n    const ipVersionParser = (proxy, parsedProxy) => {\n        const strategy = ipVersions[proxy['ip-version']];\n        if (proxy._dns_server && strategy) {\n            parsedProxy.domain_resolver = {\n                server: proxy._dns_server,\n                strategy,\n            };\n        }\n    };\n    const detourParser = (proxy, parsedProxy) => {\n        parsedProxy.detour = proxy['dialer-proxy'] || proxy.detour;\n    };\n    const networkParser = (proxy, parsedProxy) => {\n        if (['tcp', 'udp'].includes(proxy._network)) parsedProxy.network = proxy._network;\n    };\n    const tfoParser = (proxy, parsedProxy) => {\n        parsedProxy.tcp_fast_open = false;\n        if (proxy.tfo) parsedProxy.tcp_fast_open = true;\n        if (proxy.tcp_fast_open) parsedProxy.tcp_fast_open = true;\n        if (proxy['tcp-fast-open']) parsedProxy.tcp_fast_open = true;\n        if (!parsedProxy.tcp_fast_open) delete parsedProxy.tcp_fast_open;\n    };\n\n    const smuxParser = (smux, proxy) => {\n        if (!smux || !smux.enabled) return;\n        proxy.multiplex = { enabled: true };\n        proxy.multiplex.protocol = smux.protocol;\n        if (smux['max-connections']) proxy.multiplex.max_connections = parseInt(`${smux['max-connections']}`, 10);\n        if (smux['max-streams']) proxy.multiplex.max_streams = parseInt(`${smux['max-streams']}`, 10);\n        if (smux['min-streams']) proxy.multiplex.min_streams = parseInt(`${smux['min-streams']}`, 10);\n        if (smux.padding) proxy.multiplex.padding = true;\n        if (smux['brutal-opts']?.up || smux['brutal-opts']?.down) {\n            proxy.multiplex.brutal = {\n                enabled: true,\n            };\n            if (smux['brutal-opts']?.up) proxy.multiplex.brutal.up_mbps = parseInt(`${smux['brutal-opts']?.up}`, 10);\n            if (smux['brutal-opts']?.down) proxy.multiplex.brutal.down_mbps = parseInt(`${smux['brutal-opts']?.down}`, 10);\n        }\n    };\n\n    const wsParser = (proxy, parsedProxy) => {\n        const transport = { type: 'ws', headers: {} };\n        if (proxy['ws-opts']) {\n            const {\n                path: wsPath = '',\n                headers: wsHeaders = {},\n                'max-early-data': max_early_data,\n                'early-data-header-name': early_data_header_name,\n            } = proxy['ws-opts'];\n            transport.early_data_header_name = early_data_header_name;\n            transport.max_early_data = parseInt(max_early_data, 10);\n            if (wsPath !== '') transport.path = `${wsPath}`;\n            if (Object.keys(wsHeaders).length > 0) {\n                const headers = {};\n                for (const key of Object.keys(wsHeaders)) {\n                    let value = wsHeaders[key];\n                    if (value === '') continue;\n                    if (!Array.isArray(value)) value = [`${value}`];\n                    if (value.length > 0) headers[key] = value;\n                }\n                const { Host: wsHost } = headers;\n                if (wsHost.length === 1)\n                    for (const item of `Host:${wsHost[0]}`.split('\\n')) {\n                        const [key, value] = item.split(':');\n                        if (value.trim() === '') continue;\n                        headers[key.trim()] = value.trim().split(',');\n                    }\n                transport.headers = headers;\n            }\n        }\n        if (proxy['ws-headers']) {\n            const headers = {};\n            for (const key of Object.keys(proxy['ws-headers'])) {\n                let value = proxy['ws-headers'][key];\n                if (value === '') continue;\n                if (!Array.isArray(value)) value = [`${value}`];\n                if (value.length > 0) headers[key] = value;\n            }\n            const { Host: wsHost } = headers;\n            if (wsHost.length === 1)\n                for (const item of `Host:${wsHost[0]}`.split('\\n')) {\n                    const [key, value] = item.split(':');\n                    if (value.trim() === '') continue;\n                    headers[key.trim()] = value.trim().split(',');\n                }\n            for (const key of Object.keys(headers)) transport.headers[key] = headers[key];\n        }\n        if (proxy['ws-path'] && proxy['ws-path'] !== '') transport.path = `${proxy['ws-path']}`;\n        if (transport.path) {\n            const reg = /^(.*?)(?:\\?ed=(\\d+))?$/;\n            // eslint-disable-next-line no-unused-vars\n            const [_, path = '', ed = ''] = reg.exec(transport.path);\n            transport.path = path;\n            if (ed !== '') {\n                transport.early_data_header_name = 'Sec-WebSocket-Protocol';\n                transport.max_early_data = parseInt(ed, 10);\n            }\n        }\n\n        if (parsedProxy.tls.insecure) parsedProxy.tls.server_name = transport.headers.Host[0];\n        if (proxy['ws-opts'] && proxy['ws-opts']['v2ray-http-upgrade']) {\n            transport.type = 'httpupgrade';\n            if (transport.headers.Host) {\n                transport.host = transport.headers.Host[0];\n                delete transport.headers.Host;\n            }\n            if (transport.max_early_data) delete transport.max_early_data;\n            if (transport.early_data_header_name) delete transport.early_data_header_name;\n        }\n        for (const key of Object.keys(transport.headers)) {\n            const value = transport.headers[key];\n            if (value.length === 1) transport.headers[key] = value[0];\n        }\n        parsedProxy.transport = transport;\n    };\n\n    const h1Parser = (proxy, parsedProxy) => {\n        const transport = { type: 'http', headers: {} };\n        if (proxy['http-opts']) {\n            const { method = '', path: h1Path = '', headers: h1Headers = {} } = proxy['http-opts'];\n            if (method !== '') transport.method = method;\n            if (Array.isArray(h1Path)) {\n                transport.path = `${h1Path[0]}`;\n            } else if (h1Path !== '') transport.path = `${h1Path}`;\n            for (const key of Object.keys(h1Headers)) {\n                let value = h1Headers[key];\n                if (value === '') continue;\n                if (key.toLowerCase() === 'host') {\n                    let host = value;\n                    if (!Array.isArray(host)) host = `${host}`.split(',').map((i) => i.trim());\n                    if (host.length > 0) transport.host = host;\n                    continue;\n                }\n                if (!Array.isArray(value)) value = `${value}`.split(',').map((i) => i.trim());\n                if (value.length > 0) transport.headers[key] = value;\n            }\n        }\n        if (proxy['http-host'] && proxy['http-host'] !== '') {\n            let host = proxy['http-host'];\n            if (!Array.isArray(host)) host = `${host}`.split(',').map((i) => i.trim());\n            if (host.length > 0) transport.host = host;\n        }\n        // if (!transport.host) return;\n        if (proxy['http-path'] && proxy['http-path'] !== '') {\n            const path = proxy['http-path'];\n            if (Array.isArray(path)) {\n                transport.path = `${path[0]}`;\n            } else if (path !== '') transport.path = `${path}`;\n        }\n        if (parsedProxy.tls.insecure) parsedProxy.tls.server_name = transport.host[0];\n        if (transport.host?.length === 1) transport.host = transport.host[0];\n        for (const key of Object.keys(transport.headers)) {\n            const value = transport.headers[key];\n            if (value.length === 1) transport.headers[key] = value[0];\n        }\n        parsedProxy.transport = transport;\n    };\n\n    const h2Parser = (proxy, parsedProxy) => {\n        const transport = { type: 'http' };\n        if (proxy['h2-opts']) {\n            let { host = '', path = '' } = proxy['h2-opts'];\n            if (path !== '') transport.path = `${path}`;\n            if (host !== '') {\n                if (!Array.isArray(host)) host = `${host}`.split(',').map((i) => i.trim());\n                if (host.length > 0) transport.host = host;\n            }\n        }\n        if (proxy['h2-host'] && proxy['h2-host'] !== '') {\n            let host = proxy['h2-host'];\n            if (!Array.isArray(host)) host = `${host}`.split(',').map((i) => i.trim());\n            if (host.length > 0) transport.host = host;\n        }\n        if (proxy['h2-path'] && proxy['h2-path'] !== '') transport.path = `${proxy['h2-path']}`;\n        parsedProxy.tls.enabled = true;\n        if (parsedProxy.tls.insecure) parsedProxy.tls.server_name = transport.host[0];\n        if (transport.host.length === 1) transport.host = transport.host[0];\n        parsedProxy.transport = transport;\n    };\n\n    const grpcParser = (proxy, parsedProxy) => {\n        const transport = { type: 'grpc' };\n        if (proxy['grpc-opts']) {\n            const serviceName = proxy['grpc-opts']['grpc-service-name'];\n            if (serviceName != null && serviceName !== '') transport.service_name = `${serviceName}`;\n        }\n        parsedProxy.transport = transport;\n    };\n\n    const tlsParser = (proxy, parsedProxy) => {\n        if (proxy.tls) parsedProxy.tls.enabled = true;\n        if (proxy.servername && proxy.servername !== '') parsedProxy.tls.server_name = proxy.servername;\n        if (proxy.peer && proxy.peer !== '') parsedProxy.tls.server_name = proxy.peer;\n        if (proxy.sni && proxy.sni !== '') parsedProxy.tls.server_name = proxy.sni;\n        if (proxy['skip-cert-verify']) parsedProxy.tls.insecure = true;\n        if (proxy.insecure) parsedProxy.tls.insecure = true;\n        if (proxy['disable-sni']) parsedProxy.tls.disable_sni = true;\n        if (typeof proxy.alpn === 'string') {\n            parsedProxy.tls.alpn = [proxy.alpn];\n        } else if (Array.isArray(proxy.alpn)) parsedProxy.tls.alpn = proxy.alpn;\n        if (proxy.ca) parsedProxy.tls.certificate_path = `${proxy.ca}`;\n        if (proxy.ca_str) parsedProxy.tls.certificate = [proxy.ca_str];\n        if (proxy['ca-str']) parsedProxy.tls.certificate = [proxy['ca-str']];\n        if (proxy['reality-opts']) {\n            parsedProxy.tls.reality = { enabled: true };\n            if (proxy['reality-opts']['public-key']) parsedProxy.tls.reality.public_key = proxy['reality-opts']['public-key'];\n            if (proxy['reality-opts']['short-id']) parsedProxy.tls.reality.short_id = proxy['reality-opts']['short-id'];\n            parsedProxy.tls.utls = { enabled: true };\n        }\n        if (!['hysteria', 'hysteria2', 'tuic'].includes(proxy.type) && proxy['client-fingerprint'] && proxy['client-fingerprint'] !== '')\n            parsedProxy.tls.utls = {\n                enabled: true,\n                fingerprint: proxy['client-fingerprint'],\n            };\n        if (!parsedProxy.tls.enabled) delete parsedProxy.tls;\n    };\n\n    const sshParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'ssh',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.username) parsedProxy.user = proxy.username;\n        if (proxy.password) parsedProxy.password = proxy.password;\n        // https://wiki.metacubex.one/config/proxies/ssh\n        // https://sing-box.sagernet.org/zh/configuration/outbound/ssh\n        if (proxy['privateKey']) parsedProxy.private_key_path = proxy['privateKey'];\n        if (proxy['private-key']) parsedProxy.private_key_path = proxy['private-key'];\n        if (proxy['private-key-passphrase']) parsedProxy.private_key_passphrase = proxy['private-key-passphrase'];\n        if (proxy['server-fingerprint']) {\n            parsedProxy.host_key = [proxy['server-fingerprint']];\n            // https://manual.nssurge.com/policy/ssh.html\n            // Surge only supports curve25519-sha256 as the kex algorithm and aes128-gcm as the encryption algorithm. It means that the SSH server must use OpenSSH v7.3 or above. (It should not be a problem since OpenSSH 7.3 was released on 2016-08-01.)\n            // TODO: ?\n            parsedProxy.host_key_algorithms = [proxy['server-fingerprint'].split(' ')[0]];\n        }\n        if (proxy['host-key']) parsedProxy.host_key = proxy['host-key'];\n        if (proxy['host-key-algorithms']) parsedProxy.host_key_algorithms = proxy['host-key-algorithms'];\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const httpParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'http',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            tls: { enabled: false, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.username) parsedProxy.username = proxy.username;\n        if (proxy.password) parsedProxy.password = proxy.password;\n        if (proxy.headers) {\n            parsedProxy.headers = {};\n            for (const k of Object.keys(proxy.headers)) {\n                parsedProxy.headers[k] = `${proxy.headers[k]}`;\n            }\n            if (Object.keys(parsedProxy.headers).length === 0) delete parsedProxy.headers;\n        }\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const socks5Parser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'socks',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            password: proxy.password,\n            version: '5',\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.username) parsedProxy.username = proxy.username;\n        if (proxy.password) parsedProxy.password = proxy.password;\n        if (proxy.uot) parsedProxy.udp_over_tcp = true;\n        if (proxy['udp-over-tcp']) parsedProxy.udp_over_tcp = true;\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const shadowTLSParser = (proxy = {}) => {\n        const ssPart = {\n            tag: proxy.name,\n            type: 'shadowsocks',\n            method: proxy.cipher,\n            password: proxy.password,\n            detour: `${proxy.name}_shadowtls`,\n        };\n        if (proxy.uot) ssPart.udp_over_tcp = true;\n        if (proxy['udp-over-tcp']) {\n            ssPart.udp_over_tcp = {\n                enabled: true,\n                version: !proxy['udp-over-tcp-version'] || proxy['udp-over-tcp-version'] === 1 ? 1 : 2,\n            };\n        }\n        const stPart = {\n            tag: `${proxy.name}_shadowtls`,\n            type: 'shadowtls',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            version: proxy['plugin-opts'].version,\n            password: proxy['plugin-opts'].password,\n            tls: {\n                enabled: true,\n                server_name: proxy['plugin-opts'].host,\n                utls: {\n                    enabled: true,\n                    fingerprint: proxy['client-fingerprint'],\n                },\n            },\n        };\n        if (stPart.server_port < 0 || stPart.server_port > 65535) throw '\u7AEF\u53E3\u503C\u975E\u6CD5';\n        if (proxy['fast-open'] === true) stPart.udp_fragment = true;\n        tfoParser(proxy, stPart);\n        detourParser(proxy, stPart);\n        smuxParser(proxy.smux, ssPart);\n        ipVersionParser(proxy, stPart);\n        return { type: 'ss-with-st', ssPart, stPart };\n    };\n    const ssParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'shadowsocks',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            method: proxy.cipher,\n            password: proxy.password,\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.uot) parsedProxy.udp_over_tcp = true;\n        if (proxy['udp-over-tcp']) {\n            parsedProxy.udp_over_tcp = {\n                enabled: true,\n                version: !proxy['udp-over-tcp-version'] || proxy['udp-over-tcp-version'] === 1 ? 1 : 2,\n            };\n        }\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        if (proxy.plugin) {\n            const optArr = [];\n            if (proxy.plugin === 'obfs') {\n                parsedProxy.plugin = 'obfs-local';\n                parsedProxy.plugin_opts = '';\n                if (proxy['obfs-host']) proxy['plugin-opts'].host = proxy['obfs-host'];\n                Object.keys(proxy['plugin-opts']).forEach((k) => {\n                    switch (k) {\n                        case 'mode':\n                            optArr.push(`obfs=${proxy['plugin-opts'].mode}`);\n                            break;\n                        case 'host':\n                            optArr.push(`obfs-host=${proxy['plugin-opts'].host}`);\n                            break;\n                        default:\n                            optArr.push(`${k}=${proxy['plugin-opts'][k]}`);\n                            break;\n                    }\n                });\n            }\n            if (proxy.plugin === 'v2ray-plugin') {\n                parsedProxy.plugin = 'v2ray-plugin';\n                if (proxy['ws-host']) proxy['plugin-opts'].host = proxy['ws-host'];\n                if (proxy['ws-path']) proxy['plugin-opts'].path = proxy['ws-path'];\n                Object.keys(proxy['plugin-opts']).forEach((k) => {\n                    switch (k) {\n                        case 'tls':\n                            if (proxy['plugin-opts'].tls) optArr.push('tls');\n                            break;\n                        case 'host':\n                            optArr.push(`host=${proxy['plugin-opts'].host}`);\n                            break;\n                        case 'path':\n                            optArr.push(`path=${proxy['plugin-opts'].path}`);\n                            break;\n                        case 'headers':\n                            optArr.push(`headers=${JSON.stringify(proxy['plugin-opts'].headers)}`);\n                            break;\n                        case 'mux':\n                            if (proxy['plugin-opts'].mux) parsedProxy.multiplex = { enabled: true };\n                            break;\n                        default:\n                            optArr.push(`${k}=${proxy['plugin-opts'][k]}`);\n                    }\n                });\n            }\n            parsedProxy.plugin_opts = optArr.join(';');\n        }\n\n        return parsedProxy;\n    };\n    // eslint-disable-next-line no-unused-vars\n    const ssrParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'shadowsocksr',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            method: proxy.cipher,\n            password: proxy.password,\n            obfs: proxy.obfs,\n            protocol: proxy.protocol,\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy['obfs-param']) parsedProxy.obfs_param = proxy['obfs-param'];\n        if (proxy['protocol-param'] && proxy['protocol-param'] !== '') parsedProxy.protocol_param = proxy['protocol-param'];\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const vmessParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'vmess',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            uuid: proxy.uuid,\n            security: proxy.cipher,\n            alter_id: parseInt(`${proxy.alterId}`, 10),\n            tls: { enabled: false, server_name: proxy.server, insecure: false },\n        };\n        if (['auto', 'none', 'zero', 'aes-128-gcm', 'chacha20-poly1305', 'aes-128-ctr'].indexOf(parsedProxy.security) === -1)\n            parsedProxy.security = 'auto';\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.xudp) parsedProxy.packet_encoding = 'xudp';\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        if (proxy.network === 'ws') wsParser(proxy, parsedProxy);\n        if (proxy.network === 'h2') h2Parser(proxy, parsedProxy);\n        if (proxy.network === 'http') h1Parser(proxy, parsedProxy);\n        if (proxy.network === 'grpc') grpcParser(proxy, parsedProxy);\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const vlessParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'vless',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            uuid: proxy.uuid,\n            tls: { enabled: false, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.xudp) parsedProxy.packet_encoding = 'xudp';\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        // if (['xtls-rprx-vision', ''].includes(proxy.flow)) parsedProxy.flow = proxy.flow;\n        if (proxy.flow != null) parsedProxy.flow = proxy.flow;\n        if (proxy.network === 'ws') wsParser(proxy, parsedProxy);\n        if (proxy.network === 'h2') h2Parser(proxy, parsedProxy);\n        if (proxy.network === 'http') h1Parser(proxy, parsedProxy);\n        if (proxy.network === 'grpc') grpcParser(proxy, parsedProxy);\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n    const trojanParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'trojan',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            password: proxy.password,\n            tls: { enabled: true, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        if (proxy.network === 'grpc') grpcParser(proxy, parsedProxy);\n        if (proxy.network === 'ws') wsParser(proxy, parsedProxy);\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n    const hysteriaParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'hysteria',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            disable_mtu_discovery: false,\n            tls: { enabled: true, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy.auth_str) parsedProxy.auth_str = `${proxy.auth_str}`;\n        if (proxy['auth-str']) parsedProxy.auth_str = `${proxy['auth-str']}`;\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        // eslint-disable-next-line no-control-regex\n        const reg = new RegExp('^[0-9]+[ \\t]*[KMGT]*[Bb]ps$');\n        // sing-box \u8DDF\u6587\u6863\u4E0D\u4E00\u81F4, \u4F46\u662F\u61D2\u5F97\u5168\u8F6C, \u53EA\u5904\u7406\u6700\u5E38\u89C1\u7684 Mbps\n        if (reg.test(`${proxy.up}`) && !`${proxy.up}`.endsWith('Mbps')) {\n            parsedProxy.up = `${proxy.up}`;\n        } else {\n            parsedProxy.up_mbps = parseInt(`${proxy.up}`, 10);\n        }\n        if (reg.test(`${proxy.down}`) && !`${proxy.down}`.endsWith('Mbps')) {\n            parsedProxy.down = `${proxy.down}`;\n        } else {\n            parsedProxy.down_mbps = parseInt(`${proxy.down}`, 10);\n        }\n        if (proxy.obfs) parsedProxy.obfs = proxy.obfs;\n        if (proxy.recv_window_conn) parsedProxy.recv_window_conn = proxy.recv_window_conn;\n        if (proxy['recv-window-conn']) parsedProxy.recv_window_conn = proxy['recv-window-conn'];\n        if (proxy.recv_window) parsedProxy.recv_window = proxy.recv_window;\n        if (proxy['recv-window']) parsedProxy.recv_window = proxy['recv-window'];\n        if (proxy.disable_mtu_discovery) {\n            if (typeof proxy.disable_mtu_discovery === 'boolean') {\n                parsedProxy.disable_mtu_discovery = proxy.disable_mtu_discovery;\n            } else {\n                if (proxy.disable_mtu_discovery === 1) parsedProxy.disable_mtu_discovery = true;\n            }\n        }\n        networkParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n    const hysteria2Parser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'hysteria2',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            password: proxy.password,\n            obfs: {},\n            tls: { enabled: true, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy['hop-interval'])\n            parsedProxy.hop_interval = /^\\d+$/.test(proxy['hop-interval']) ? `${proxy['hop-interval']}s` : proxy['hop-interval'];\n        if (proxy['ports']) parsedProxy.server_ports = proxy['ports'].split(/\\s*,\\s*/).map((p) => p.replace(/\\s*-\\s*/g, ':'));\n        if (proxy.up) parsedProxy.up_mbps = parseInt(`${proxy.up}`, 10);\n        if (proxy.down) parsedProxy.down_mbps = parseInt(`${proxy.down}`, 10);\n        if (proxy.obfs === 'salamander') parsedProxy.obfs.type = 'salamander';\n        if (proxy['obfs-password']) parsedProxy.obfs.password = proxy['obfs-password'];\n        if (!parsedProxy.obfs.type) delete parsedProxy.obfs;\n        networkParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n    const tuic5Parser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'tuic',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            uuid: proxy.uuid,\n            password: proxy.password,\n            tls: { enabled: true, server_name: proxy.server, insecure: false },\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        if (proxy['congestion-controller'] && proxy['congestion-controller'] !== 'cubic')\n            parsedProxy.congestion_control = proxy['congestion-controller'];\n        if (proxy['udp-relay-mode'] && proxy['udp-relay-mode'] !== 'native') parsedProxy.udp_relay_mode = proxy['udp-relay-mode'];\n        if (proxy['reduce-rtt']) parsedProxy.zero_rtt_handshake = true;\n        if (proxy['udp-over-stream']) parsedProxy.udp_over_stream = true;\n        if (proxy['heartbeat-interval']) parsedProxy.heartbeat = `${proxy['heartbeat-interval']}ms`;\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n    const anytlsParser = (proxy = {}) => {\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'anytls',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            password: proxy.password,\n            tls: { enabled: true, server_name: proxy.server, insecure: false },\n        };\n        if (/^\\d+$/.test(proxy['idle-session-check-interval'])) parsedProxy.idle_session_check_interval = `${proxy['idle-session-check-interval']}s`;\n        if (/^\\d+$/.test(proxy['idle-session-timeout'])) parsedProxy.idle_session_timeout = `${proxy['idle-session-timeout']}s`;\n        if (/^\\d+$/.test(proxy['min-idle-session'])) parsedProxy.min_idle_session = parseInt(`${proxy['min-idle-session']}`, 10);\n        detourParser(proxy, parsedProxy);\n        tlsParser(proxy, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const wireguardParser = (proxy = {}) => {\n        const local_address = ['ip', 'ipv6']\n            .map((i) => proxy[i])\n            .map((i) => {\n                if (isIPv4(i)) return `${i}/32`;\n                if (isIPv6(i)) return `${i}/128`;\n            })\n            .filter((i) => i);\n        const parsedProxy = {\n            tag: proxy.name,\n            type: 'wireguard',\n            server: proxy.server,\n            server_port: parseInt(`${proxy.port}`, 10),\n            local_address,\n            private_key: proxy['private-key'],\n            peer_public_key: proxy['public-key'],\n            pre_shared_key: proxy['pre-shared-key'],\n            reserved: [],\n        };\n        if (parsedProxy.server_port < 0 || parsedProxy.server_port > 65535) throw 'invalid port';\n        if (proxy['fast-open']) parsedProxy.udp_fragment = true;\n        if (typeof proxy.reserved === 'string') {\n            parsedProxy.reserved = proxy.reserved;\n        } else if (Array.isArray(proxy.reserved)) {\n            for (const r of proxy.reserved) parsedProxy.reserved.push(r);\n        } else {\n            delete parsedProxy.reserved;\n        }\n        if (proxy.peers && proxy.peers.length > 0) {\n            parsedProxy.peers = [];\n            for (const p of proxy.peers) {\n                const peer = {\n                    server: p.server,\n                    server_port: parseInt(`${p.port}`, 10),\n                    public_key: p['public-key'],\n                    allowed_ips: p['allowed-ips'] || p.allowed_ips,\n                    reserved: [],\n                };\n                if (typeof p.reserved === 'string') {\n                    peer.reserved.push(p.reserved);\n                } else if (Array.isArray(p.reserved)) {\n                    for (const r of p.reserved) peer.reserved.push(r);\n                } else {\n                    delete peer.reserved;\n                }\n                if (p['pre-shared-key']) peer.pre_shared_key = p['pre-shared-key'];\n                parsedProxy.peers.push(peer);\n            }\n        }\n        networkParser(proxy, parsedProxy);\n        tfoParser(proxy, parsedProxy);\n        detourParser(proxy, parsedProxy);\n        smuxParser(proxy.smux, parsedProxy);\n        ipVersionParser(proxy, parsedProxy);\n        return parsedProxy;\n    };\n\n    const type = 'ALL';\n    const produce = (proxies, type, opts = {}) => {\n        const list = [];\n        ClashMeta_Producer()\n            .produce(proxies, 'internal', { 'include-unsupported-proxy': true })\n            .map((proxy) => {\n                try {\n                    switch (proxy.type) {\n                        case 'ssh':\n                            list.push(sshParser(proxy));\n                            break;\n                        case 'http':\n                            list.push(httpParser(proxy));\n                            break;\n                        case 'socks5':\n                            if (proxy.tls) {\n                                throw new Error(`Platform sing-box does not support proxy type: ${proxy.type} with tls`);\n                            } else {\n                                list.push(socks5Parser(proxy));\n                            }\n                            break;\n                        case 'ss':\n                            // if (!proxy.cipher) {\n                            //     proxy.cipher = 'none';\n                            // }\n                            // if (\n                            //     ![\n                            //         '2022-blake3-aes-128-gcm',\n                            //         '2022-blake3-aes-256-gcm',\n                            //         '2022-blake3-chacha20-poly1305',\n                            //         'aes-128-cfb',\n                            //         'aes-128-ctr',\n                            //         'aes-128-gcm',\n                            //         'aes-192-cfb',\n                            //         'aes-192-ctr',\n                            //         'aes-192-gcm',\n                            //         'aes-256-cfb',\n                            //         'aes-256-ctr',\n                            //         'aes-256-gcm',\n                            //         'chacha20-ietf',\n                            //         'chacha20-ietf-poly1305',\n                            //         'none',\n                            //         'rc4-md5',\n                            //         'xchacha20',\n                            //         'xchacha20-ietf-poly1305',\n                            //     ].includes(proxy.cipher)\n                            // ) {\n                            //     throw new Error(\n                            //         `cipher ${proxy.cipher} is not supported`,\n                            //     );\n                            // }\n                            if (proxy.plugin === 'shadow-tls') {\n                                const { ssPart, stPart } = shadowTLSParser(proxy);\n                                list.push(ssPart);\n                                list.push(stPart);\n                            } else {\n                                list.push(ssParser(proxy));\n                            }\n                            break;\n                        case 'ssr':\n                            if (opts['include-unsupported-proxy']) {\n                                list.push(ssrParser(proxy));\n                            } else {\n                                throw new Error(`Platform sing-box does not support proxy type: ${proxy.type}`);\n                            }\n                            break;\n                        case 'vmess':\n                            if (!proxy.network || ['ws', 'grpc', 'h2', 'http'].includes(proxy.network)) {\n                                list.push(vmessParser(proxy));\n                            } else {\n                                throw new Error(`Platform sing-box does not support proxy type: ${proxy.type} with network ${proxy.network}`);\n                            }\n                            break;\n                        case 'vless':\n                            if (!proxy.flow || ['xtls-rprx-vision'].includes(proxy.flow)) {\n                                list.push(vlessParser(proxy));\n                            } else {\n                                throw new Error(`Platform sing-box does not support proxy type: ${proxy.type} with flow ${proxy.flow}`);\n                            }\n                            break;\n                        case 'trojan':\n                            if (!proxy.flow) {\n                                list.push(trojanParser(proxy));\n                            } else {\n                                throw new Error(`Platform sing-box does not support proxy type: ${proxy.type} with flow ${proxy.flow}`);\n                            }\n                            break;\n                        case 'hysteria':\n                            list.push(hysteriaParser(proxy));\n                            break;\n                        case 'hysteria2':\n                            list.push(hysteria2Parser(proxy, opts['include-unsupported-proxy']));\n                            break;\n                        case 'tuic':\n                            if (!proxy.token || proxy.token.length === 0) {\n                                list.push(tuic5Parser(proxy));\n                            } else {\n                                throw new Error(`Platform sing-box does not support proxy type: TUIC v4`);\n                            }\n                            break;\n                        case 'wireguard':\n                            list.push(wireguardParser(proxy));\n                            break;\n                        case 'anytls':\n                            list.push(anytlsParser(proxy));\n                            break;\n                        default:\n                            throw new Error(`Platform sing-box does not support proxy type: ${proxy.type}`);\n                    }\n                } catch (e) {\n                    // console.log(e);\n                    $.error(e.message ?? e);\n                }\n            });\n\n        return type === 'internal' ? list : JSON.stringify({ outbounds: list }, null, 2);\n    };\n    return { type, produce };\n}\n\n/**\n * \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/producers/uri.js\n */\nfunction URI_Producer() {\n    const type = 'SINGLE';\n    const produce = (proxy) => {\n        let result = '';\n        delete proxy.subName;\n        delete proxy.collectionName;\n        delete proxy.id;\n        delete proxy.resolved;\n        delete proxy['no-resolve'];\n        for (const key in proxy) {\n            if (proxy[key] == null) {\n                delete proxy[key];\n            }\n        }\n        if (['trojan', 'tuic', 'hysteria', 'hysteria2', 'juicity'].includes(proxy.type)) {\n            delete proxy.tls;\n        }\n        if (!['vmess'].includes(proxy.type) && proxy.server && isIPv6(proxy.server)) {\n            proxy.server = `[${proxy.server}]`;\n        }\n        switch (proxy.type) {\n            case 'socks5':\n                result = `socks://${encodeURIComponent(Base64.encode(`${proxy.username ?? ''}:${proxy.password ?? ''}`))}@${proxy.server}:${proxy.port}#${proxy.name}`;\n                break;\n            case 'ss':\n                const userinfo = `${proxy.cipher}:${proxy.password}`;\n                result = `ss://${\n                    proxy.cipher?.startsWith('2022-blake3-')\n                        ? `${encodeURIComponent(proxy.cipher)}:${encodeURIComponent(proxy.password)}`\n                        : Base64.encode(userinfo)\n                }@${proxy.server}:${proxy.port}${proxy.plugin ? '/' : ''}`;\n                if (proxy.plugin) {\n                    result += '?plugin=';\n                    const opts = proxy['plugin-opts'];\n                    switch (proxy.plugin) {\n                        case 'obfs':\n                            result += encodeURIComponent(`simple-obfs;obfs=${opts.mode}${opts.host ? ';obfs-host=' + opts.host : ''}`);\n                            break;\n                        case 'v2ray-plugin':\n                            result += encodeURIComponent(\n                                `v2ray-plugin;obfs=${opts.mode}${opts.host ? ';obfs-host' + opts.host : ''}${opts.tls ? ';tls' : ''}`\n                            );\n                            break;\n                        case 'shadow-tls':\n                            result += encodeURIComponent(`shadow-tls;host=${opts.host};password=${opts.password};version=${opts.version}`);\n                            break;\n                        default:\n                            throw new Error(`Unsupported plugin option: ${proxy.plugin}`);\n                    }\n                }\n                if (proxy['udp-over-tcp']) {\n                    result = `${result}${proxy.plugin ? '&' : '?'}uot=1`;\n                }\n                if (proxy.tfo) {\n                    result = `${result}${proxy.plugin || proxy['udp-over-tcp'] ? '&' : '?'}tfo=1`;\n                }\n                result += `#${encodeURIComponent(proxy.name)}`;\n                break;\n            case 'ssr':\n                result = `${proxy.server}:${proxy.port}:${proxy.protocol}:${proxy.cipher}:${proxy.obfs}:${Base64.encode(proxy.password)}/`;\n                result += `?remarks=${Base64.encode(proxy.name)}${proxy['obfs-param'] ? '&obfsparam=' + Base64.encode(proxy['obfs-param']) : ''}${\n                    proxy['protocol-param'] ? '&protocolparam=' + Base64.encode(proxy['protocol-param']) : ''\n                }`;\n                result = 'ssr://' + Base64.encode(result);\n                break;\n            case 'vmess':\n                // V2RayN URI format\n                let type = '';\n                let net = proxy.network || 'tcp';\n                if (proxy.network === 'http') {\n                    net = 'tcp';\n                    type = 'http';\n                } else if (proxy.network === 'ws' && proxy['ws-opts']?.['v2ray-http-upgrade']) {\n                    net = 'httpupgrade';\n                }\n                result = {\n                    v: '2',\n                    ps: proxy.name,\n                    add: proxy.server,\n                    port: `${proxy.port}`,\n                    id: proxy.uuid,\n                    aid: `${proxy.alterId || 0}`,\n                    scy: proxy.cipher,\n                    net,\n                    type,\n                    tls: proxy.tls ? 'tls' : '',\n                    alpn: Array.isArray(proxy.alpn) ? proxy.alpn.join(',') : proxy.alpn,\n                    fp: proxy['client-fingerprint'],\n                };\n                if (proxy.tls && proxy.sni) {\n                    result.sni = proxy.sni;\n                }\n                // obfs\n                if (proxy.network) {\n                    let vmessTransportPath = proxy[`${proxy.network}-opts`]?.path;\n                    let vmessTransportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n\n                    if (['grpc'].includes(proxy.network)) {\n                        result.path = proxy[`${proxy.network}-opts`]?.['grpc-service-name'];\n                        // https://github.com/XTLS/Xray-core/issues/91\n                        result.type = proxy[`${proxy.network}-opts`]?.['_grpc-type'] || 'gun';\n                        result.host = proxy[`${proxy.network}-opts`]?.['_grpc-authority'];\n                    } else if (['kcp', 'quic'].includes(proxy.network)) {\n                        // https://github.com/XTLS/Xray-core/issues/91\n                        result.type = proxy[`${proxy.network}-opts`]?.[`_${proxy.network}-type`] || 'none';\n                        result.host = proxy[`${proxy.network}-opts`]?.[`_${proxy.network}-host`];\n                        result.path = proxy[`${proxy.network}-opts`]?.[`_${proxy.network}-path`];\n                    } else {\n                        if (vmessTransportPath) {\n                            result.path = Array.isArray(vmessTransportPath) ? vmessTransportPath[0] : vmessTransportPath;\n                        }\n                        if (vmessTransportHost) {\n                            result.host = Array.isArray(vmessTransportHost) ? vmessTransportHost[0] : vmessTransportHost;\n                        }\n                    }\n                }\n                result = 'vmess://' + Base64.encode(JSON.stringify(result));\n                break;\n            case 'vless':\n                let security = 'none';\n                const isReality = proxy['reality-opts'];\n                let sid = '';\n                let pbk = '';\n                let spx = '';\n                if (isReality) {\n                    security = 'reality';\n                    const publicKey = proxy['reality-opts']?.['public-key'];\n                    if (publicKey) {\n                        pbk = `&pbk=${encodeURIComponent(publicKey)}`;\n                    }\n                    const shortId = proxy['reality-opts']?.['short-id'];\n                    if (shortId) {\n                        sid = `&sid=${encodeURIComponent(shortId)}`;\n                    }\n                    const spiderX = proxy['reality-opts']?.['_spider-x'];\n                    if (spiderX) {\n                        spx = `&spx=${encodeURIComponent(spiderX)}`;\n                    }\n                } else if (proxy.tls) {\n                    security = 'tls';\n                }\n                let alpn = '';\n                if (proxy.alpn) {\n                    alpn = `&alpn=${encodeURIComponent(Array.isArray(proxy.alpn) ? proxy.alpn : proxy.alpn.join(','))}`;\n                }\n                let allowInsecure = '';\n                if (proxy['skip-cert-verify']) {\n                    allowInsecure = `&allowInsecure=1`;\n                }\n                let sni = '';\n                if (proxy.sni) {\n                    sni = `&sni=${encodeURIComponent(proxy.sni)}`;\n                }\n                let fp = '';\n                if (proxy['client-fingerprint']) {\n                    fp = `&fp=${encodeURIComponent(proxy['client-fingerprint'])}`;\n                }\n                let flow = '';\n                if (proxy.flow) {\n                    flow = `&flow=${encodeURIComponent(proxy.flow)}`;\n                }\n                let extra = '';\n                if (proxy._extra) {\n                    extra = `&extra=${encodeURIComponent(proxy._extra)}`;\n                }\n                let mode = '';\n                if (proxy._mode) {\n                    mode = `&mode=${encodeURIComponent(proxy._mode)}`;\n                }\n                let vlessType = proxy.network;\n                if (proxy.network === 'ws' && proxy['ws-opts']?.['v2ray-http-upgrade']) {\n                    vlessType = 'httpupgrade';\n                }\n\n                let vlessTransport = `&type=${encodeURIComponent(vlessType)}`;\n                if (['grpc'].includes(proxy.network)) {\n                    // https://github.com/XTLS/Xray-core/issues/91\n                    vlessTransport += `&mode=${encodeURIComponent(proxy[`${proxy.network}-opts`]?.['_grpc-type'] || 'gun')}`;\n                    const authority = proxy[`${proxy.network}-opts`]?.['_grpc-authority'];\n                    if (authority) {\n                        vlessTransport += `&authority=${encodeURIComponent(authority)}`;\n                    }\n                }\n\n                let vlessTransportServiceName = proxy[`${proxy.network}-opts`]?.[`${proxy.network}-service-name`];\n                let vlessTransportPath = proxy[`${proxy.network}-opts`]?.path;\n                let vlessTransportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n                if (vlessTransportPath) {\n                    vlessTransport += `&path=${encodeURIComponent(Array.isArray(vlessTransportPath) ? vlessTransportPath[0] : vlessTransportPath)}`;\n                }\n                if (vlessTransportHost) {\n                    vlessTransport += `&host=${encodeURIComponent(Array.isArray(vlessTransportHost) ? vlessTransportHost[0] : vlessTransportHost)}`;\n                }\n                if (vlessTransportServiceName) {\n                    vlessTransport += `&serviceName=${encodeURIComponent(vlessTransportServiceName)}`;\n                }\n                if (proxy.network === 'kcp') {\n                    if (proxy.seed) {\n                        vlessTransport += `&seed=${encodeURIComponent(proxy.seed)}`;\n                    }\n                    if (proxy.headerType) {\n                        vlessTransport += `&headerType=${encodeURIComponent(proxy.headerType)}`;\n                    }\n                }\n\n                result = `vless://${proxy.uuid}@${proxy.server}:${proxy.port}?security=${encodeURIComponent(\n                    security\n                )}${vlessTransport}${alpn}${allowInsecure}${sni}${fp}${flow}${sid}${spx}${pbk}${mode}${extra}#${encodeURIComponent(proxy.name)}`;\n                break;\n            case 'trojan':\n                let trojanTransport = '';\n                if (proxy.network) {\n                    let trojanType = proxy.network;\n                    if (proxy.network === 'ws' && proxy['ws-opts']?.['v2ray-http-upgrade']) {\n                        trojanType = 'httpupgrade';\n                    }\n                    trojanTransport = `&type=${encodeURIComponent(trojanType)}`;\n                    if (['grpc'].includes(proxy.network)) {\n                        let trojanTransportServiceName = proxy[`${proxy.network}-opts`]?.[`${proxy.network}-service-name`];\n                        let trojanTransportAuthority = proxy[`${proxy.network}-opts`]?.['_grpc-authority'];\n                        if (trojanTransportServiceName) {\n                            trojanTransport += `&serviceName=${encodeURIComponent(trojanTransportServiceName)}`;\n                        }\n                        if (trojanTransportAuthority) {\n                            trojanTransport += `&authority=${encodeURIComponent(trojanTransportAuthority)}`;\n                        }\n                        trojanTransport += `&mode=${encodeURIComponent(proxy[`${proxy.network}-opts`]?.['_grpc-type'] || 'gun')}`;\n                    }\n                    let trojanTransportPath = proxy[`${proxy.network}-opts`]?.path;\n                    let trojanTransportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n                    if (trojanTransportPath) {\n                        trojanTransport += `&path=${encodeURIComponent(Array.isArray(trojanTransportPath) ? trojanTransportPath[0] : trojanTransportPath)}`;\n                    }\n                    if (trojanTransportHost) {\n                        trojanTransport += `&host=${encodeURIComponent(Array.isArray(trojanTransportHost) ? trojanTransportHost[0] : trojanTransportHost)}`;\n                    }\n                }\n                let trojanFp = '';\n                if (proxy['client-fingerprint']) {\n                    trojanFp = `&fp=${encodeURIComponent(proxy['client-fingerprint'])}`;\n                }\n                let trojanAlpn = '';\n                if (proxy.alpn) {\n                    trojanAlpn = `&alpn=${encodeURIComponent(Array.isArray(proxy.alpn) ? proxy.alpn : proxy.alpn.join(','))}`;\n                }\n                const trojanIsReality = proxy['reality-opts'];\n                let trojanSid = '';\n                let trojanPbk = '';\n                let trojanSpx = '';\n                let trojanSecurity = '';\n                let trojanMode = '';\n                let trojanExtra = '';\n                if (trojanIsReality) {\n                    trojanSecurity = `&security=reality`;\n                    const publicKey = proxy['reality-opts']?.['public-key'];\n                    if (publicKey) {\n                        trojanPbk = `&pbk=${encodeURIComponent(publicKey)}`;\n                    }\n                    const shortId = proxy['reality-opts']?.['short-id'];\n                    if (shortId) {\n                        trojanSid = `&sid=${encodeURIComponent(shortId)}`;\n                    }\n                    const spiderX = proxy['reality-opts']?.['_spider-x'];\n                    if (spiderX) {\n                        trojanSpx = `&spx=${encodeURIComponent(spiderX)}`;\n                    }\n                    if (proxy._extra) {\n                        trojanExtra = `&extra=${encodeURIComponent(proxy._extra)}`;\n                    }\n                    if (proxy._mode) {\n                        trojanMode = `&mode=${encodeURIComponent(proxy._mode)}`;\n                    }\n                }\n                result = `trojan://${proxy.password}@${proxy.server}:${proxy.port}?sni=${encodeURIComponent(proxy.sni || proxy.server)}${\n                    proxy['skip-cert-verify'] ? '&allowInsecure=1' : ''\n                }${trojanTransport}${trojanAlpn}${trojanFp}${trojanSecurity}${trojanSid}${trojanPbk}${trojanSpx}${trojanMode}${trojanExtra}#${encodeURIComponent(\n                    proxy.name\n                )}`;\n                break;\n            case 'hysteria2':\n                let hysteria2params = [];\n                if (proxy['hop-interval']) {\n                    hysteria2params.push(`hop-interval=${proxy['hop-interval']}`);\n                }\n                if (proxy['keepalive']) {\n                    hysteria2params.push(`keepalive=${proxy['keepalive']}`);\n                }\n                if (proxy['skip-cert-verify']) {\n                    hysteria2params.push(`insecure=1`);\n                }\n                if (proxy.obfs) {\n                    hysteria2params.push(`obfs=${encodeURIComponent(proxy.obfs)}`);\n                    if (proxy['obfs-password']) {\n                        hysteria2params.push(`obfs-password=${encodeURIComponent(proxy['obfs-password'])}`);\n                    }\n                }\n                if (proxy.sni) {\n                    hysteria2params.push(`sni=${encodeURIComponent(proxy.sni)}`);\n                }\n                if (proxy.ports) {\n                    hysteria2params.push(`mport=${proxy.ports}`);\n                }\n                if (proxy['tls-fingerprint']) {\n                    hysteria2params.push(`pinSHA256=${encodeURIComponent(proxy['tls-fingerprint'])}`);\n                }\n                if (proxy.tfo) {\n                    hysteria2params.push(`fastopen=1`);\n                }\n                result = `hysteria2://${encodeURIComponent(proxy.password)}@${proxy.server}:${proxy.port}?${hysteria2params.join(\n                    '&'\n                )}#${encodeURIComponent(proxy.name)}`;\n                break;\n            case 'hysteria':\n                let hysteriaParams = [];\n                Object.keys(proxy).forEach((key) => {\n                    if (!['name', 'type', 'server', 'port'].includes(key)) {\n                        const i = key.replace(/-/, '_');\n                        if (['alpn'].includes(key)) {\n                            if (proxy[key]) {\n                                hysteriaParams.push(`${i}=${encodeURIComponent(Array.isArray(proxy[key]) ? proxy[key][0] : proxy[key])}`);\n                            }\n                        } else if (['skip-cert-verify'].includes(key)) {\n                            if (proxy[key]) {\n                                hysteriaParams.push(`insecure=1`);\n                            }\n                        } else if (['tfo', 'fast-open'].includes(key)) {\n                            if (proxy[key] && !hysteriaParams.includes('fastopen=1')) {\n                                hysteriaParams.push(`fastopen=1`);\n                            }\n                        } else if (['ports'].includes(key)) {\n                            hysteriaParams.push(`mport=${proxy[key]}`);\n                        } else if (['auth-str'].includes(key)) {\n                            hysteriaParams.push(`auth=${proxy[key]}`);\n                        } else if (['up'].includes(key)) {\n                            hysteriaParams.push(`upmbps=${proxy[key]}`);\n                        } else if (['down'].includes(key)) {\n                            hysteriaParams.push(`downmbps=${proxy[key]}`);\n                        } else if (['_obfs'].includes(key)) {\n                            hysteriaParams.push(`obfs=${proxy[key]}`);\n                        } else if (['obfs'].includes(key)) {\n                            hysteriaParams.push(`obfsParam=${proxy[key]}`);\n                        } else if (['sni'].includes(key)) {\n                            hysteriaParams.push(`peer=${proxy[key]}`);\n                        } else if (proxy[key] && !/^_/i.test(key)) {\n                            hysteriaParams.push(`${i}=${encodeURIComponent(proxy[key])}`);\n                        }\n                    }\n                });\n\n                result = `hysteria://${proxy.server}:${proxy.port}?${hysteriaParams.join('&')}#${encodeURIComponent(proxy.name)}`;\n                break;\n\n            case 'tuic':\n                if (!proxy.token || proxy.token.length === 0) {\n                    let tuicParams = [];\n                    Object.keys(proxy).forEach((key) => {\n                        if (!['name', 'type', 'uuid', 'password', 'server', 'port', 'tls'].includes(key)) {\n                            const i = key.replace(/-/, '_');\n                            if (['alpn'].includes(key)) {\n                                if (proxy[key]) {\n                                    tuicParams.push(`${i}=${encodeURIComponent(Array.isArray(proxy[key]) ? proxy[key][0] : proxy[key])}`);\n                                }\n                            } else if (['skip-cert-verify'].includes(key)) {\n                                if (proxy[key]) {\n                                    tuicParams.push(`allow_insecure=1`);\n                                }\n                            } else if (['tfo', 'fast-open'].includes(key)) {\n                                if (proxy[key] && !tuicParams.includes('fast_open=1')) {\n                                    tuicParams.push(`fast_open=1`);\n                                }\n                            } else if (['disable-sni', 'reduce-rtt'].includes(key) && proxy[key]) {\n                                tuicParams.push(`${i.replace(/-/g, '_')}=1`);\n                            } else if (['congestion-controller'].includes(key)) {\n                                tuicParams.push(`congestion_control=${proxy[key]}`);\n                            } else if (proxy[key] && !/^_/i.test(key)) {\n                                tuicParams.push(`${i.replace(/-/g, '_')}=${encodeURIComponent(proxy[key])}`);\n                            }\n                        }\n                    });\n\n                    result = `tuic://${encodeURIComponent(proxy.uuid)}:${encodeURIComponent(proxy.password)}@${proxy.server}:${\n                        proxy.port\n                    }?${tuicParams.join('&')}#${encodeURIComponent(proxy.name)}`;\n                }\n                break;\n            case 'anytls':\n                let anytlsParams = [];\n                Object.keys(proxy).forEach((key) => {\n                    if (!['name', 'type', 'password', 'server', 'port', 'tls'].includes(key)) {\n                        const i = key.replace(/-/, '_');\n                        if (['alpn'].includes(key)) {\n                            if (proxy[key]) {\n                                anytlsParams.push(`${i}=${encodeURIComponent(Array.isArray(proxy[key]) ? proxy[key][0] : proxy[key])}`);\n                            }\n                        } else if (['skip-cert-verify'].includes(key)) {\n                            if (proxy[key]) {\n                                anytlsParams.push(`insecure=1`);\n                            }\n                        } else if (['udp'].includes(key)) {\n                            if (proxy[key]) {\n                                anytlsParams.push(`udp=1`);\n                            }\n                        } else if (proxy[key] && !/^_/i.test(key)) {\n                            anytlsParams.push(`${i.replace(/-/g, '_')}=${encodeURIComponent(proxy[key])}`);\n                        }\n                    }\n                });\n\n                result = `anytls://${encodeURIComponent(proxy.password)}@${proxy.server}:${proxy.port}/?${anytlsParams.join('&')}#${encodeURIComponent(proxy.name)}`;\n                break;\n            case 'wireguard':\n                let wireguardParams = [];\n\n                Object.keys(proxy).forEach((key) => {\n                    if (!['name', 'type', 'server', 'port', 'ip', 'ipv6', 'private-key'].includes(key)) {\n                        if (['public-key'].includes(key)) {\n                            wireguardParams.push(`publickey=${proxy[key]}`);\n                        } else if (['udp'].includes(key)) {\n                            if (proxy[key]) {\n                                wireguardParams.push(`${key}=1`);\n                            }\n                        } else if (proxy[key] && !/^_/i.test(key)) {\n                            wireguardParams.push(`${key}=${encodeURIComponent(proxy[key])}`);\n                        }\n                    }\n                });\n                if (proxy.ip && proxy.ipv6) {\n                    wireguardParams.push(`address=${proxy.ip}/32,${proxy.ipv6}/128`);\n                } else if (proxy.ip) {\n                    wireguardParams.push(`address=${proxy.ip}/32`);\n                } else if (proxy.ipv6) {\n                    wireguardParams.push(`address=${proxy.ipv6}/128`);\n                }\n                result = `wireguard://${encodeURIComponent(proxy['private-key'])}@${proxy.server}:${proxy.port}/?${wireguardParams.join(\n                    '&'\n                )}#${encodeURIComponent(proxy.name)}`;\n                break;\n        }\n        return result;\n    };\n    return { type, produce };\n}\n\n/**\n * \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/producers/v2ray.js\n */\nfunction V2Ray_Producer() {\n    const type = 'ALL';\n    const produce = (proxies) => {\n        let result = [];\n        proxies.map((proxy) => {\n            try {\n                result.push(URI.produce(proxy));\n            } catch (err) {\n                $.error(`Cannot produce proxy: ${JSON.stringify(proxy, null, 2)}\\nReason: ${err}`);\n            }\n        });\n\n        return Base64.encode(result.join('\\n'));\n    };\n\n    return { type, produce };\n}\n\n// \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/parsers/index.js\nconst PROXY_PARSERS = (() => {\n    function URI_PROXY() {\n        // socks5+tls\n        // socks5\n        // http, https(\u53EF\u4EE5\u8FD9\u4E48\u5199)\n        const name = 'URI PROXY Parser';\n        const test = (line) => {\n            return /^(socks5\\+tls|socks5|http|https):\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            // parse url\n            // eslint-disable-next-line no-unused-vars\n            let [__, type, tls, username, password, server, port, query, name] = line.match(\n                /^(socks5|http|http)(\\+tls|s)?:\\/\\/(?:(.*?):(.*?)@)?(.*?)(?::(\\d+?))?(\\?.*?)?(?:#(.*?))?$/\n            );\n            if (port) {\n                port = parseInt(port, 10);\n            } else {\n                if (tls) {\n                    port = 443;\n                } else if (type === 'http') {\n                    port = 80;\n                } else {\n                    $.error(`port is not present in line: ${line}`);\n                    throw new Error(`port is not present in line: ${line}`);\n                }\n                $.info(`port is not present in line: ${line}, set to ${port}`);\n            }\n\n            const proxy = {\n                name: name != null ? decodeURIComponent(name) : `${type} ${server}:${port}`,\n                type,\n                tls: tls ? true : false,\n                server,\n                port,\n                username: username != null ? decodeURIComponent(username) : undefined,\n                password: password != null ? decodeURIComponent(password) : undefined,\n            };\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_SOCKS() {\n        const name = 'URI SOCKS Parser';\n        const test = (line) => {\n            return /^socks:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            // parse url\n            // eslint-disable-next-line no-unused-vars\n            let [__, type, auth, server, port, query, name] = line.match(/^(socks)?:\\/\\/(?:(.*)@)?(.*?)(?::(\\d+?))?(\\?.*?)?(?:#(.*?))?$/);\n            if (port) {\n                port = parseInt(port, 10);\n            } else {\n                $.error(`port is not present in line: ${line}`);\n                throw new Error(`port is not present in line: ${line}`);\n            }\n            let username, password;\n            if (auth) {\n                const parsed = Base64.decode(decodeURIComponent(auth)).split(':');\n                username = parsed[0];\n                password = parsed[1];\n            }\n\n            const proxy = {\n                name: name != null ? decodeURIComponent(name) : `${type} ${server}:${port}`,\n                type: 'socks5',\n                server,\n                port,\n                username,\n                password,\n            };\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    // Parse SS URI format (only supports new SIP002, legacy format is depreciated).\n    // reference: https://github.com/shadowsocks/shadowsocks-org/wiki/SIP002-URI-Scheme\n    function URI_SS() {\n        // TODO: \u6682\u4E0D\u652F\u6301 httpupgrade\n        const name = 'URI SS Parser';\n        const test = (line) => {\n            return /^ss:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            // parse url\n            let content = line.split('ss://')[1];\n\n            let name = line.split('#')[1];\n            const proxy = {\n                type: 'ss',\n            };\n            content = content.split('#')[0]; // strip proxy name\n            // handle IPV4 and IPV6\n            let serverAndPortArray = content.match(/@([^/?]*)(\\/|\\?|$)/);\n\n            let rawUserInfoStr = decodeURIComponent(content.split('@')[0]); // \u5176\u5B9E\u5E94\u8BE5\u5206\u9694\u4E4B\u540E, \u7528\u6237\u540D\u548C\u5BC6\u7801\u518D decodeURIComponent. \u4F46\u662F\u95EE\u9898\u4E0D\u5927\n            let userInfoStr;\n            if (rawUserInfoStr?.startsWith('2022-blake3-')) {\n                userInfoStr = rawUserInfoStr;\n            } else {\n                userInfoStr = Base64.decode(rawUserInfoStr);\n            }\n\n            let query = '';\n            if (!serverAndPortArray) {\n                if (content.includes('?')) {\n                    const parsed = content.match(/^(.*)(\\?.*)$/);\n                    content = parsed[1];\n                    query = parsed[2];\n                }\n                content = Base64.decode(content);\n\n                if (query) {\n                    if (/(&|\\?)v2ray-plugin=/.test(query)) {\n                        const parsed = query.match(/(&|\\?)v2ray-plugin=(.*?)(&|$)/);\n                        let v2rayPlugin = parsed[2];\n                        if (v2rayPlugin) {\n                            proxy.plugin = 'v2ray-plugin';\n                            proxy['plugin-opts'] = JSON.parse(Base64.decode(v2rayPlugin));\n                        }\n                    }\n                    content = `${content}${query}`;\n                }\n                userInfoStr = content.match(/(^.*)@/)?.[1];\n                serverAndPortArray = content.match(/@([^/@]*)(\\/|$)/);\n            } else if (content.includes('?')) {\n                const parsed = content.match(/(\\?.*)$/);\n                query = parsed[1];\n            }\n\n            const serverAndPort = serverAndPortArray[1];\n            const portIdx = serverAndPort.lastIndexOf(':');\n            proxy.server = serverAndPort.substring(0, portIdx);\n            proxy.port = `${serverAndPort.substring(portIdx + 1)}`.match(/\\d+/)?.[0];\n            let userInfo = userInfoStr.match(/(^.*?):(.*$)/);\n            proxy.cipher = userInfo?.[1];\n            proxy.password = userInfo?.[2];\n            // if (!proxy.cipher || !proxy.password) {\n            //     userInfo = rawUserInfoStr.match(/(^.*?):(.*$)/);\n            //     proxy.cipher = userInfo?.[1];\n            //     proxy.password = userInfo?.[2];\n            // }\n\n            // handle obfs\n            const pluginMatch = content.match(/[?&]plugin=([^&]+)/);\n            const shadowTlsMatch = content.match(/[?&]shadow-tls=([^&]+)/);\n\n            if (pluginMatch) {\n                const pluginInfo = ('plugin=' + decodeURIComponent(pluginMatch[1])).split(';');\n                const params = {};\n                for (const item of pluginInfo) {\n                    const [key, val] = item.split('=');\n                    if (key) params[key] = val || true; // some options like \"tls\" will not have value\n                }\n                switch (params.plugin) {\n                    case 'obfs-local':\n                    case 'simple-obfs':\n                        proxy.plugin = 'obfs';\n                        proxy['plugin-opts'] = {\n                            mode: params.obfs,\n                            host: getIfNotBlank(params['obfs-host']),\n                        };\n                        break;\n                    case 'v2ray-plugin':\n                        proxy.plugin = 'v2ray-plugin';\n                        proxy['plugin-opts'] = {\n                            mode: 'websocket',\n                            host: getIfNotBlank(params['obfs-host']),\n                            path: getIfNotBlank(params.path),\n                            tls: getIfPresent(params.tls),\n                        };\n                        break;\n                    case 'shadow-tls': {\n                        proxy.plugin = 'shadow-tls';\n                        const version = getIfNotBlank(params['version']);\n                        proxy['plugin-opts'] = {\n                            host: getIfNotBlank(params['host']),\n                            password: getIfNotBlank(params['password']),\n                            version: version ? parseInt(version, 10) : undefined,\n                        };\n                        break;\n                    }\n                    default:\n                        throw new Error(`Unsupported plugin option: ${params.plugin}`);\n                }\n            }\n            // Shadowrocket\n            if (shadowTlsMatch) {\n                const params = JSON.parse(Base64.decode(shadowTlsMatch[1]));\n                const version = getIfNotBlank(params['version']);\n                const address = getIfNotBlank(params['address']);\n                const port = getIfNotBlank(params['port']);\n                proxy.plugin = 'shadow-tls';\n                proxy['plugin-opts'] = {\n                    host: getIfNotBlank(params['host']),\n                    password: getIfNotBlank(params['password']),\n                    version: version ? parseInt(version, 10) : undefined,\n                };\n                if (address) {\n                    proxy.server = address;\n                }\n                if (port) {\n                    proxy.port = parseInt(port, 10);\n                }\n            }\n            if (/(&|\\?)uot=(1|true)/i.test(query)) {\n                proxy['udp-over-tcp'] = true;\n            }\n            if (/(&|\\?)tfo=(1|true)/i.test(query)) {\n                proxy.tfo = true;\n            }\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            proxy.name = name ?? `SS ${proxy.server}:${proxy.port}`;\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n\n    // Parse URI SSR format, such as ssr://xxx\n    function URI_SSR() {\n        const name = 'URI SSR Parser';\n        const test = (line) => {\n            return /^ssr:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = Base64.decode(line.split('ssr://')[1]);\n\n            // handle IPV6 & IPV4 format\n            let splitIdx = line.indexOf(':origin');\n            if (splitIdx === -1) {\n                splitIdx = line.indexOf(':auth_');\n            }\n            const serverAndPort = line.substring(0, splitIdx);\n            const server = serverAndPort.substring(0, serverAndPort.lastIndexOf(':'));\n            const port = serverAndPort.substring(serverAndPort.lastIndexOf(':') + 1);\n\n            let params = line\n                .substring(splitIdx + 1)\n                .split('/?')[0]\n                .split(':');\n            let proxy = {\n                type: 'ssr',\n                server,\n                port,\n                protocol: params[0],\n                cipher: params[1],\n                obfs: params[2],\n                password: Base64.decode(params[3]),\n            };\n            // get other params\n            const other_params = {};\n            line = line.split('/?')[1].split('&');\n            if (line.length > 1) {\n                for (const item of line) {\n                    let [key, val] = item.split('=');\n                    val = val.trim();\n                    if (val.length > 0 && val !== '(null)') {\n                        other_params[key] = val;\n                    }\n                }\n            }\n            proxy = {\n                ...proxy,\n                name: other_params.remarks ? Base64.decode(other_params.remarks) : proxy.server,\n                'protocol-param': getIfNotBlank(Base64.decode(other_params.protoparam || '').replace(/\\s/g, '')),\n                'obfs-param': getIfNotBlank(Base64.decode(other_params.obfsparam || '').replace(/\\s/g, '')),\n            };\n            return proxy;\n        };\n\n        return { name, test, parse };\n    }\n\n    // V2rayN URI VMess format\n    // reference: https://github.com/2dust/v2rayN/wiki/%E5%88%86%E4%BA%AB%E9%93%BE%E6%8E%A5%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E(ver-2)\n\n    // Quantumult VMess format\n    function URI_VMess() {\n        const name = 'URI VMess Parser';\n        const test = (line) => {\n            return /^vmess:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split('vmess://')[1];\n            let content = Base64.decode(line.replace(/\\?.*?$/, ''));\n            if (/=\\s*vmess/.test(content)) {\n                // Quantumult VMess URI format\n                const partitions = content.split(',').map((p) => p.trim());\n                // get keyword params\n                const params = {};\n                for (const part of partitions) {\n                    if (part.indexOf('=') !== -1) {\n                        const [key, val] = part.split('=');\n                        params[key.trim()] = val.trim();\n                    }\n                }\n\n                const proxy = {\n                    name: partitions[0].split('=')[0].trim(),\n                    type: 'vmess',\n                    server: partitions[1],\n                    port: partitions[2],\n                    cipher: getIfNotBlank(partitions[3], 'auto'),\n                    uuid: partitions[4].match(/^\"(.*)\"$/)[1],\n                    tls: params.obfs === 'wss',\n                    udp: getIfPresent(params['udp-relay']),\n                    tfo: getIfPresent(params['fast-open']),\n                    'skip-cert-verify': isPresent(params['tls-verification']) ? !params['tls-verification'] : undefined,\n                };\n\n                // handle ws headers\n                if (isPresent(params.obfs)) {\n                    if (params.obfs === 'ws' || params.obfs === 'wss') {\n                        proxy.network = 'ws';\n                        proxy['ws-opts'].path = (getIfNotBlank(params['obfs-path']) || '\"/\"').match(/^\"(.*)\"$/)[1];\n                        let obfs_host = params['obfs-header'];\n                        if (obfs_host && obfs_host.indexOf('Host') !== -1) {\n                            obfs_host = obfs_host.match(/Host:\\s*([a-zA-Z0-9-.]*)/)[1];\n                        }\n                        if (isNotBlank(obfs_host)) {\n                            proxy['ws-opts'].headers = {\n                                Host: obfs_host,\n                            };\n                        }\n                    } else {\n                        throw new Error(`Unsupported obfs: ${params.obfs}`);\n                    }\n                }\n                return proxy;\n            } else {\n                let params = {};\n\n                try {\n                    // V2rayN URI format\n                    params = JSON.parse(content);\n                } catch (e) {\n                    // Shadowrocket URI format\n                    // eslint-disable-next-line no-unused-vars\n                    let [__, base64Line, qs] = /(^[^?]+?)\\/?\\?(.*)$/.exec(line);\n                    content = Base64.decode(base64Line);\n\n                    for (const addon of qs.split('&')) {\n                        const [key, valueRaw] = addon.split('=');\n                        let value = valueRaw;\n                        value = decodeURIComponent(valueRaw);\n                        if (value.indexOf(',') === -1) {\n                            params[key] = value;\n                        } else {\n                            params[key] = value.split(',');\n                        }\n                    }\n                    // eslint-disable-next-line no-unused-vars\n                    let [___, cipher, uuid, server, port] = /(^[^:]+?):([^:]+?)@(.*):(\\d+)$/.exec(content);\n\n                    params.scy = cipher;\n                    params.id = uuid;\n                    params.port = port;\n                    params.add = server;\n                }\n                const server = params.add;\n                const port = parseInt(getIfPresent(params.port), 10);\n                const proxy = {\n                    name: params.ps ?? params.remarks ?? params.remark ?? `VMess ${server}:${port}`,\n                    type: 'vmess',\n                    server,\n                    port,\n                    // https://github.com/2dust/v2rayN/wiki/Description-of-VMess-share-link\n                    // https://github.com/XTLS/Xray-core/issues/91\n                    cipher: ['auto', 'aes-128-gcm', 'chacha20-poly1305', 'none'].includes(params.scy) ? params.scy : 'auto',\n                    uuid: params.id,\n                    alterId: parseInt(getIfPresent(params.aid ?? params.alterId, 0), 10),\n                    tls: ['tls', true, 1, '1'].includes(params.tls),\n                    'skip-cert-verify': isPresent(params.verify_cert) ? !params.verify_cert : undefined,\n                };\n                if (!proxy['skip-cert-verify'] && isPresent(params.allowInsecure)) {\n                    proxy['skip-cert-verify'] = /(TRUE)|1/i.test(params.allowInsecure);\n                }\n                // https://github.com/2dust/v2rayN/wiki/%E5%88%86%E4%BA%AB%E9%93%BE%E6%8E%A5%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E(ver-2)\n                if (proxy.tls) {\n                    if (params.sni && params.sni !== '') {\n                        proxy.sni = params.sni;\n                    } else if (params.peer && params.peer !== '') {\n                        proxy.sni = params.peer;\n                    }\n                }\n                let httpupgrade = false;\n                // handle obfs\n                if (params.net === 'ws' || params.obfs === 'websocket') {\n                    proxy.network = 'ws';\n                } else if (['http'].includes(params.net) || ['http'].includes(params.obfs) || ['http'].includes(params.type)) {\n                    proxy.network = 'http';\n                } else if (['grpc', 'kcp', 'quic'].includes(params.net)) {\n                    proxy.network = params.net;\n                } else if (params.net === 'httpupgrade' || proxy.network === 'httpupgrade') {\n                    proxy.network = 'ws';\n                    httpupgrade = true;\n                } else if (params.net === 'h2' || proxy.network === 'h2') {\n                    proxy.network = 'h2';\n                }\n                // \u6682\u4E0D\u652F\u6301 tcp + host + path\n                // else if (params.net === 'tcp' || proxy.network === 'tcp') {\n                //     proxy.network = 'tcp';\n                // }\n                if (proxy.network) {\n                    let transportHost = params.host ?? params.obfsParam;\n                    try {\n                        const parsedObfs = JSON.parse(transportHost);\n                        const parsedHost = parsedObfs?.Host;\n                        if (parsedHost) {\n                            transportHost = parsedHost;\n                        }\n                        // eslint-disable-next-line no-empty\n                    } catch (e) {}\n                    let transportPath = params.path;\n\n                    // \u8865\u4E0A\u9ED8\u8BA4 path\n                    if (['ws'].includes(proxy.network)) {\n                        transportPath = transportPath || '/';\n                    }\n\n                    if (proxy.network === 'http') {\n                        if (transportHost) {\n                            // 1)http(tcp)->host\u4E2D\u95F4\u9017\u53F7(,)\u9694\u5F00\n                            transportHost = transportHost.split(',').map((i) => i.trim());\n                            transportHost = Array.isArray(transportHost) ? transportHost[0] : transportHost;\n                        }\n                        if (transportPath) {\n                            transportPath = Array.isArray(transportPath) ? transportPath[0] : transportPath;\n                        } else {\n                            transportPath = '/';\n                        }\n                    }\n                    // \u4F20\u8F93\u5C42\u5E94\u8BE5\u6709\u914D\u7F6E, \u6682\u65F6\u4E0D\u8003\u8651\u517C\u5BB9\u4E0D\u7ED9\u914D\u7F6E\u7684\u8282\u70B9\n                    if (transportPath || transportHost || ['kcp', 'quic'].includes(proxy.network)) {\n                        if (['grpc'].includes(proxy.network)) {\n                            proxy[`${proxy.network}-opts`] = {\n                                'grpc-service-name': getIfNotBlank(transportPath),\n                                '_grpc-type': getIfNotBlank(params.type),\n                                '_grpc-authority': getIfNotBlank(params.authority),\n                            };\n                        } else if (['kcp', 'quic'].includes(proxy.network)) {\n                            proxy[`${proxy.network}-opts`] = {\n                                [`_${proxy.network}-type`]: getIfNotBlank(params.type),\n                                [`_${proxy.network}-host`]: getIfNotBlank(getIfNotBlank(transportHost)),\n                                [`_${proxy.network}-path`]: getIfNotBlank(transportPath),\n                            };\n                        } else {\n                            const opts = {\n                                path: getIfNotBlank(transportPath),\n                                headers: { Host: getIfNotBlank(transportHost) },\n                            };\n                            if (httpupgrade) {\n                                opts['v2ray-http-upgrade'] = true;\n                                opts['v2ray-http-upgrade-fast-open'] = true;\n                            }\n                            proxy[`${proxy.network}-opts`] = opts;\n                        }\n                    } else {\n                        delete proxy.network;\n                    }\n                }\n\n                proxy['client-fingerprint'] = params.fp;\n                proxy.alpn = params.alpn ? params.alpn.split(',') : undefined;\n                // \u7136\u800C wiki \u548C app \u5B9E\u6D4B\u4E2D\u90FD\u6CA1\u6709\u5B57\u6BB5\u8868\u793A\u8FD9\u4E2A\n                // proxy['skip-cert-verify'] = /(TRUE)|1/i.test(params.allowInsecure);\n\n                return proxy;\n            }\n        };\n        return { name, test, parse };\n    }\n\n    function URI_VLESS() {\n        const name = 'URI VLESS Parser';\n        const test = (line) => {\n            return /^vless:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split('vless://')[1];\n            let isShadowrocket;\n            let parsed = /^(.*?)@(.*?):(\\d+)\\/?(\\?(.*?))?(?:#(.*?))?$/.exec(line);\n            if (!parsed) {\n                // eslint-disable-next-line no-unused-vars\n                let [_, base64, other] = /^(.*?)(\\?.*?$)/.exec(line);\n                line = `${Base64.decode(base64)}${other}`;\n                parsed = /^(.*?)@(.*?):(\\d+)\\/?(\\?(.*?))?(?:#(.*?))?$/.exec(line);\n                isShadowrocket = true;\n            }\n            // eslint-disable-next-line no-unused-vars\n            let [__, uuid, server, port, ___, addons = '', name] = parsed;\n            if (isShadowrocket) {\n                uuid = uuid.replace(/^.*?:/g, '');\n            }\n\n            port = parseInt(`${port}`, 10);\n            uuid = decodeURIComponent(uuid);\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n\n            const proxy = {\n                type: 'vless',\n                name,\n                server,\n                port,\n                uuid,\n            };\n            const params = {};\n            for (const addon of addons.split('&')) {\n                const [key, valueRaw] = addon.split('=');\n                let value = valueRaw;\n                value = decodeURIComponent(valueRaw);\n                params[key] = value;\n            }\n\n            proxy.name = name ?? params.remarks ?? params.remark ?? `VLESS ${server}:${port}`;\n\n            proxy.tls = params.security && params.security !== 'none';\n            if (isShadowrocket && /TRUE|1/i.test(params.tls)) {\n                proxy.tls = true;\n                params.security = params.security ?? 'reality';\n            }\n            proxy.sni = params.sni || params.peer;\n            proxy.flow = params.flow;\n            if (!proxy.flow && isShadowrocket && params.xtls) {\n                // \"none\" is undefined\n                const flow = [undefined, 'xtls-rprx-direct', 'xtls-rprx-vision'][params.xtls];\n                if (flow) {\n                    proxy.flow = flow;\n                }\n            }\n            proxy['client-fingerprint'] = params.fp;\n            proxy.alpn = params.alpn ? params.alpn.split(',') : undefined;\n            proxy['skip-cert-verify'] = /(TRUE)|1/i.test(params.allowInsecure);\n\n            if (['reality'].includes(params.security)) {\n                const opts = {};\n                if (params.pbk) {\n                    opts['public-key'] = params.pbk;\n                }\n                if (params.sid) {\n                    opts['short-id'] = params.sid;\n                }\n                if (params.spx) {\n                    opts['_spider-x'] = params.spx;\n                }\n                if (Object.keys(opts).length > 0) {\n                    // proxy[`${params.security}-opts`] = opts;\n                    proxy[`${params.security}-opts`] = opts;\n                }\n            }\n            let httpupgrade = false;\n            proxy.network = params.type;\n            if (proxy.network === 'tcp' && params.headerType === 'http') {\n                proxy.network = 'http';\n            } else if (proxy.network === 'httpupgrade') {\n                proxy.network = 'ws';\n                httpupgrade = true;\n            }\n            if (!proxy.network && isShadowrocket && params.obfs) {\n                proxy.network = params.obfs;\n                if (['none'].includes(proxy.network)) {\n                    proxy.network = 'tcp';\n                }\n            }\n            if (['websocket'].includes(proxy.network)) {\n                proxy.network = 'ws';\n            }\n            if (proxy.network && !['tcp', 'none'].includes(proxy.network)) {\n                const opts = {};\n                const host = params.host ?? params.obfsParam;\n                if (host) {\n                    if (params.obfsParam) {\n                        try {\n                            const parsed = JSON.parse(host);\n                            opts.headers = parsed;\n                        } catch (e) {\n                            opts.headers = { Host: host };\n                        }\n                    } else {\n                        opts.headers = { Host: host };\n                    }\n                }\n                if (params.serviceName) {\n                    opts[`${proxy.network}-service-name`] = params.serviceName;\n                    if (['grpc'].includes(proxy.network) && params.authority) {\n                        opts['_grpc-authority'] = params.authority;\n                    }\n                } else if (isShadowrocket && params.path) {\n                    if (!['ws', 'http', 'h2'].includes(proxy.network)) {\n                        opts[`${proxy.network}-service-name`] = params.path;\n                        delete params.path;\n                    }\n                }\n                if (params.path) {\n                    opts.path = params.path;\n                }\n                // https://github.com/XTLS/Xray-core/issues/91\n                if (['grpc'].includes(proxy.network)) {\n                    opts['_grpc-type'] = params.mode || 'gun';\n                }\n                if (httpupgrade) {\n                    opts['v2ray-http-upgrade'] = true;\n                    opts['v2ray-http-upgrade-fast-open'] = true;\n                }\n                if (Object.keys(opts).length > 0) {\n                    proxy[`${proxy.network}-opts`] = opts;\n                }\n                if (proxy.network === 'kcp') {\n                    // mKCP \u79CD\u5B50\u3002\u7701\u7565\u65F6\u4E0D\u4F7F\u7528\u79CD\u5B50\uFF0C\u4F46\u4E0D\u53EF\u4EE5\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002\u5EFA\u8BAE mKCP \u7528\u6237\u4F7F\u7528 seed\u3002\n                    if (params.seed) {\n                        proxy.seed = params.seed;\n                    }\n                    // mKCP \u7684\u4F2A\u88C5\u5934\u90E8\u7C7B\u578B\u3002\u5F53\u524D\u53EF\u9009\u503C\u6709 none / srtp / utp / wechat-video / dtls / wireguard\u3002\u7701\u7565\u65F6\u9ED8\u8BA4\u503C\u4E3A none\uFF0C\u5373\u4E0D\u4F7F\u7528\u4F2A\u88C5\u5934\u90E8\uFF0C\u4F46\u4E0D\u53EF\u4EE5\u4E3A\u7A7A\u5B57\u7B26\u4E32\u3002\n                    proxy.headerType = params.headerType || 'none';\n                }\n\n                if (params.mode) {\n                    proxy._mode = params.mode;\n                }\n                if (params.extra) {\n                    proxy._extra = params.extra;\n                }\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_AnyTLS() {\n        const name = 'URI AnyTLS Parser';\n        const test = (line) => {\n            return /^anytls:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split(/anytls:\\/\\//)[1];\n            // eslint-disable-next-line no-unused-vars\n            let [__, password, server, port, addons = '', name] = /^(.*?)@(.*?)(?::(\\d+))?\\/?(?:\\?(.*?))?(?:#(.*?))?$/.exec(line);\n            password = decodeURIComponent(password);\n            port = parseInt(`${port}`, 10);\n            if (isNaN(port)) {\n                port = 443;\n            }\n            password = decodeURIComponent(password);\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            name = name ?? `AnyTLS ${server}:${port}`;\n\n            const proxy = {\n                type: 'anytls',\n                name,\n                server,\n                port,\n                password,\n            };\n\n            for (const addon of addons.split('&')) {\n                let [key, value] = addon.split('=');\n                key = key.replace(/_/g, '-');\n                value = decodeURIComponent(value);\n                if (['alpn'].includes(key)) {\n                    proxy[key] = value ? value.split(',') : undefined;\n                } else if (['insecure'].includes(key)) {\n                    proxy['skip-cert-verify'] = /(TRUE)|1/i.test(value);\n                } else if (['udp'].includes(key)) {\n                    proxy[key] = /(TRUE)|1/i.test(value);\n                } else {\n                    proxy[key] = value;\n                }\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_Hysteria2() {\n        const name = 'URI Hysteria2 Parser';\n        const test = (line) => {\n            return /^(hysteria2|hy2):\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split(/(hysteria2|hy2):\\/\\//)[2];\n            // \u7AEF\u53E3\u8DF3\u8DC3\u6709\u4E24\u79CD\u5199\u6CD5:\n            // 1. \u670D\u52A1\u5668\u7684\u5730\u5740\u548C\u53EF\u9009\u7AEF\u53E3\u3002\u5982\u679C\u7701\u7565\u7AEF\u53E3\uFF0C\u5219\u9ED8\u8BA4\u4E3A 443\u3002\n            // \u7AEF\u53E3\u90E8\u5206\u652F\u6301 \u7AEF\u53E3\u8DF3\u8DC3 \u7684\u300C\u591A\u7AEF\u53E3\u5730\u5740\u683C\u5F0F\u300D\u3002\n            // https://hysteria.network/zh/docs/advanced/Port-Hopping\n            // 2. \u53C2\u6570 mport\n            let ports;\n            /* eslint-disable no-unused-vars */\n            let [__, password, server, ___, port, ____, _____, ______, _______, ________, addons = '', name] =\n                /^(.*?)@(.*?)(:((\\d+(-\\d+)?)([,;]\\d+(-\\d+)?)*))?\\/?(\\?(.*?))?(?:#(.*?))?$/.exec(line);\n\n            /* eslint-enable no-unused-vars */\n            if (/^\\d+$/.test(port)) {\n                port = parseInt(`${port}`, 10);\n                if (isNaN(port)) {\n                    port = 443;\n                }\n            } else if (port) {\n                ports = port;\n                port = getRandomPort(ports);\n            } else {\n                port = 443;\n            }\n\n            password = decodeURIComponent(password);\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            name = name ?? `Hysteria2 ${server}:${port}`;\n\n            const proxy = {\n                type: 'hysteria2',\n                name,\n                server,\n                port,\n                ports,\n                password,\n            };\n\n            const params = {};\n            for (const addon of addons.split('&')) {\n                const [key, valueRaw] = addon.split('=');\n                let value = valueRaw;\n                value = decodeURIComponent(valueRaw);\n                params[key] = value;\n            }\n\n            proxy.sni = params.sni;\n            if (!proxy.sni && params.peer) {\n                proxy.sni = params.peer;\n            }\n            if (params.obfs && params.obfs !== 'none') {\n                proxy.obfs = params.obfs;\n            }\n            if (params.mport) {\n                proxy.ports = params.mport;\n            }\n            proxy['obfs-password'] = params['obfs-password'];\n            proxy['skip-cert-verify'] = /(TRUE)|1/i.test(params.insecure);\n            proxy.tfo = /(TRUE)|1/i.test(params.fastopen);\n            proxy['tls-fingerprint'] = params.pinSHA256;\n            let hop_interval = params['hop-interval'] || params['hop_interval'];\n\n            if (/^\\d+$/.test(hop_interval)) {\n                proxy['hop-interval'] = parseInt(`${hop_interval}`, 10);\n            }\n            let keepalive = params['keepalive'];\n\n            if (/^\\d+$/.test(keepalive)) {\n                proxy['keepalive'] = parseInt(`${keepalive}`, 10);\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_Hysteria() {\n        const name = 'URI Hysteria Parser';\n        const test = (line) => {\n            return /^(hysteria|hy):\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split(/(hysteria|hy):\\/\\//)[2];\n            // eslint-disable-next-line no-unused-vars\n            let [__, server, ___, port, ____, addons = '', name] = /^(.*?)(:(\\d+))?\\/?(\\?(.*?))?(?:#(.*?))?$/.exec(line);\n            port = parseInt(`${port}`, 10);\n            if (isNaN(port)) {\n                port = 443;\n            }\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            name = name ?? `Hysteria ${server}:${port}`;\n\n            const proxy = {\n                type: 'hysteria',\n                name,\n                server,\n                port,\n            };\n            const params = {};\n            for (const addon of addons.split('&')) {\n                let [key, value] = addon.split('=');\n                key = key.replace(/_/, '-');\n                value = decodeURIComponent(value);\n                if (['alpn'].includes(key)) {\n                    proxy[key] = value ? value.split(',') : undefined;\n                } else if (['insecure'].includes(key)) {\n                    proxy['skip-cert-verify'] = /(TRUE)|1/i.test(value);\n                } else if (['auth'].includes(key)) {\n                    proxy['auth-str'] = value;\n                } else if (['mport'].includes(key)) {\n                    proxy['ports'] = value;\n                } else if (['obfsParam'].includes(key)) {\n                    proxy['obfs'] = value;\n                } else if (['upmbps'].includes(key)) {\n                    proxy['up'] = value;\n                } else if (['downmbps'].includes(key)) {\n                    proxy['down'] = value;\n                } else if (['obfs'].includes(key)) {\n                    // obfs: Obfuscation mode (optional, empty or \"xplus\")\n                    proxy['_obfs'] = value || '';\n                } else if (['fast-open', 'peer'].includes(key)) {\n                    params[key] = value;\n                } else {\n                    proxy[key] = value;\n                }\n            }\n\n            if (!proxy.sni && params.peer) {\n                proxy.sni = params.peer;\n            }\n            if (!proxy['fast-open'] && params.fastopen) {\n                proxy['fast-open'] = true;\n            }\n            if (!proxy.protocol) {\n                // protocol: protocol to use (\"udp\", \"wechat-video\", \"faketcp\") (optional, default: \"udp\")\n                proxy.protocol = 'udp';\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_TUIC() {\n        const name = 'URI TUIC Parser';\n        const test = (line) => {\n            return /^tuic:\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split(/tuic:\\/\\//)[1];\n            // eslint-disable-next-line no-unused-vars\n            let [__, auth, server, port, addons = '', name] = /^(.*?)@(.*?)(?::(\\d+))?\\/?(?:\\?(.*?))?(?:#(.*?))?$/.exec(line);\n            auth = decodeURIComponent(auth);\n            let [uuid, ...passwordParts] = auth.split(':');\n            let password = passwordParts.join(':');\n            port = parseInt(`${port}`, 10);\n            if (isNaN(port)) {\n                port = 443;\n            }\n            password = decodeURIComponent(password);\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            name = name ?? `TUIC ${server}:${port}`;\n\n            const proxy = {\n                type: 'tuic',\n                name,\n                server,\n                port,\n                password,\n                uuid,\n            };\n\n            for (const addon of addons.split('&')) {\n                let [key, value] = addon.split('=');\n                key = key.replace(/_/g, '-');\n                value = decodeURIComponent(value);\n                if (['alpn'].includes(key)) {\n                    proxy[key] = value ? value.split(',') : undefined;\n                } else if (['allow-insecure'].includes(key)) {\n                    proxy['skip-cert-verify'] = /(TRUE)|1/i.test(value);\n                } else if (['fast-open'].includes(key)) {\n                    proxy.tfo = true;\n                } else if (['disable-sni', 'reduce-rtt'].includes(key)) {\n                    proxy[key] = /(TRUE)|1/i.test(value);\n                } else if (key === 'congestion-control') {\n                    proxy['congestion-controller'] = value;\n                    delete proxy[key];\n                } else {\n                    proxy[key] = value;\n                }\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n    function URI_WireGuard() {\n        const name = 'URI WireGuard Parser';\n        const test = (line) => {\n            return /^(wireguard|wg):\\/\\//.test(line);\n        };\n        const parse = (line) => {\n            line = line.split(/(wireguard|wg):\\/\\//)[2];\n            /* eslint-disable no-unused-vars */\n            let [__, ___, privateKey, server, ____, port, _____, addons = '', name] = /^((.*?)@)?(.*?)(:(\\d+))?\\/?(\\?(.*?))?(?:#(.*?))?$/.exec(line);\n            /* eslint-enable no-unused-vars */\n\n            port = parseInt(`${port}`, 10);\n            if (isNaN(port)) {\n                port = 51820;\n            }\n            privateKey = decodeURIComponent(privateKey);\n            if (name != null) {\n                name = decodeURIComponent(name);\n            }\n            name = name ?? `WireGuard ${server}:${port}`;\n            const proxy = {\n                type: 'wireguard',\n                name,\n                server,\n                port,\n                'private-key': privateKey,\n                udp: true,\n            };\n            for (const addon of addons.split('&')) {\n                let [key, value] = addon.split('=');\n                key = key.replace(/_/, '-');\n                value = decodeURIComponent(value);\n                if (['reserved'].includes(key)) {\n                    const parsed = value\n                        .split(',')\n                        .map((i) => parseInt(i.trim(), 10))\n                        .filter((i) => Number.isInteger(i));\n                    if (parsed.length === 3) {\n                        proxy[key] = parsed;\n                    }\n                } else if (['address', 'ip'].includes(key)) {\n                    value.split(',').map((i) => {\n                        const ip = i\n                            .trim()\n                            .replace(/\\/\\d+$/, '')\n                            .replace(/^\\[/, '')\n                            .replace(/\\]$/, '');\n                        if (isIPv4(ip)) {\n                            proxy.ip = ip;\n                        } else if (isIPv6(ip)) {\n                            proxy.ipv6 = ip;\n                        }\n                    });\n                } else if (['mtu'].includes(key)) {\n                    const parsed = parseInt(value.trim(), 10);\n                    if (Number.isInteger(parsed)) {\n                        proxy[key] = parsed;\n                    }\n                } else if (/publickey/i.test(key)) {\n                    proxy['public-key'] = value;\n                } else if (/privatekey/i.test(key)) {\n                    proxy['private-key'] = value;\n                } else if (['udp'].includes(key)) {\n                    proxy[key] = /(TRUE)|1/i.test(value);\n                } else if (!['flag'].includes(key)) {\n                    proxy[key] = value;\n                }\n            }\n\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n\n    // Trojan URI format\n    function URI_Trojan() {\n        const name = 'URI Trojan Parser';\n        const test = (line) => {\n            return /^trojan:\\/\\//.test(line);\n        };\n\n        const parse = (line) => {\n            const matched = /^(trojan:\\/\\/.*?@.*?)(:(\\d+))?\\/?(\\?.*?)?$/.exec(line);\n            const port = matched?.[2];\n            if (!port) {\n                line = line.replace(matched[1], `${matched[1]}:443`);\n            }\n            let [newLine, name] = line.split(/#(.+)/, 2);\n            const parser = getTrojanURIParser();\n            const proxy = parser.parse(newLine);\n            if (isNotBlank(name)) {\n                try {\n                    proxy.name = decodeURIComponent(name);\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            return proxy;\n        };\n        return { name, test, parse };\n    }\n\n    return [\n        URI_PROXY(),\n        URI_SOCKS(),\n        URI_SS(),\n        URI_SSR(),\n        URI_VMess(),\n        URI_VLESS(),\n        URI_AnyTLS(),\n        URI_Hysteria(),\n        URI_Hysteria2(),\n        URI_TUIC(),\n        URI_WireGuard(),\n        URI_Trojan(),\n    ];\n})();\n\n// \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/preprocessors/index.js\nconst PROXY_PREPROCESSORS = (() => {\n    function HTML() {\n        const name = 'HTML';\n        const test = (raw) => /^<!DOCTYPE html>/.test(raw);\n        // simply discard HTML\n        const parse = () => '';\n        return { name, test, parse };\n    }\n\n    function Base64Encoded() {\n        const name = 'Base64 Pre-processor';\n\n        const keys = [\n            'dm1lc3M', // vmess\n            'c3NyOi8v', // ssr://\n            'c29ja3M6Ly', // socks://\n            'dHJvamFu', // trojan\n            'c3M6Ly', // ss:/\n            'c3NkOi8v', // ssd://\n            'c2hhZG93', // shadow\n            'aHR0c', // htt\n            'dmxlc3M=', // vless\n            'aHlzdGVyaWEy', // hysteria2\n            'aHkyOi8v', // hy2://\n            'd2lyZWd1YXJkOi8v', // wireguard://\n            'd2c6Ly8=', // wg://\n            'dHVpYzovLw==', // tuic://\n        ];\n\n        const test = function (raw) {\n            return !/^\\w+:\\/\\/\\w+/im.test(raw) && keys.some((k) => raw.indexOf(k) !== -1);\n        };\n        const parse = function (raw) {\n            const decoded = Base64.decode(raw);\n            if (!/^\\w+(:\\/\\/|\\s*?=\\s*?)\\w+/m.test(decoded)) {\n                $.error(`Base64 Pre-processor error: decoded line does not start with protocol`);\n                return raw;\n            }\n\n            return decoded;\n        };\n        return { name, test, parse };\n    }\n\n    function fallbackBase64Encoded() {\n        const name = 'Fallback Base64 Pre-processor';\n\n        const test = function (raw) {\n            return true;\n        };\n        const parse = function (raw) {\n            const decoded = Base64.decode(raw);\n            if (!/^\\w+(:\\/\\/|\\s*?=\\s*?)\\w+/m.test(decoded)) {\n                $.error(`Fallback Base64 Pre-processor error: decoded line does not start with protocol`);\n                return raw;\n            }\n\n            return decoded;\n        };\n        return { name, test, parse };\n    }\n\n    function Clash() {\n        const name = 'Clash Pre-processor';\n        const test = function (raw) {\n            if (!/proxies/.test(raw)) return false;\n            const content = safeLoad(raw);\n            return content.proxies && Array.isArray(content.proxies);\n        };\n        const parse = function (raw, includeProxies) {\n            // Clash YAML format\n\n            // \u9632\u6B62 VLESS\u8282\u70B9 reality-opts \u9009\u9879\u4E2D\u7684 short-id \u88AB\u89E3\u6790\u6210 Infinity\n            // \u5339\u914D short-id \u5192\u53F7\u540E\u9762\u7684\u503C(\u5305\u542B\u7A7A\u683C\u548C\u5F15\u53F7)\n            const afterReplace = raw.replace(/short-id:([ \\t]*[^#\\n,}]*)/g, (matched, value) => {\n                const afterTrim = value.trim();\n\n                // \u4E3A\u7A7A\n                if (!afterTrim || afterTrim === '') {\n                    return 'short-id: \"\"';\n                }\n\n                // \u662F\u5426\u88AB\u5F15\u53F7\u5305\u88F9\n                if (/^(['\"]).*\\1$/.test(afterTrim)) {\n                    return `short-id: ${afterTrim}`;\n                } else if (['null'].includes(afterTrim)) {\n                    return `short-id: ${afterTrim}`;\n                } else {\n                    return `short-id: \"${afterTrim}\"`;\n                }\n            });\n\n            const { proxies, 'global-client-fingerprint': globalClientFingerprint } = safeLoad(afterReplace);\n            return (\n                (includeProxies ? 'proxies:\\n' : '') +\n                proxies\n                    .map((p) => {\n                        // https://github.com/MetaCubeX/mihomo/blob/Alpha/docs/config.yaml#L73C1-L73C26\n                        if (globalClientFingerprint && !p['client-fingerprint']) {\n                            p['client-fingerprint'] = globalClientFingerprint;\n                        }\n                        return `${includeProxies ? '  - ' : ''}${JSON.stringify(p)}\\n`;\n                    })\n                    .join('')\n            );\n        };\n        return { name, test, parse };\n    }\n\n    function SSD() {\n        const name = 'SSD Pre-processor';\n        const test = function (raw) {\n            return raw.indexOf('ssd://') === 0;\n        };\n        const parse = function (raw) {\n            // preprocessing for SSD subscription format\n            const output = [];\n            let ssdinfo = JSON.parse(Base64.decode(raw.split('ssd://')[1]));\n            let port = ssdinfo.port;\n            let method = ssdinfo.encryption;\n            let password = ssdinfo.password;\n            // servers config\n            let servers = ssdinfo.servers;\n            for (let i = 0; i < servers.length; i++) {\n                let server = servers[i];\n                method = server.encryption ? server.encryption : method;\n                password = server.password ? server.password : password;\n                let userinfo = Base64.encode(method + ':' + password);\n                let hostname = server.server;\n                port = server.port ? server.port : port;\n                let tag = server.remarks ? server.remarks : i;\n                let plugin = server.plugin_options ? '/?plugin=' + encodeURIComponent(server.plugin + ';' + server.plugin_options) : '';\n                output[i] = 'ss://' + userinfo + '@' + hostname + ':' + port + plugin + '#' + tag;\n            }\n            return output.join('\\n');\n        };\n        return { name, test, parse };\n    }\n\n    function FullConfig() {\n        const name = 'Full Config Preprocessor';\n        const test = function (raw) {\n            return /^(\\[server_local\\]|\\[Proxy\\])/gm.test(raw);\n        };\n        const parse = function (raw) {\n            const match = raw.match(/^\\[server_local|Proxy\\]([\\s\\S]+?)^\\[.+?\\](\\r?\\n|$)/im)?.[1];\n            return match || raw;\n        };\n        return { name, test, parse };\n    }\n\n    return [HTML(), Clash(), Base64Encoded(), SSD(), FullConfig(), fallbackBase64Encoded()];\n})();\n\n// \u6765\u6E90\uFF1Ahttps://github.com/sub-store-org/Sub-Store/blob/master/backend/src/core/proxy-utils/index.js\nconst ProxyUtils = (() => {\n    function preprocess(raw) {\n        for (const processor of PROXY_PREPROCESSORS) {\n            try {\n                if (processor.test(raw)) {\n                    $.info(`Pre-processor [${processor.name}] activated`);\n                    return processor.parse(raw);\n                }\n            } catch (e) {\n                $.error(`Parser [${processor.name}] failed\\n Reason: ${e}`);\n            }\n        }\n        return raw;\n    }\n\n    function parse(raw) {\n        raw = preprocess(raw);\n        // parse\n        const lines = raw.split('\\n');\n        const proxies = [];\n        let lastParser;\n\n        for (let line of lines) {\n            line = line.trim();\n            if (line.length === 0) continue; // skip empty line\n            let success = false;\n\n            // try to parse with last used parser\n            if (lastParser) {\n                const [proxy, error] = tryParse(lastParser, line);\n                if (!error) {\n                    proxies.push(lastParse(proxy));\n                    success = true;\n                }\n            }\n\n            if (!success) {\n                // search for a new parser\n                for (const parser of PROXY_PARSERS) {\n                    const [proxy, error] = tryParse(parser, line);\n                    if (!error) {\n                        proxies.push(lastParse(proxy));\n                        lastParser = parser;\n                        success = true;\n                        $.info(`${parser.name} is activated`);\n                        break;\n                    }\n                }\n            }\n\n            if (!success) {\n                $.error(`Failed to parse line: ${line}`);\n            }\n        }\n        return proxies.filter((proxy) => {\n            if (['vless', 'vmess'].includes(proxy.type)) {\n                const isProxyUUIDValid = isValidUUID(proxy.uuid);\n                if (!isProxyUUIDValid) {\n                    $.error(`UUID may be invalid: ${proxy.name} ${proxy.uuid}`);\n                }\n                // return isProxyUUIDValid;\n            }\n            return true;\n        });\n    }\n\n    function produce(proxies, targetPlatform, type, opts = {}) {\n        const producer = PROXY_PRODUCERS[targetPlatform];\n        if (!producer) {\n            throw new Error(`Target platform: ${targetPlatform} is not supported!`);\n        }\n\n        const sni_off_supported = /Surge|SurgeMac|Shadowrocket/i.test(targetPlatform);\n\n        // filter unsupported proxies\n        proxies = proxies.filter((proxy) => {\n            // \u68C0\u67E5\u4EE3\u7406\u662F\u5426\u652F\u6301\u76EE\u6807\u5E73\u53F0\n            if (proxy.supported && proxy.supported[targetPlatform] === false) {\n                return false;\n            }\n\n            // \u5BF9\u4E8E vless \u548C vmess \u4EE3\u7406,\u9700\u8981\u989D\u5916\u9A8C\u8BC1 UUID\n            if (['vless', 'vmess'].includes(proxy.type)) {\n                const isProxyUUIDValid = isValidUUID(proxy.uuid);\n                if (!isProxyUUIDValid) $.error(`UUID may be invalid: ${proxy.name} ${proxy.uuid}`);\n                // return isProxyUUIDValid;\n            }\n\n            return true;\n        });\n\n        proxies = proxies.map((proxy) => {\n            proxy._resolved = proxy.resolved;\n\n            if (!isNotBlank(proxy.name)) {\n                proxy.name = `${proxy.type} ${proxy.server}:${proxy.port}`;\n            }\n            if (proxy['disable-sni']) {\n                if (sni_off_supported) {\n                    proxy.sni = 'off';\n                } else if (!['tuic'].includes(proxy.type)) {\n                    $.error(\n                        `Target platform ${targetPlatform} does not support sni off. Proxy's fields (sni, tls-fingerprint and skip-cert-verify) will be modified.`\n                    );\n                    proxy.sni = '';\n                    proxy['skip-cert-verify'] = true;\n                    delete proxy['tls-fingerprint'];\n                }\n            }\n\n            // \u5904\u7406 \u7AEF\u53E3\u8DF3\u8DC3\n            if (proxy.ports) {\n                proxy.ports = String(proxy.ports);\n                if (!['ClashMeta'].includes(targetPlatform)) {\n                    proxy.ports = proxy.ports.replace(/\\//g, ',');\n                }\n                if (!proxy.port) {\n                    proxy.port = getRandomPort(proxy.ports);\n                }\n            }\n\n            return proxy;\n        });\n\n        $.log(`Producing proxies for target: ${targetPlatform}`);\n        if (typeof producer.type === 'undefined' || producer.type === 'SINGLE') {\n            let list = proxies\n                .map((proxy) => {\n                    try {\n                        return producer.produce(proxy, type, opts);\n                    } catch (err) {\n                        $.error(`Cannot produce proxy: ${JSON.stringify(proxy, null, 2)}\\nReason: ${err}`);\n                        return '';\n                    }\n                })\n                .filter((line) => line.length > 0);\n            list = type === 'internal' ? list : list.join('\\n');\n            if (targetPlatform.startsWith('Surge') && proxies.length > 0 && proxies.every((p) => p.type === 'wireguard')) {\n                list = `#!name=${proxies[0]?._subName}\n#!desc=${proxies[0]?._desc ?? ''}\n#!category=${proxies[0]?._category ?? ''}\n${list}`;\n            }\n            return list;\n        } else if (producer.type === 'ALL') {\n            return producer.produce(proxies, type, opts);\n        }\n    }\n\n    function tryParse(parser, line) {\n        if (!safeMatch(parser, line)) return [null, new Error('Parser mismatch')];\n        try {\n            const proxy = parser.parse(line);\n            return [proxy, null];\n        } catch (err) {\n            return [null, err];\n        }\n    }\n\n    function safeMatch(parser, line) {\n        try {\n            return parser.test(line);\n        } catch (err) {\n            return false;\n        }\n    }\n\n    function formatTransportPath(path) {\n        if (typeof path === 'string' || typeof path === 'number') {\n            path = String(path).trim();\n\n            if (path === '') {\n                return '/';\n            } else if (!path.startsWith('/')) {\n                return '/' + path;\n            }\n        }\n        return path;\n    }\n\n    function lastParse(proxy) {\n        if (typeof proxy.cipher === 'string') {\n            proxy.cipher = proxy.cipher.toLowerCase();\n        }\n        if (typeof proxy.password === 'number') {\n            proxy.password = numberToString(proxy.password);\n        }\n        if (['ss'].includes(proxy.type) && proxy.cipher === 'none' && !proxy.password) {\n            // https://github.com/MetaCubeX/mihomo/issues/1677\n            proxy.password = '';\n        }\n        if (proxy.interface) {\n            proxy['interface-name'] = proxy.interface;\n            delete proxy.interface;\n        }\n        if (isValidPortNumber(proxy.port)) {\n            proxy.port = parseInt(proxy.port, 10);\n        }\n        if (proxy.server) {\n            proxy.server = `${proxy.server}`.trim().replace(/^\\[/, '').replace(/\\]$/, '');\n        }\n        if (proxy.network === 'ws') {\n            if (!proxy['ws-opts'] && (proxy['ws-path'] || proxy['ws-headers'])) {\n                proxy['ws-opts'] = {};\n                if (proxy['ws-path']) {\n                    proxy['ws-opts'].path = proxy['ws-path'];\n                }\n                if (proxy['ws-headers']) {\n                    proxy['ws-opts'].headers = proxy['ws-headers'];\n                }\n            }\n            delete proxy['ws-path'];\n            delete proxy['ws-headers'];\n        }\n\n        const transportPath = proxy[`${proxy.network}-opts`]?.path;\n\n        if (Array.isArray(transportPath)) {\n            proxy[`${proxy.network}-opts`].path = transportPath.map((item) => formatTransportPath(item));\n        } else if (transportPath != null) {\n            proxy[`${proxy.network}-opts`].path = formatTransportPath(transportPath);\n        }\n\n        if (proxy.type === 'trojan') {\n            if (proxy.network === 'tcp') {\n                delete proxy.network;\n            }\n        }\n        if (['vless'].includes(proxy.type)) {\n            if (!proxy.network) {\n                proxy.network = 'tcp';\n            }\n        }\n        if (['trojan', 'tuic', 'hysteria', 'hysteria2', 'juicity', 'anytls'].includes(proxy.type)) {\n            proxy.tls = true;\n        }\n        if (proxy.network) {\n            let transportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n            let transporthost = proxy[`${proxy.network}-opts`]?.headers?.host;\n            if (proxy.network === 'h2') {\n                if (!transporthost && transportHost) {\n                    proxy[`${proxy.network}-opts`].headers.host = transportHost;\n                    delete proxy[`${proxy.network}-opts`].headers.Host;\n                }\n            } else if (transporthost && !transportHost) {\n                proxy[`${proxy.network}-opts`].headers.Host = transporthost;\n                delete proxy[`${proxy.network}-opts`].headers.host;\n            }\n        }\n        if (proxy.network === 'h2') {\n            const host = proxy['h2-opts']?.headers?.host;\n            const path = proxy['h2-opts']?.path;\n            if (host && !Array.isArray(host)) {\n                proxy['h2-opts'].headers.host = [host];\n            }\n            if (Array.isArray(path)) {\n                proxy['h2-opts'].path = path[0];\n            }\n        }\n\n        // \u975E tls, \u6709 ws/http \u4F20\u8F93\u5C42, \u4F7F\u7528\u57DF\u540D\u7684\u8282\u70B9, \u5C06\u8BBE\u7F6E\u4F20\u8F93\u5C42 Host \u9632\u6B62\u4E4B\u540E\u57DF\u540D\u89E3\u6790\u540E\u4E22\u5931\u57DF\u540D(\u4E0D\u8986\u76D6\u73B0\u6709\u7684 Host)\n        if (!proxy.tls && ['ws', 'http'].includes(proxy.network) && !proxy[`${proxy.network}-opts`]?.headers?.Host && !isIP(proxy.server)) {\n            proxy[`${proxy.network}-opts`] = proxy[`${proxy.network}-opts`] || {};\n            proxy[`${proxy.network}-opts`].headers = proxy[`${proxy.network}-opts`].headers || {};\n            proxy[`${proxy.network}-opts`].headers.Host =\n                ['vmess', 'vless'].includes(proxy.type) && proxy.network === 'http' ? [proxy.server] : proxy.server;\n        }\n        // \u7EDF\u4E00\u5C06 VMess \u548C VLESS \u7684 http \u4F20\u8F93\u5C42\u7684 path \u548C Host \u5904\u7406\u4E3A\u6570\u7EC4\n        if (['vmess', 'vless'].includes(proxy.type) && proxy.network === 'http') {\n            let transportPath = proxy[`${proxy.network}-opts`]?.path;\n            let transportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n            if (transportHost && !Array.isArray(transportHost)) {\n                proxy[`${proxy.network}-opts`].headers.Host = [transportHost];\n            }\n            if (transportPath && !Array.isArray(transportPath)) {\n                proxy[`${proxy.network}-opts`].path = [transportPath];\n            }\n        }\n        if (proxy.tls && !proxy.sni) {\n            if (!isIP(proxy.server)) {\n                proxy.sni = proxy.server;\n            }\n            if (!proxy.sni && proxy.network) {\n                let transportHost = proxy[`${proxy.network}-opts`]?.headers?.Host;\n                transportHost = Array.isArray(transportHost) ? transportHost[0] : transportHost;\n                if (transportHost) {\n                    proxy.sni = transportHost;\n                }\n            }\n        }\n        // if (['hysteria', 'hysteria2', 'tuic'].includes(proxy.type)) {\n        if (proxy.ports) {\n            proxy.ports = String(proxy.ports).replace(/\\//g, ',');\n        } else {\n            delete proxy.ports;\n        }\n        // }\n        if (['hysteria2'].includes(proxy.type) && proxy.obfs && !['salamander'].includes(proxy.obfs) && !proxy['obfs-password']) {\n            proxy['obfs-password'] = proxy.obfs;\n            proxy.obfs = 'salamander';\n        }\n        if (['hysteria2'].includes(proxy.type) && !proxy['obfs-password'] && proxy['obfs_password']) {\n            proxy['obfs-password'] = proxy['obfs_password'];\n            delete proxy['obfs_password'];\n        }\n        if (['vless'].includes(proxy.type)) {\n            // \u5220\u9664 reality-opts: {}\n            if (proxy['reality-opts'] && Object.keys(proxy['reality-opts']).length === 0) {\n                delete proxy['reality-opts'];\n            }\n            // \u5220\u9664 grpc-opts: {}\n            if (proxy['grpc-opts'] && Object.keys(proxy['grpc-opts']).length === 0) {\n                delete proxy['grpc-opts'];\n            }\n            // \u975E reality, \u7A7A flow \u6CA1\u6709\u610F\u4E49\n            if (!proxy['reality-opts'] && !proxy.flow) {\n                delete proxy.flow;\n            }\n            if (['http'].includes(proxy.network)) {\n                let transportPath = proxy[`${proxy.network}-opts`]?.path;\n                if (!transportPath) {\n                    if (!proxy[`${proxy.network}-opts`]) {\n                        proxy[`${proxy.network}-opts`] = {};\n                    }\n                    proxy[`${proxy.network}-opts`].path = ['/'];\n                }\n            }\n        }\n\n        if (typeof proxy.name !== 'string') {\n            if (/^\\d+$/.test(proxy.name)) {\n                proxy.name = `${proxy.name}`;\n            } else {\n                try {\n                    if (proxy.name?.data) {\n                        proxy.name = Buffer.from(proxy.name.data).toString('utf8');\n                    } else {\n                        proxy.name = Buffer.from(proxy.name).toString('utf8');\n                    }\n                } catch (e) {\n                    $.error(`proxy.name decode failed\\nReason: ${e}`);\n                    proxy.name = `${proxy.type} ${proxy.server}:${proxy.port}`;\n                }\n            }\n        }\n        if (['ws', 'http', 'h2'].includes(proxy.network)) {\n            if (['ws', 'h2'].includes(proxy.network) && !proxy[`${proxy.network}-opts`]?.path) {\n                proxy[`${proxy.network}-opts`] = proxy[`${proxy.network}-opts`] || {};\n                proxy[`${proxy.network}-opts`].path = '/';\n            } else if (\n                proxy.network === 'http' &&\n                (!Array.isArray(proxy[`${proxy.network}-opts`]?.path) || proxy[`${proxy.network}-opts`]?.path.every((i) => !i))\n            ) {\n                proxy[`${proxy.network}-opts`] = proxy[`${proxy.network}-opts`] || {};\n                proxy[`${proxy.network}-opts`].path = ['/'];\n            }\n        }\n        if (['', 'off'].includes(proxy.sni)) {\n            proxy['disable-sni'] = true;\n        }\n        let caStr = proxy['ca_str'];\n        if (proxy['ca-str']) {\n            caStr = proxy['ca-str'];\n        } else if (caStr) {\n            delete proxy['ca_str'];\n            proxy['ca-str'] = caStr;\n        }\n        try {\n            if ($.env.isNode && !caStr && proxy['_ca']) {\n                caStr = $.node.fs.readFileSync(proxy['_ca'], {\n                    encoding: 'utf8',\n                });\n            }\n        } catch (e) {\n            $.error(`Read ca file failed\\nReason: ${e}`);\n        }\n        if (!proxy['tls-fingerprint'] && caStr) {\n            proxy['tls-fingerprint'] = rs.generateFingerprint(caStr);\n        }\n        if (['ss'].includes(proxy.type) && isPresent(proxy, 'shadow-tls-password')) {\n            proxy.plugin = 'shadow-tls';\n            proxy['plugin-opts'] = {\n                host: proxy['shadow-tls-sni'],\n                password: proxy['shadow-tls-password'],\n                version: proxy['shadow-tls-version'],\n            };\n            delete proxy['shadow-tls-sni'];\n            delete proxy['shadow-tls-password'];\n            delete proxy['shadow-tls-version'];\n        }\n        return proxy;\n    }\n\n    function isIP(ip) {\n        return isIPv4(ip) || isIPv6(ip);\n    }\n\n    return {\n        parse,\n        produce,\n    };\n})();\n\n/**\n * sub store \u8282\u70B9\u8F6C\u6362\u5165\u53E3\n */\nexport default {\n    async fetch(request) {\n        try {\n            const { target, nodeArray } = parseRequestParams(request);\n\n            if (!target || nodeArray.length === 0) {\n                return renderUsageInstructions();\n            }\n\n            const result = await processNodeConversion(nodeArray, target, request);\n            return formatResponse(result, request);\n        } catch (error) {\n            return new Response(`Error: ${error.message}`, { status: 500 });\n        }\n    },\n};\n\n/**\n * \u89E3\u6790\u8BF7\u6C42\u53C2\u6570\n * @param {Request} request\n * @returns {Object} \u5305\u542Btarget\u548CnodeArray\u7684\u5BF9\u8C61\n */\nfunction parseRequestParams(request) {\n    const url = new URL(request.url);\n    let target = url.searchParams.get('target');\n    const inputnode = url.searchParams.get('url');\n    const nodeArray = inputnode ? inputnode.split(/[,|]/) : [];\n\n    // \u6807\u51C6\u5316\u76EE\u6807\u7C7B\u578B\n    if (/meta|clash.meta|clash|clashverge|mihomo/i.test(target)) target = 'mihomo';\n    if (/singbox|sing-box|sfa/i.test(target)) target = 'singbox';\n\n    return { target, nodeArray };\n}\n\n/**\n * \u8FD4\u56DE\u4F7F\u7528\u8BF4\u660E\n * @returns {Response} \u5305\u542B\u4F7F\u7528\u8BF4\u660E\u7684JSON\u54CD\u5E94\n */\nfunction renderUsageInstructions() {\n    return new Response(\n        JSON.stringify(\n            {\n                version: 'SubStore v2.20.4',\n                message: '\u8FD9\u662F\u4E00\u4E2A\u57FA\u4E8E cloudflare pagers \u7684 sub-store \u8282\u70B9\u8F6C\u6362\u5DE5\u5177\uFF0C\u4EC5\u8F6C\u6362\u8282\u70B9\u7528',\n                usage: {\n                    target: '\u8F93\u51FA\u7C7B\u578B\uFF1A{singbox|mihomo|v2ray|base64}',\n                    url: '\u8F93\u5165\u7F16\u7801\u540E\u7684\u8BA2\u9605\u94FE\u63A5\uFF0C\u591A\u4E2A\u8BA2\u9605\u53EF\u7528 , \u5206\u5272',\n                    example: '/?target=v2ray&url=UrlEncode(\u7F16\u7801\u540E\u7684\u8BA2\u9605)',\n                },\n            },\n            null,\n            4\n        ),\n        {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' },\n        }\n    );\n}\n\n/**\n * \u5904\u7406\u8282\u70B9\u8F6C\u6362\u6D41\u7A0B\n * @param {Array} nodeArray - \u8282\u70B9URL\u6570\u7EC4\n * @param {string} target - \u76EE\u6807\u683C\u5F0F\n * @param {Request} request - \u539F\u59CB\u8BF7\u6C42\u5BF9\u8C61\n * @returns {Object} \u8F6C\u6362\u7ED3\u679C\n */\nasync function processNodeConversion(nodeArray, target, request) {\n    const results = {\n        proxies: [],\n        outbounds: [],\n        v2ray: '',\n        base64: '',\n        headers: [],\n    };\n\n    const processedResults = await Promise.all(nodeArray.map((input) => processSingleInput(input, target)));\n\n    const concatValues = (targetProp, sourceProp) => {\n        if (sourceProp) {\n            if (Array.isArray(sourceProp)) {\n                results[targetProp] += sourceProp.filter(Boolean).join('\\n') + '\\n';\n            } else {\n                results[targetProp] += sourceProp + '\\n';\n            }\n        }\n    };\n\n    // \u5408\u5E76\u6240\u6709\u7ED3\u679C\n    processedResults.forEach((result) => {\n        if (result?.proxies) results.proxies.push(...result.proxies);\n        if (result?.outbounds) results.outbounds.push(...result.outbounds);\n        concatValues('base64', result.base64);\n        concatValues('v2ray', result.v2ray);\n        if (result?.headers) results.headers.push(result.headers);\n    });\n\n    if (target === 'mihomo') {\n        results.proxies = processProxyItems(results.proxies, 'name');\n    } else if (target === 'singbox') {\n        results.outbounds = processProxyItems(results.outbounds, 'tag');\n    }\n\n    if (results.base64) {\n        results.base64 = btoa(unescape(encodeURIComponent(results.base64)));\n    }\n    // \u968F\u673A\u9009\u62E9\u4E00\u4E2Aheaders\n    const randomHeaders = results.headers.length > 0 ? results.headers[Math.floor(Math.random() * results.headers.length)] : undefined;\n    // \u6E05\u7406\u7A7A\u5B57\u6BB5\n    if (!results.proxies.length) delete results.proxies;\n    if (!results.outbounds.length) delete results.outbounds;\n    if (!results.v2ray) delete results.v2ray;\n    if (!results.headers.length) delete results.headers;\n    return { ...results, headers: randomHeaders };\n}\n\n/**\n * \u5904\u7406\u5355\u4E2A\u8F93\u5165\n * @param {string} input - \u5355\u4E2A\u8282\u70B9URL\u6216\u6570\u636E\n * @param {string} platform - \u76EE\u6807\u5E73\u53F0\n * @returns {Object} \u5904\u7406\u7ED3\u679C\n */\nasync function processSingleInput(input, platform) {\n    try {\n        let data;\n        let result = {};\n        const isHttpInput = /^https?:\\/\\//i.test(input);\n\n        if (isHttpInput) {\n            const response = await fetchResponse(input, 'clash.mate');\n            data = response?.data ?? response;\n            result.headers = response.headers;\n        } else {\n            data = input;\n        }\n\n        if (!data) return result;\n\n        // \u6839\u636E\u6570\u636E\u7C7B\u578B\u5904\u7406\n        const proxiesData = isProxies(data);\n        if (proxiesData?.proxies) {\n            result = await convertProxies(proxiesData, platform);\n        } else if (isBase64(data)) {\n            result = await convertProxies(data, platform);\n        } else if (isValidURL(data)) {\n            const splitData = data.split(/[\\n\\s]/);\n            const resultsArray = await Promise.all(splitData.map((item) => convertProxies(item, platform)));\n\n            // \u5408\u5E76\u7ED3\u679C\n            resultsArray.forEach((res) => {\n                Object.entries(res).forEach(([key, value]) => {\n                    result[key] = (result[key] || []).concat(value);\n                });\n            });\n        }\n\n        return result;\n    } catch (error) {\n        console.error(`Error processing input: ${input}`, error);\n        return await convertProxies(input, platform);\n    }\n}\n\n/**\n * \u8F6C\u6362\u4EE3\u7406\u6570\u636E\u5230\u76EE\u6807\u683C\u5F0F\n * @param {Object|string} input - \u8F93\u5165\u6570\u636E\n * @param {string} platform - \u76EE\u6807\u5E73\u53F0\n * @returns {Object} \u8F6C\u6362\u7ED3\u679C\n */\nasync function convertProxies(input, platform) {\n    let result = {};\n\n    // \u5982\u679C\u6CA1\u6709 proxies\uFF0C\u5219\u89E3\u6790\u5E76\u91CD\u65B0\u8D4B\u503C\n    if (!input?.proxies) {\n        input = { proxies: ProxyUtils.parse(input) };\n    }\n\n    // \u786E\u4FDD proxies \u5B58\u5728\n    if (input.proxies) {\n        const platformConfigs = {\n            singbox: { key: 'outbounds', format: 'singbox' },\n            mihomo: { key: 'proxies', format: 'mihomo' },\n            v2ray: { key: 'v2ray', format: 'v2ray' },\n            default: { key: 'base64', format: 'v2ray' },\n        };\n        const { key, format } = platformConfigs[platform] || platformConfigs.default;\n        result[key] = ProxyUtils.produce(input.proxies, format, 'internal');\n    }\n\n    return result;\n}\n\n/**\n * \u751F\u6210\u552F\u4E00\u540D\u79F0\n * @param {Array} items - \u4EE3\u7406\u9879\u6570\u7EC4\n * @param {string} nameField - \u540D\u79F0\u5B57\u6BB5\u540D\n * @returns {Array} \u5904\u7406\u540E\u7684\u4EE3\u7406\u9879\u6570\u7EC4\n */\nfunction processProxyItems(items, nameField) {\n    const nameCount = new Map();\n\n    // \u7EDF\u8BA1\u6BCF\u4E2A\u540D\u79F0\u51FA\u73B0\u7684\u6B21\u6570\n    items.forEach((item) => {\n        const name = item[nameField];\n        nameCount.set(name, (nameCount.get(name) || 0) + 1);\n    });\n\n    // \u5904\u7406\u91CD\u590D\u540D\u79F0\n    return items.map((item) => {\n        const originalName = item[nameField];\n        let suffix = 1;\n        let newName = originalName;\n        if (nameCount.get(originalName) === 1) {\n            return item;\n        }\n\n        while (nameCount.has(`${originalName}_${suffix}`)) {\n            suffix++;\n        }\n\n        newName = `${originalName}_${suffix}`;\n        nameCount.set(newName, 1);\n\n        return {\n            ...item,\n            [nameField]: newName,\n        };\n    });\n}\n\n/**\n * \u683C\u5F0F\u5316\u6700\u7EC8\u54CD\u5E94\n * @param {Object} result - \u5904\u7406\u7ED3\u679C\n * @param {Request} request - \u539F\u59CB\u8BF7\u6C42\n * @returns {Response} \u683C\u5F0F\u5316\u540E\u7684\u54CD\u5E94\n */\nfunction formatResponse(result, request) {\n    const isBrowser = /Mozilla|Chrome|Safari|Edge|Opera|Firefox/i.test(request.headers.get('User-Agent'));\n\n    const headers = new Headers(result.headers);\n    headers.set('Content-Type', 'application/json; charset=utf-8');\n\n    if (isBrowser) {\n        headers.set('Content-Disposition', 'inline');\n    }\n\n    if (Array.isArray(result?.proxies) && result?.proxies?.length > 0) {\n        return new Response(JSON.stringify({ proxies: result.proxies }, null, 4), {\n            status: 200,\n            headers,\n        });\n    }\n\n    if (Array.isArray(result?.outbounds) && result?.outbounds?.length > 0) {\n        return new Response(JSON.stringify({ outbounds: result.outbounds }, null, 4), {\n            status: 200,\n            headers,\n        });\n    }\n\n    if (result?.v2ray) {\n        return new Response(result.v2ray, { status: 200, headers });\n    }\n\n    if (result?.base64) {\n        return new Response(result.base64, { status: 200, headers });\n    }\n\n    return new Response('', { status: 200, headers });\n}\n\n/**\n * \u83B7\u53D6\u8FDC\u7A0B\u54CD\u5E94\n * @param {string} url - \u8BF7\u6C42URL\n * @param {string} userAgent - User-Agent\u5934\n * @returns {Object} \u54CD\u5E94\u6570\u636E\n */\nasync function fetchResponse(url, userAgent) {\n    let response;\n    try {\n        response = await fetch(url, {\n            method: 'GET',\n            headers: { 'User-Agent': userAgent },\n        });\n    } catch {\n        return url;\n    }\n\n    const headersObj = Object.fromEntries(response.headers.entries());\n    const sanitizedCD = sanitizeContentDisposition(response.headers);\n\n    if (sanitizedCD) {\n        headersObj['content-disposition'] = sanitizedCD;\n    }\n\n    return {\n        status: response.status,\n        headers: headersObj,\n        data: await response.text(),\n    };\n}\n\n/**\n * \u6E05\u7406Content-Disposition\u5934\n * @param {Headers} headers - \u54CD\u5E94\u5934\n * @returns {string|null} \u6E05\u7406\u540E\u7684\u5185\u5BB9\n */\nfunction sanitizeContentDisposition(headers) {\n    const contentDisposition = headers.get('Content-Disposition') || headers.get('content-disposition');\n\n    if (!contentDisposition) return null;\n\n    const filenameMatch = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\n    if (!filenameMatch) return null;\n\n    const originalFilename = filenameMatch[1];\n    const isNonAscii = /[^\\x00-\\x7F]/.test(originalFilename);\n\n    if (!isNonAscii) return contentDisposition;\n\n    const fallback = 'download.json';\n    const encoded = encodeURIComponent(originalFilename);\n\n    return `attachment; filename=\"${fallback}\"; filename*=UTF-8''${encoded}`;\n}\n\n/**\n * \u68C0\u67E5\u662F\u5426\u662FBase64\u5B57\u7B26\u4E32\n * @param {string} str - \u5F85\u68C0\u67E5\u5B57\u7B26\u4E32\n * @returns {boolean} \u662F\u5426\u662FBase64\n */\nfunction isBase64(str) {\n    return /^[A-Za-z0-9+/=]+$/.test(str) && str.length % 4 === 0;\n}\n\n/**\n * \u68C0\u67E5\u662F\u5426\u662F\u6709\u6548URL\n * @param {string} str - \u5F85\u68C0\u67E5\u5B57\u7B26\u4E32\n * @returns {boolean} \u662F\u5426\u662F\u6709\u6548URL\n */\nfunction isValidURL(str) {\n    try {\n        const url = new URL(str);\n        return /^[a-zA-Z][a-zA-Z0-9+.-]*:$/.test(url.protocol);\n    } catch (err) {\n        return false;\n    }\n}\n\n/**\n * \u68C0\u67E5\u5E76\u63D0\u53D6\u4EE3\u7406\u6570\u636E\n * @param {string} textData - \u6587\u672C\u6570\u636E\n * @returns {Object} \u4EE3\u7406\u6570\u636E\n */\nfunction isProxies(textData) {\n    let jsonData = {};\n\n    try {\n        const data = safeLoad(textData, { maxAliasCount: -1, merge: true });\n        if (data?.proxies) {\n            jsonData.proxies = data.proxies;\n        }\n    } catch {\n        return jsonData;\n    }\n\n    return jsonData;\n}\n"],
  "mappings": "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",
  "names": ["version", "VERSION", "_hasBuffer", "_TD", "_TE", "b64ch", "b64chs", "b64tab", "a", "tab", "c", "i", "b64re", "_fromCC", "_U8Afrom", "it", "_mkUriSafe", "src", "m0", "_tidyB64", "btoaPolyfill", "bin", "u32", "c0", "c1", "c2", "asc", "pad", "_btoa", "_fromUint8Array", "u8a", "strs", "l", "fromUint8Array", "urlsafe", "cb_utob", "cc", "re_utob", "utob", "u", "_encode", "encode", "encodeURI", "re_btou", "cb_btou", "cccc", "cp", "offset", "btou", "b", "atobPolyfill", "u24", "r1", "r2", "binArray", "_atob", "_toUint8Array", "toUint8Array", "_unURI", "_decode", "decode", "isValid", "s", "_noEnum", "v", "extendString", "_add", "name", "body", "extendUint8Array", "extendBuiltins", "gBase64", "dist_exports", "__export", "Alias", "cst_exports", "Composer", "Document", "Lexer", "LineCounter", "Pair", "Parser", "Scalar", "Schema", "YAMLError", "YAMLMap", "YAMLParseError", "YAMLSeq", "YAMLWarning", "isAlias", "isCollection", "isDocument", "isMap", "isNode", "isPair", "isScalar", "isSeq", "parse", "parseAllDocuments", "parseDocument", "stringify", "visit", "visitAsync", "ALIAS", "DOC", "MAP", "PAIR", "SCALAR", "SEQ", "NODE_TYPE", "isAlias", "node", "isDocument", "isMap", "isPair", "isScalar", "isSeq", "isCollection", "isNode", "hasAnchor", "BREAK", "SKIP", "REMOVE", "visit", "node", "visitor", "visitor_", "initVisitor", "isDocument", "visit_", "key", "path", "ctrl", "callVisitor", "isNode", "isPair", "replaceNode", "isCollection", "i", "ci", "ck", "cv", "visitAsync", "visitAsync_", "isMap", "isSeq", "isScalar", "isAlias", "parent", "pt", "escapeChars", "escapeTagName", "tn", "ch", "Directives", "_Directives", "yaml", "tags", "copy", "res", "line", "onError", "parts", "name", "handle", "prefix", "version", "isValid", "source", "verbatim", "suffix", "error", "tag", "doc", "lines", "tagEntries", "tagNames", "isNode", "visit", "_key", "node", "anchorIsValid", "anchor", "msg", "anchorNames", "root", "anchors", "visit", "_key", "node", "findNewAnchor", "prefix", "exclude", "i", "name", "createNodeAnchors", "doc", "aliasObjects", "sourceObjects", "prevAnchors", "source", "ref", "isScalar", "isCollection", "error", "applyReviver", "reviver", "obj", "key", "val", "len", "v0", "v1", "k", "toJS", "value", "arg", "ctx", "v", "hasAnchor", "data", "res", "NodeBase", "type", "NODE_TYPE", "copy", "doc", "mapAsMap", "maxAliasCount", "onAnchor", "reviver", "isDocument", "ctx", "res", "toJS", "count", "applyReviver", "Alias", "NodeBase", "source", "ALIAS", "doc", "ctx", "nodes", "visit", "_key", "node", "isAlias", "hasAnchor", "found", "_arg", "anchors", "maxAliasCount", "msg", "data", "toJS", "getAliasCount", "_onComment", "_onChompKeep", "src", "anchorIsValid", "anchor", "isCollection", "count", "item", "c", "isPair", "kc", "vc", "isScalarValue", "value", "Scalar", "NodeBase", "SCALAR", "arg", "ctx", "toJS", "defaultTagPrefix", "findTagObject", "value", "tagName", "tags", "match", "t", "tagObj", "createNode", "ctx", "isDocument", "isNode", "isPair", "map", "MAP", "aliasDuplicateObjects", "onAnchor", "onTagObj", "schema", "sourceObjects", "ref", "Alias", "node", "Scalar", "SEQ", "collectionFromPath", "schema", "path", "value", "v", "k", "a", "createNode", "isEmptyPath", "Collection", "NodeBase", "type", "copy", "it", "isNode", "isPair", "key", "rest", "node", "isCollection", "keepScalar", "isScalar", "allowScalar", "stringifyComment", "str", "indentComment", "comment", "indent", "lineComment", "FOLD_FLOW", "FOLD_BLOCK", "FOLD_QUOTED", "foldFlowLines", "text", "indent", "mode", "indentAtStart", "lineWidth", "minContentWidth", "onFold", "onOverflow", "endStep", "folds", "escapedFolds", "end", "split", "prev", "overflow", "i", "escStart", "escEnd", "consumeMoreIndentedLines", "ch", "next", "j", "res", "fold", "start", "getFoldOptions", "ctx", "isBlock", "containsDocumentMarker", "str", "lineLengthOverLimit", "lineWidth", "indentLength", "limit", "strLen", "i", "start", "doubleQuotedString", "value", "json", "implicitKey", "minMultiLineLength", "indent", "ch", "code", "foldFlowLines", "FOLD_QUOTED", "singleQuotedString", "res", "FOLD_FLOW", "quotedString", "singleQuote", "qs", "hasDouble", "hasSingle", "blockEndNewlines", "blockString", "comment", "type", "onComment", "onChompKeep", "blockQuote", "commentString", "literal", "Scalar", "chomp", "endStart", "end", "endNlPos", "startWithSpace", "startEnd", "startNlPos", "header", "foldedValue", "literalFallback", "foldOptions", "body", "FOLD_BLOCK", "plainString", "item", "actualString", "indentStep", "inFlow", "test", "tag", "compat", "tags", "stringifyString", "ss", "_stringify", "_type", "defaultKeyType", "defaultStringType", "t", "createStringifyContext", "doc", "options", "opt", "stringifyComment", "inFlow", "getTagObject", "tags", "item", "match", "t", "tagObj", "obj", "isScalar", "testMatch", "name", "stringifyProps", "node", "anchors", "props", "anchor", "isCollection", "anchorIsValid", "tag", "stringify", "ctx", "onComment", "onChompKeep", "isPair", "isAlias", "isNode", "str", "stringifyString", "stringifyPair", "key", "value", "ctx", "onComment", "onChompKeep", "allNullValues", "doc", "indent", "indentStep", "commentString", "indentSeq", "simpleKeys", "keyComment", "isNode", "isCollection", "msg", "explicitKey", "isScalar", "Scalar", "keyCommentDone", "chompKeep", "str", "stringify", "lineComment", "vsb", "vcb", "valueComment", "isSeq", "valueCommentDone", "valueStr", "ws", "cs", "indentComment", "vs0", "nl0", "hasNewline", "flow", "hasPropsLine", "sp0", "warn", "logLevel", "warning", "MERGE_KEY", "merge", "value", "Scalar", "addMergeToJSMap", "isMergeKey", "ctx", "key", "isScalar", "tag", "map", "isAlias", "isSeq", "it", "mergeValue", "source", "isMap", "srcMap", "addPairToJSMap", "ctx", "map", "key", "value", "isNode", "isMergeKey", "addMergeToJSMap", "jsKey", "toJS", "stringKey", "stringifyKey", "jsValue", "strCtx", "createStringifyContext", "node", "strKey", "jsonStr", "warn", "createPair", "key", "value", "ctx", "k", "createNode", "v", "Pair", "_Pair", "NODE_TYPE", "PAIR", "schema", "isNode", "_", "pair", "addPairToJSMap", "onComment", "onChompKeep", "stringifyPair", "stringifyCollection", "collection", "ctx", "options", "stringifyFlowCollection", "stringifyBlockCollection", "comment", "items", "blockItemPrefix", "flowChars", "itemIndent", "onChompKeep", "onComment", "indent", "commentString", "itemCtx", "chompKeep", "lines", "i", "item", "isNode", "addCommentBefore", "isPair", "ik", "str", "stringify", "lineComment", "line", "indentComment", "indentStep", "fcPadding", "reqNewline", "linesAtValue", "iv", "start", "end", "len", "sum", "ic", "findPair", "items", "key", "k", "isScalar", "it", "isPair", "YAMLMap", "Collection", "schema", "MAP", "obj", "ctx", "keepUndefined", "replacer", "map", "add", "value", "createPair", "pair", "overwrite", "_pair", "Pair", "prev", "sortEntries", "isScalarValue", "i", "item", "keepScalar", "node", "_", "Type", "addPairToJSMap", "onComment", "onChompKeep", "stringifyCollection", "map", "YAMLMap", "onError", "isMap", "schema", "obj", "ctx", "YAMLSeq", "Collection", "schema", "SEQ", "value", "key", "idx", "asItemIndex", "keepScalar", "it", "isScalar", "prev", "isScalarValue", "_", "ctx", "seq", "item", "toJS", "onComment", "onChompKeep", "stringifyCollection", "obj", "replacer", "i", "createNode", "seq", "YAMLSeq", "onError", "isSeq", "schema", "obj", "ctx", "string", "value", "str", "item", "ctx", "onComment", "onChompKeep", "stringifyString", "nullTag", "value", "Scalar", "source", "ctx", "boolTag", "value", "str", "Scalar", "source", "ctx", "sv", "stringifyNumber", "format", "minFractionDigits", "tag", "value", "num", "n", "i", "d", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "intStringify", "node", "prefix", "stringifyNumber", "intOct", "_onError", "opt", "int", "intHex", "schema", "map", "seq", "string", "nullTag", "boolTag", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "intIdentify", "value", "stringifyJSON", "jsonScalars", "str", "Scalar", "_onError", "intAsBigInt", "jsonError", "onError", "schema", "map", "seq", "binary", "value", "src", "onError", "str", "buffer", "comment", "type", "ctx", "onComment", "onChompKeep", "buf", "s", "i", "Scalar", "lineWidth", "n", "lines", "o", "stringifyString", "resolvePairs", "seq", "onError", "isSeq", "i", "item", "isPair", "isMap", "pair", "Pair", "Scalar", "cn", "createPairs", "schema", "iterable", "ctx", "replacer", "pairs", "YAMLSeq", "it", "key", "value", "keys", "createPair", "YAMLOMap", "_YAMLOMap", "YAMLSeq", "YAMLMap", "_", "ctx", "map", "pair", "key", "value", "isPair", "toJS", "schema", "iterable", "pairs", "createPairs", "omap", "seq", "onError", "resolvePairs", "seenKeys", "isScalar", "boolStringify", "value", "source", "ctx", "trueTag", "falseTag", "Scalar", "floatNaN", "value", "str", "stringifyNumber", "floatExp", "node", "num", "float", "Scalar", "dot", "f", "intIdentify", "value", "intResolve", "str", "offset", "radix", "intAsBigInt", "sign", "n", "intStringify", "node", "prefix", "stringifyNumber", "intBin", "_onError", "opt", "intOct", "int", "intHex", "YAMLSet", "_YAMLSet", "YAMLMap", "schema", "key", "pair", "isPair", "Pair", "findPair", "keepPair", "isScalar", "value", "prev", "_", "ctx", "onComment", "onChompKeep", "iterable", "replacer", "set", "createPair", "map", "onError", "isMap", "parseSexagesimal", "str", "asBigInt", "sign", "parts", "num", "n", "res", "p", "stringifySexagesimal", "node", "value", "stringifyNumber", "_60", "intTime", "_onError", "intAsBigInt", "floatTime", "timestamp", "match", "year", "month", "day", "hour", "minute", "second", "millisec", "date", "tz", "d", "schema", "map", "seq", "string", "nullTag", "trueTag", "falseTag", "intBin", "intOct", "int", "intHex", "floatNaN", "floatExp", "float", "binary", "merge", "omap", "pairs", "set", "intTime", "floatTime", "timestamp", "schemas", "schema", "map", "seq", "string", "tagsByName", "binary", "boolTag", "float", "floatExp", "floatNaN", "floatTime", "int", "intHex", "intOct", "intTime", "merge", "nullTag", "omap", "pairs", "set", "timestamp", "coreKnownTags", "getTags", "customTags", "schemaName", "addMergeTag", "schemaTags", "tags", "keys", "key", "tag", "tagObj", "tagName", "sortMapEntriesByKey", "a", "b", "Schema", "_Schema", "compat", "customTags", "merge", "resolveKnownTags", "schema", "sortMapEntries", "toStringDefaults", "getTags", "coreKnownTags", "MAP", "map", "SCALAR", "string", "SEQ", "seq", "copy", "stringifyDocument", "doc", "options", "lines", "hasDirectives", "dir", "ctx", "createStringifyContext", "commentString", "cs", "indentComment", "chompKeep", "contentComment", "isNode", "onChompKeep", "body", "stringify", "lineComment", "dc", "Document", "_Document", "value", "replacer", "options", "NODE_TYPE", "DOC", "_replacer", "opt", "version", "Directives", "copy", "isNode", "assertCollection", "path", "node", "name", "prev", "anchorNames", "findNewAnchor", "Alias", "keyToStr", "v", "asStr", "aliasDuplicateObjects", "anchorPrefix", "flow", "keepUndefined", "onTagObj", "tag", "onAnchor", "setAnchors", "sourceObjects", "createNodeAnchors", "ctx", "createNode", "isCollection", "key", "k", "Pair", "isEmptyPath", "keepScalar", "isScalar", "collectionFromPath", "sv", "Schema", "json", "jsonArg", "mapAsMap", "maxAliasCount", "reviver", "res", "toJS", "count", "applyReviver", "s", "stringifyDocument", "contents", "YAMLError", "name", "pos", "code", "message", "YAMLParseError", "YAMLWarning", "prettifyError", "src", "lc", "error", "line", "col", "ci", "lineStr", "trimStart", "prev", "count", "end", "pointer", "resolveProps", "tokens", "flow", "indicator", "next", "offset", "onError", "parentIndent", "startOnNewline", "spaceBefore", "atNewline", "hasSpace", "comment", "commentSep", "hasNewline", "reqSpace", "tab", "anchor", "tag", "newlineAfterProp", "comma", "found", "start", "token", "cb", "last", "end", "containsNewline", "key", "st", "it", "flowIndentCheck", "indent", "fc", "onError", "end", "containsNewline", "mapIncludes", "ctx", "items", "search", "uniqueKeys", "isEqual", "a", "b", "isScalar", "pair", "startColMsg", "resolveBlockMap", "composeNode", "composeEmptyNode", "ctx", "bm", "onError", "tag", "NodeClass", "YAMLMap", "map", "offset", "commentEnd", "collItem", "start", "key", "sep", "value", "keyProps", "resolveProps", "implicitKey", "containsNewline", "keyStart", "keyNode", "flowIndentCheck", "mapIncludes", "valueProps", "valueNode", "pair", "Pair", "resolveBlockSeq", "composeNode", "composeEmptyNode", "ctx", "bs", "onError", "tag", "NodeClass", "YAMLSeq", "seq", "offset", "commentEnd", "start", "value", "props", "resolveProps", "node", "flowIndentCheck", "resolveEnd", "end", "offset", "reqSpace", "onError", "comment", "hasSpace", "sep", "token", "source", "type", "cb", "blockMsg", "isBlock", "token", "resolveFlowCollection", "composeNode", "composeEmptyNode", "ctx", "fc", "onError", "tag", "isMap", "fcName", "NodeClass", "YAMLMap", "YAMLSeq", "coll", "atRoot", "offset", "i", "collItem", "start", "key", "sep", "value", "props", "resolveProps", "containsNewline", "prevItemComment", "loop", "st", "prev", "isPair", "valueNode", "keyStart", "keyNode", "valueProps", "pair", "Pair", "map", "mapIncludes", "endRange", "expectedEnd", "ce", "ee", "cePos", "name", "msg", "end", "resolveEnd", "resolveCollection", "CN", "ctx", "token", "onError", "tagName", "tag", "coll", "resolveBlockMap", "resolveBlockSeq", "resolveFlowCollection", "Coll", "composeCollection", "props", "tagToken", "msg", "anchor", "nl", "lastProp", "expType", "YAMLMap", "YAMLSeq", "t", "kt", "res", "node", "isNode", "Scalar", "resolveBlockScalar", "ctx", "scalar", "onError", "start", "header", "parseBlockScalarHeader", "type", "Scalar", "lines", "splitLines", "chompStart", "i", "content", "value", "end", "trimIndent", "offset", "contentStart", "indent", "sep", "prevMoreIndented", "crlf", "message", "props", "strict", "source", "mode", "chomp", "error", "ch", "n", "hasSpace", "comment", "length", "token", "ts", "split", "first", "m", "resolveFlowScalar", "scalar", "strict", "onError", "offset", "type", "source", "end", "_type", "value", "_onError", "rel", "code", "msg", "Scalar", "plainValue", "singleQuotedValue", "doubleQuotedValue", "valueEnd", "re", "resolveEnd", "badChar", "foldLines", "first", "line", "match", "res", "sep", "pos", "last", "i", "ch", "fold", "foldNewline", "next", "cc", "escapeCodes", "length", "parseCharCode", "raw", "wsStart", "composeScalar", "ctx", "token", "tagToken", "onError", "value", "type", "comment", "range", "resolveBlockScalar", "resolveFlowScalar", "tagName", "msg", "tag", "SCALAR", "findScalarTagByName", "findScalarTagByTest", "scalar", "res", "isScalar", "Scalar", "error", "schema", "matchWithTest", "kt", "atKey", "directives", "compat", "ts", "cs", "emptyScalarPosition", "offset", "before", "pos", "i", "st", "CN", "composeNode", "composeEmptyNode", "ctx", "token", "props", "onError", "atKey", "spaceBefore", "comment", "anchor", "tag", "node", "isSrcToken", "composeAlias", "composeScalar", "composeCollection", "message", "isScalar", "offset", "before", "pos", "end", "emptyScalarPosition", "options", "source", "alias", "Alias", "valueEnd", "re", "resolveEnd", "composeDoc", "options", "directives", "offset", "start", "value", "end", "onError", "opts", "doc", "Document", "ctx", "props", "resolveProps", "composeNode", "composeEmptyNode", "contentEnd", "re", "resolveEnd", "getErrorPos", "src", "offset", "source", "parsePrelude", "prelude", "comment", "atComment", "afterEmptyLine", "Composer", "options", "code", "message", "warning", "pos", "YAMLWarning", "YAMLParseError", "Directives", "doc", "afterDoc", "dc", "isCollection", "it", "isPair", "cb", "tokens", "forceDoc", "endOffset", "token", "composeDoc", "msg", "error", "end", "resolveEnd", "opts", "Document", "cst_exports", "__export", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "createScalarToken", "isCollection", "isScalar", "prettyToken", "resolveAsScalar", "setScalarValue", "stringify", "tokenType", "visit", "resolveAsScalar", "token", "strict", "onError", "_onError", "pos", "code", "message", "offset", "YAMLParseError", "resolveFlowScalar", "resolveBlockScalar", "createScalarToken", "value", "context", "implicitKey", "indent", "inFlow", "type", "source", "stringifyString", "end", "he", "head", "body", "props", "addEndtoBlockProps", "setScalarValue", "afterKey", "header", "setBlockScalarValue", "setFlowScalarValue", "key", "st", "oa", "tok", "nl", "stringify", "cst", "stringifyToken", "stringifyItem", "token", "res", "tok", "item", "st", "start", "key", "sep", "value", "BREAK", "SKIP", "REMOVE", "visit", "cst", "visitor", "_visit", "path", "item", "field", "index", "tok", "parent", "coll", "ctrl", "token", "i", "ci", "BOM", "DOCUMENT", "FLOW_END", "SCALAR", "isCollection", "token", "isScalar", "prettyToken", "tokenType", "source", "isEmpty", "ch", "hexDigits", "tagChars", "flowIndicatorChars", "invalidAnchorChars", "isNotAnchorChar", "Lexer", "source", "incomplete", "next", "i", "n", "offset", "indent", "dt", "end", "state", "line", "BOM", "dirEnd", "cs", "sp", "DOCUMENT", "s", "ch0", "ch1", "nl", "FLOW_END", "quote", "qb", "loop", "lastChar", "SCALAR", "inFlow", "allowEmpty", "allowTabs", "test", "LineCounter", "offset", "low", "high", "mid", "start", "includesToken", "list", "type", "i", "findNonEmptyIndex", "isFlowToken", "token", "getPrevProps", "parent", "it", "getFirstKeyStartProps", "prev", "loop", "fixFlowSeqItems", "fc", "Parser", "onNewLine", "Lexer", "source", "incomplete", "lexeme", "tokenType", "message", "top", "n", "error", "last", "st", "doc", "bv", "scalar", "start", "sep", "map", "nl", "end", "atMapIndent", "atNextItem", "key", "fs", "seq", "indent", "docEnd", "parseOptions", "options", "prettyErrors", "LineCounter", "parseAllDocuments", "source", "lineCounter", "parser", "Parser", "composer", "Composer", "docs", "doc", "prettifyError", "parseDocument", "_doc", "YAMLParseError", "parse", "src", "reviver", "_reviver", "warning", "warn", "stringify", "value", "replacer", "_replacer", "indent", "keepUndefined", "isDocument", "Document", "browser_default", "dist_exports", "Buffer", "str", "label", "rs", "caStr", "sha256Sync", "ascii", "K", "h0", "h1", "h2", "h3", "h4", "h5", "h6", "h7", "msg", "l", "withOne", "view", "i", "w", "j", "s0", "s1", "a", "b", "c", "d", "e", "g", "h", "S1", "ch", "temp1", "S0", "maj", "temp2", "x", "pemToBinary", "pem", "binaryToHex", "binary", "hex", "safeLoad", "browser_default", "URI", "URI_Producer", "PROXY_PRODUCERS", "ClashMeta_Producer", "Singbox_Producer", "V2Ray_Producer", "$", "getTrojanURIParser", "line", "_", "body", "url", "query", "trojan", "network", "wsOpts", "IPV4_REGEX", "IPV6_REGEX", "isIPv4", "ip", "isIPv6", "isNotBlank", "getIfNotBlank", "defaultValue", "isPresent", "obj", "attr", "keys", "result", "key", "getIfPresent", "isValidUUID", "uuid", "isValidPortNumber", "port", "getRandomInt", "min", "max", "getRandomPort", "portString", "portParts", "randomPart", "numberToString", "value", "ipVersions", "proxies", "type", "opts", "list", "proxy", "httpPath", "httpHost", "path", "host", "networkPath", "reg", "ed", "ipVersionParser", "parsedProxy", "strategy", "detourParser", "networkParser", "tfoParser", "smuxParser", "smux", "wsParser", "transport", "wsPath", "wsHeaders", "max_early_data", "early_data_header_name", "headers", "wsHost", "item", "h1Parser", "method", "h1Path", "h1Headers", "h2Parser", "grpcParser", "serviceName", "tlsParser", "sshParser", "httpParser", "k", "socks5Parser", "shadowTLSParser", "ssPart", "stPart", "ssParser", "optArr", "ssrParser", "vmessParser", "vlessParser", "trojanParser", "hysteriaParser", "hysteria2Parser", "p", "tuic5Parser", "anytlsParser", "wireguardParser", "local_address", "r", "peer", "gBase64", "userinfo", "net", "vmessTransportPath", "vmessTransportHost", "security", "isReality", "sid", "pbk", "spx", "publicKey", "shortId", "spiderX", "alpn", "allowInsecure", "sni", "fp", "flow", "extra", "mode", "vlessType", "vlessTransport", "authority", "vlessTransportServiceName", "vlessTransportPath", "vlessTransportHost", "trojanTransport", "trojanType", "trojanTransportServiceName", "trojanTransportAuthority", "trojanTransportPath", "trojanTransportHost", "trojanFp", "trojanAlpn", "trojanIsReality", "trojanSid", "trojanPbk", "trojanSpx", "trojanSecurity", "trojanMode", "trojanExtra", "hysteria2params", "hysteriaParams", "tuicParams", "anytlsParams", "wireguardParams", "err", "PROXY_PARSERS", "URI_PROXY", "__", "tls", "username", "password", "server", "name", "URI_SOCKS", "auth", "parsed", "URI_SS", "content", "serverAndPortArray", "rawUserInfoStr", "userInfoStr", "v2rayPlugin", "serverAndPort", "portIdx", "userInfo", "pluginMatch", "shadowTlsMatch", "pluginInfo", "params", "val", "version", "address", "URI_SSR", "splitIdx", "other_params", "URI_VMess", "partitions", "part", "obfs_host", "base64Line", "qs", "addon", "valueRaw", "___", "cipher", "httpupgrade", "transportHost", "parsedHost", "transportPath", "URI_VLESS", "isShadowrocket", "base64", "other", "addons", "URI_AnyTLS", "URI_Hysteria2", "ports", "____", "_____", "______", "_______", "________", "hop_interval", "keepalive", "URI_Hysteria", "URI_TUIC", "passwordParts", "URI_WireGuard", "privateKey", "URI_Trojan", "matched", "newLine", "PROXY_PREPROCESSORS", "HTML", "raw", "Base64Encoded", "decoded", "fallbackBase64Encoded", "Clash", "includeProxies", "afterReplace", "afterTrim", "globalClientFingerprint", "SSD", "output", "ssdinfo", "servers", "hostname", "tag", "plugin", "FullConfig", "ProxyUtils", "preprocess", "processor", "parse", "lines", "lastParser", "success", "error", "tryParse", "lastParse", "parser", "produce", "targetPlatform", "producer", "sni_off_supported", "safeMatch", "formatTransportPath", "transporthost", "isIP", "worker_default", "request", "target", "nodeArray", "parseRequestParams", "renderUsageInstructions", "processNodeConversion", "formatResponse", "inputnode", "results", "processedResults", "input", "processSingleInput", "concatValues", "targetProp", "sourceProp", "processProxyItems", "randomHeaders", "platform", "data", "response", "fetchResponse", "proxiesData", "isProxies", "convertProxies", "isBase64", "isValidURL", "splitData", "res", "platformConfigs", "format", "items", "nameField", "nameCount", "originalName", "suffix", "newName", "isBrowser", "userAgent", "headersObj", "sanitizedCD", "sanitizeContentDisposition", "contentDisposition", "filenameMatch", "originalFilename", "fallback", "encoded", "textData", "jsonData"]
}
